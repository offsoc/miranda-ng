/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steammessages_auth.steamclient.proto */

#ifndef PROTOBUF_C_steammessages_5fauth_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_C_steammessages_5fauth_2esteamclient_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages_base.pb-c.h"
#include "steammessages_unified_base.steamclient.pb-c.h"
#include "enums.pb-c.h"

struct CAuthenticationGetPasswordRSAPublicKeyRequest;
struct CAuthenticationGetPasswordRSAPublicKeyResponse;
struct CAuthenticationDeviceDetails;
struct CAuthenticationBeginAuthSessionViaQRRequest;
struct CAuthenticationAllowedConfirmation;
struct CAuthenticationBeginAuthSessionViaQRResponse;
struct CAuthenticationBeginAuthSessionViaCredentialsRequest;
struct CAuthenticationBeginAuthSessionViaCredentialsResponse;
struct CAuthenticationPollAuthSessionStatusRequest;
struct CAuthenticationPollAuthSessionStatusResponse;
struct CAuthenticationGetAuthSessionInfoRequest;
struct CAuthenticationGetAuthSessionInfoResponse;
struct CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest;
struct CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse;
struct CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest;
struct CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse;
struct CAuthenticationAccessTokenGenerateForAppRequest;
struct CAuthenticationAccessTokenGenerateForAppResponse;
struct CAuthenticationRefreshTokenEnumerateRequest;
struct CAuthenticationRefreshTokenEnumerateResponse;
struct CAuthenticationRefreshTokenEnumerateResponse__TokenUsageEvent;
struct CAuthenticationRefreshTokenEnumerateResponse__RefreshTokenDescription;
struct CAuthenticationGetAuthSessionsForAccountRequest;
struct CAuthenticationGetAuthSessionsForAccountResponse;
struct CAuthenticationMigrateMobileSessionRequest;
struct CAuthenticationMigrateMobileSessionResponse;
struct CAuthenticationTokenRevokeRequest;
struct CAuthenticationTokenRevokeResponse;
struct CAuthenticationRefreshTokenRevokeRequest;
struct CAuthenticationRefreshTokenRevokeResponse;
struct CAuthenticationSupportQueryRefreshTokensByAccountRequest;
struct CSupportRefreshTokenDescription;
struct CSupportRefreshTokenDescription__TokenUsageEvent;
struct CAuthenticationSupportQueryRefreshTokensByAccountResponse;
struct CAuthenticationSupportQueryRefreshTokenByIDRequest;
struct CAuthenticationSupportQueryRefreshTokenByIDResponse;
struct CAuthenticationSupportRevokeTokenRequest;
struct CAuthenticationSupportRevokeTokenResponse;
struct CAuthenticationSupportGetTokenHistoryRequest;
struct CSupportRefreshTokenAudit;
struct CAuthenticationSupportGetTokenHistoryResponse;
struct CCloudGamingCreateNonceRequest;
struct CCloudGamingCreateNonceResponse;
struct CCloudGamingGetTimeRemainingRequest;
struct CCloudGamingTimeRemaining;
struct CCloudGamingGetTimeRemainingResponse;


/* --- enums --- */

typedef enum _EAuthTokenPlatformType {
  EAUTH_TOKEN_PLATFORM_TYPE__k_EAuthTokenPlatformType_Unknown = 0,
  EAUTH_TOKEN_PLATFORM_TYPE__k_EAuthTokenPlatformType_SteamClient = 1,
  EAUTH_TOKEN_PLATFORM_TYPE__k_EAuthTokenPlatformType_WebBrowser = 2,
  EAUTH_TOKEN_PLATFORM_TYPE__k_EAuthTokenPlatformType_MobileApp = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EAUTH_TOKEN_PLATFORM_TYPE)
} EAuthTokenPlatformType;
typedef enum _EAuthSessionGuardType {
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_Unknown = 0,
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_None = 1,
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_EmailCode = 2,
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_DeviceCode = 3,
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_DeviceConfirmation = 4,
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_EmailConfirmation = 5,
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_MachineToken = 6,
  EAUTH_SESSION_GUARD_TYPE__k_EAuthSessionGuardType_LegacyMachineAuth = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EAUTH_SESSION_GUARD_TYPE)
} EAuthSessionGuardType;
typedef enum _EAuthSessionSecurityHistory {
  EAUTH_SESSION_SECURITY_HISTORY__k_EAuthSessionSecurityHistory_Invalid = 0,
  EAUTH_SESSION_SECURITY_HISTORY__k_EAuthSessionSecurityHistory_UsedPreviously = 1,
  EAUTH_SESSION_SECURITY_HISTORY__k_EAuthSessionSecurityHistory_NoPriorHistory = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EAUTH_SESSION_SECURITY_HISTORY)
} EAuthSessionSecurityHistory;
typedef enum _ETokenRenewalType {
  ETOKEN_RENEWAL_TYPE__k_ETokenRenewalType_None = 0,
  ETOKEN_RENEWAL_TYPE__k_ETokenRenewalType_Allow = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ETOKEN_RENEWAL_TYPE)
} ETokenRenewalType;
typedef enum _EAuthTokenRevokeAction {
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokeLogout = 0,
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokePermanent = 1,
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokeReplaced = 2,
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokeSupport = 3,
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokeConsume = 4,
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokeNonRememberedLogout = 5,
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokeNonRememberedPermanent = 6,
  EAUTH_TOKEN_REVOKE_ACTION__k_EAuthTokenRevokeAutomatic = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EAUTH_TOKEN_REVOKE_ACTION)
} EAuthTokenRevokeAction;
typedef enum _EAuthTokenState {
  EAUTH_TOKEN_STATE__k_EAuthTokenState_Invalid = 0,
  EAUTH_TOKEN_STATE__k_EAuthTokenState_New = 1,
  EAUTH_TOKEN_STATE__k_EAuthTokenState_Confirmed = 2,
  EAUTH_TOKEN_STATE__k_EAuthTokenState_Issued = 3,
  EAUTH_TOKEN_STATE__k_EAuthTokenState_Denied = 4,
  EAUTH_TOKEN_STATE__k_EAuthTokenState_LoggedOut = 5,
  EAUTH_TOKEN_STATE__k_EAuthTokenState_Consumed = 6,
  EAUTH_TOKEN_STATE__k_EAuthTokenState_Revoked = 99
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EAUTH_TOKEN_STATE)
} EAuthTokenState;

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    eauth_token_platform_type__descriptor;
extern const ProtobufCEnumDescriptor    eauth_session_guard_type__descriptor;
extern const ProtobufCEnumDescriptor    eauth_session_security_history__descriptor;
extern const ProtobufCEnumDescriptor    etoken_renewal_type__descriptor;
extern const ProtobufCEnumDescriptor    eauth_token_revoke_action__descriptor;
extern const ProtobufCEnumDescriptor    eauth_token_state__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__get_password_rsapublic_key__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__get_password_rsapublic_key__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__device_details__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__begin_auth_session_via_qr__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__allowed_confirmation__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__begin_auth_session_via_qr__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__begin_auth_session_via_credentials__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__begin_auth_session_via_credentials__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__poll_auth_session_status__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__poll_auth_session_status__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__get_auth_session_info__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__get_auth_session_info__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__update_auth_session_with_mobile_confirmation__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__update_auth_session_with_mobile_confirmation__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__update_auth_session_with_steam_guard_code__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__update_auth_session_with_steam_guard_code__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__access_token__generate_for_app__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__access_token__generate_for_app__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__refresh_token__enumerate__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__refresh_token__enumerate__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__refresh_token__enumerate__response__token_usage_event__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__refresh_token__enumerate__response__refresh_token_description__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__get_auth_sessions_for_account__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__get_auth_sessions_for_account__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__migrate_mobile_session__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__migrate_mobile_session__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__token__revoke__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__token__revoke__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__refresh_token__revoke__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication__refresh_token__revoke__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__query_refresh_tokens_by_account__request__descriptor;
extern const ProtobufCMessageDescriptor csupport_refresh_token_description__descriptor;
extern const ProtobufCMessageDescriptor csupport_refresh_token_description__token_usage_event__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__query_refresh_tokens_by_account__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__query_refresh_token_by_id__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__query_refresh_token_by_id__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__revoke_token__request__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__revoke_token__response__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__get_token_history__request__descriptor;
extern const ProtobufCMessageDescriptor csupport_refresh_token_audit__descriptor;
extern const ProtobufCMessageDescriptor cauthentication_support__get_token_history__response__descriptor;
extern const ProtobufCMessageDescriptor ccloud_gaming__create_nonce__request__descriptor;
extern const ProtobufCMessageDescriptor ccloud_gaming__create_nonce__response__descriptor;
extern const ProtobufCMessageDescriptor ccloud_gaming__get_time_remaining__request__descriptor;
extern const ProtobufCMessageDescriptor ccloud_gaming__time_remaining__descriptor;
extern const ProtobufCMessageDescriptor ccloud_gaming__get_time_remaining__response__descriptor;
extern const ProtobufCServiceDescriptor authentication__descriptor;
extern const ProtobufCServiceDescriptor authentication_support__descriptor;
extern const ProtobufCServiceDescriptor cloud_gaming__descriptor;

/* --- messages --- */

extern "C" void message_init_generic(const ProtobufCMessageDescriptor * desc, ProtobufCMessage * message);

struct CAuthenticationGetPasswordRSAPublicKeyRequest : public ProtobufCppMessage
{
  CAuthenticationGetPasswordRSAPublicKeyRequest() :
     ProtobufCppMessage(cauthentication__get_password_rsapublic_key__request__descriptor)
  {}

  char *account_name;
};

struct CAuthenticationGetPasswordRSAPublicKeyResponse : public ProtobufCppMessage
{
  CAuthenticationGetPasswordRSAPublicKeyResponse() :
     ProtobufCppMessage(cauthentication__get_password_rsapublic_key__response__descriptor)
  {}

  char *publickey_mod;
  char *publickey_exp;
  protobuf_c_boolean has_timestamp;
  uint64_t timestamp;
};

struct CAuthenticationDeviceDetails : public ProtobufCppMessage
{
  CAuthenticationDeviceDetails() :
     ProtobufCppMessage(cauthentication__device_details__descriptor)
  {}

  char *device_friendly_name;
  protobuf_c_boolean has_platform_type;
  EAuthTokenPlatformType platform_type;
  protobuf_c_boolean has_os_type;
  int32_t os_type;
  protobuf_c_boolean has_gaming_device_type;
  uint32_t gaming_device_type;
  protobuf_c_boolean has_client_count;
  uint32_t client_count;
  protobuf_c_boolean has_machine_id;
  ProtobufCBinaryData machine_id;
};

struct CAuthenticationBeginAuthSessionViaQRRequest : public ProtobufCppMessage
{
  CAuthenticationBeginAuthSessionViaQRRequest() :
     ProtobufCppMessage(cauthentication__begin_auth_session_via_qr__request__descriptor)
  {}

  char *device_friendly_name;
  protobuf_c_boolean has_platform_type;
  EAuthTokenPlatformType platform_type;
  CAuthenticationDeviceDetails *device_details;
  char *website_id;
};

struct CAuthenticationAllowedConfirmation : public ProtobufCppMessage
{
  CAuthenticationAllowedConfirmation() :
     ProtobufCppMessage(cauthentication__allowed_confirmation__descriptor)
  {}

  protobuf_c_boolean has_confirmation_type;
  EAuthSessionGuardType confirmation_type;
  char *associated_message;
};

struct CAuthenticationBeginAuthSessionViaQRResponse : public ProtobufCppMessage
{
  CAuthenticationBeginAuthSessionViaQRResponse() :
     ProtobufCppMessage(cauthentication__begin_auth_session_via_qr__response__descriptor)
  {}

  protobuf_c_boolean has_client_id;
  uint64_t client_id;
  char *challenge_url;
  protobuf_c_boolean has_request_id;
  ProtobufCBinaryData request_id;
  protobuf_c_boolean has_interval;
  float interval;
  size_t n_allowed_confirmations;
  CAuthenticationAllowedConfirmation **allowed_confirmations;
  protobuf_c_boolean has_version;
  int32_t version;
};

struct CAuthenticationBeginAuthSessionViaCredentialsRequest : public ProtobufCppMessage
{
  CAuthenticationBeginAuthSessionViaCredentialsRequest() :
     ProtobufCppMessage(cauthentication__begin_auth_session_via_credentials__request__descriptor)
  {}

  char *device_friendly_name;
  char *account_name;
  char *encrypted_password;
  protobuf_c_boolean has_encryption_timestamp;
  uint64_t encryption_timestamp;
  protobuf_c_boolean has_remember_login;
  protobuf_c_boolean remember_login;
  protobuf_c_boolean has_platform_type;
  EAuthTokenPlatformType platform_type;
  protobuf_c_boolean has_persistence;
  ESessionPersistence persistence;
  char *website_id;
  CAuthenticationDeviceDetails *device_details;
  char *guard_data;
  protobuf_c_boolean has_language;
  uint32_t language;
  protobuf_c_boolean has_qos_level;
  int32_t qos_level;
};

struct CAuthenticationBeginAuthSessionViaCredentialsResponse : public ProtobufCppMessage
{
  CAuthenticationBeginAuthSessionViaCredentialsResponse() :
     ProtobufCppMessage(cauthentication__begin_auth_session_via_credentials__response__descriptor)
  {}

  protobuf_c_boolean has_client_id;
  uint64_t client_id;
  protobuf_c_boolean has_request_id;
  ProtobufCBinaryData request_id;
  protobuf_c_boolean has_interval;
  float interval;
  size_t n_allowed_confirmations;
  CAuthenticationAllowedConfirmation **allowed_confirmations;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  char *weak_token;
  char *agreement_session_url;
  char *extended_error_message;
};

struct CAuthenticationPollAuthSessionStatusRequest : public ProtobufCppMessage
{
  CAuthenticationPollAuthSessionStatusRequest() :
     ProtobufCppMessage(cauthentication__poll_auth_session_status__request__descriptor)
  {}

  protobuf_c_boolean has_client_id;
  uint64_t client_id;
  protobuf_c_boolean has_request_id;
  ProtobufCBinaryData request_id;
  protobuf_c_boolean has_token_to_revoke;
  uint64_t token_to_revoke;
};

struct CAuthenticationPollAuthSessionStatusResponse : public ProtobufCppMessage
{
  CAuthenticationPollAuthSessionStatusResponse() :
     ProtobufCppMessage(cauthentication__poll_auth_session_status__response__descriptor)
  {}

  protobuf_c_boolean has_new_client_id;
  uint64_t new_client_id;
  char *new_challenge_url;
  char *refresh_token;
  char *access_token;
  protobuf_c_boolean has_had_remote_interaction;
  protobuf_c_boolean had_remote_interaction;
  char *account_name;
  char *new_guard_data;
  char *agreement_session_url;
};

struct CAuthenticationGetAuthSessionInfoRequest : public ProtobufCppMessage
{
  CAuthenticationGetAuthSessionInfoRequest() :
     ProtobufCppMessage(cauthentication__get_auth_session_info__request__descriptor)
  {}

  protobuf_c_boolean has_client_id;
  uint64_t client_id;
};

struct CAuthenticationGetAuthSessionInfoResponse : public ProtobufCppMessage
{
  CAuthenticationGetAuthSessionInfoResponse() :
     ProtobufCppMessage(cauthentication__get_auth_session_info__response__descriptor)
  {}

  char *ip;
  char *geoloc;
  char *city;
  char *state;
  char *country;
  protobuf_c_boolean has_platform_type;
  EAuthTokenPlatformType platform_type;
  char *device_friendly_name;
  protobuf_c_boolean has_version;
  int32_t version;
  protobuf_c_boolean has_login_history;
  EAuthSessionSecurityHistory login_history;
  protobuf_c_boolean has_requestor_location_mismatch;
  protobuf_c_boolean requestor_location_mismatch;
  protobuf_c_boolean has_high_usage_login;
  protobuf_c_boolean high_usage_login;
  protobuf_c_boolean has_requested_persistence;
  ESessionPersistence requested_persistence;
};

struct CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest : public ProtobufCppMessage
{
  CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest() :
     ProtobufCppMessage(cauthentication__update_auth_session_with_mobile_confirmation__request__descriptor)
  {}

  protobuf_c_boolean has_version;
  int32_t version;
  protobuf_c_boolean has_client_id;
  uint64_t client_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_signature;
  ProtobufCBinaryData signature;
  protobuf_c_boolean has_confirm;
  protobuf_c_boolean confirm;
  protobuf_c_boolean has_persistence;
  ESessionPersistence persistence;
};

struct CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse : public ProtobufCppMessage
{
  CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse() :
     ProtobufCppMessage(cauthentication__update_auth_session_with_mobile_confirmation__response__descriptor)
  {}

};

struct CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest : public ProtobufCppMessage
{
  CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest() :
     ProtobufCppMessage(cauthentication__update_auth_session_with_steam_guard_code__request__descriptor)
  {}

  protobuf_c_boolean has_client_id;
  uint64_t client_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  char *code;
  protobuf_c_boolean has_code_type;
  EAuthSessionGuardType code_type;
};

struct CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse : public ProtobufCppMessage
{
  CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse() :
     ProtobufCppMessage(cauthentication__update_auth_session_with_steam_guard_code__response__descriptor)
  {}

  char *agreement_session_url;
};

struct CAuthenticationAccessTokenGenerateForAppRequest : public ProtobufCppMessage
{
  CAuthenticationAccessTokenGenerateForAppRequest() :
     ProtobufCppMessage(cauthentication__access_token__generate_for_app__request__descriptor)
  {}

  char *refresh_token;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_renewal_type;
  ETokenRenewalType renewal_type;
};

struct CAuthenticationAccessTokenGenerateForAppResponse : public ProtobufCppMessage
{
  CAuthenticationAccessTokenGenerateForAppResponse() :
     ProtobufCppMessage(cauthentication__access_token__generate_for_app__response__descriptor)
  {}

  char *access_token;
  char *refresh_token;
};

struct CAuthenticationRefreshTokenEnumerateRequest : public ProtobufCppMessage
{
  CAuthenticationRefreshTokenEnumerateRequest() :
     ProtobufCppMessage(cauthentication__refresh_token__enumerate__request__descriptor)
  {}

};

struct CAuthenticationRefreshTokenEnumerateResponse__TokenUsageEvent : public ProtobufCppMessage
{
  CAuthenticationRefreshTokenEnumerateResponse__TokenUsageEvent() :
     ProtobufCppMessage(cauthentication__refresh_token__enumerate__response__token_usage_event__descriptor)
  {}

  protobuf_c_boolean has_time;
  uint32_t time;
  CMsgIPAddress *ip;
  char *locale;
  char *country;
  char *state;
  char *city;
};

struct CAuthenticationRefreshTokenEnumerateResponse__RefreshTokenDescription : public ProtobufCppMessage
{
  CAuthenticationRefreshTokenEnumerateResponse__RefreshTokenDescription() :
     ProtobufCppMessage(cauthentication__refresh_token__enumerate__response__refresh_token_description__descriptor)
  {}

  protobuf_c_boolean has_token_id;
  uint64_t token_id;
  char *token_description;
  protobuf_c_boolean has_time_updated;
  uint32_t time_updated;
  protobuf_c_boolean has_platform_type;
  EAuthTokenPlatformType platform_type;
  protobuf_c_boolean has_logged_in;
  protobuf_c_boolean logged_in;
  protobuf_c_boolean has_os_platform;
  uint32_t os_platform;
  protobuf_c_boolean has_auth_type;
  uint32_t auth_type;
  protobuf_c_boolean has_gaming_device_type;
  uint32_t gaming_device_type;
  CAuthenticationRefreshTokenEnumerateResponse__TokenUsageEvent *first_seen;
  CAuthenticationRefreshTokenEnumerateResponse__TokenUsageEvent *last_seen;
  protobuf_c_boolean has_os_type;
  int32_t os_type;
};

struct CAuthenticationRefreshTokenEnumerateResponse : public ProtobufCppMessage
{
  CAuthenticationRefreshTokenEnumerateResponse() :
     ProtobufCppMessage(cauthentication__refresh_token__enumerate__response__descriptor)
  {}

  size_t n_refresh_tokens;
  CAuthenticationRefreshTokenEnumerateResponse__RefreshTokenDescription **refresh_tokens;
  protobuf_c_boolean has_requesting_token;
  uint64_t requesting_token;
};

struct CAuthenticationGetAuthSessionsForAccountRequest : public ProtobufCppMessage
{
  CAuthenticationGetAuthSessionsForAccountRequest() :
     ProtobufCppMessage(cauthentication__get_auth_sessions_for_account__request__descriptor)
  {}

};

struct CAuthenticationGetAuthSessionsForAccountResponse : public ProtobufCppMessage
{
  CAuthenticationGetAuthSessionsForAccountResponse() :
     ProtobufCppMessage(cauthentication__get_auth_sessions_for_account__response__descriptor)
  {}

  size_t n_client_ids;
  uint64_t *client_ids;
};

struct CAuthenticationMigrateMobileSessionRequest : public ProtobufCppMessage
{
  CAuthenticationMigrateMobileSessionRequest() :
     ProtobufCppMessage(cauthentication__migrate_mobile_session__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  char *token;
  char *signature;
};

struct CAuthenticationMigrateMobileSessionResponse : public ProtobufCppMessage
{
  CAuthenticationMigrateMobileSessionResponse() :
     ProtobufCppMessage(cauthentication__migrate_mobile_session__response__descriptor)
  {}

  char *refresh_token;
  char *access_token;
};

struct CAuthenticationTokenRevokeRequest : public ProtobufCppMessage
{
  CAuthenticationTokenRevokeRequest() :
     ProtobufCppMessage(cauthentication__token__revoke__request__descriptor)
  {}

  char *token;
  protobuf_c_boolean has_revoke_action;
  EAuthTokenRevokeAction revoke_action;
};

struct CAuthenticationTokenRevokeResponse : public ProtobufCppMessage
{
  CAuthenticationTokenRevokeResponse() :
     ProtobufCppMessage(cauthentication__token__revoke__response__descriptor)
  {}

};

struct CAuthenticationRefreshTokenRevokeRequest : public ProtobufCppMessage
{
  CAuthenticationRefreshTokenRevokeRequest() :
     ProtobufCppMessage(cauthentication__refresh_token__revoke__request__descriptor)
  {}

  protobuf_c_boolean has_token_id;
  uint64_t token_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_revoke_action;
  EAuthTokenRevokeAction revoke_action;
  protobuf_c_boolean has_signature;
  ProtobufCBinaryData signature;
};

struct CAuthenticationRefreshTokenRevokeResponse : public ProtobufCppMessage
{
  CAuthenticationRefreshTokenRevokeResponse() :
     ProtobufCppMessage(cauthentication__refresh_token__revoke__response__descriptor)
  {}

};

struct CAuthenticationSupportQueryRefreshTokensByAccountRequest : public ProtobufCppMessage
{
  CAuthenticationSupportQueryRefreshTokensByAccountRequest() :
     ProtobufCppMessage(cauthentication_support__query_refresh_tokens_by_account__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_include_revoked_tokens;
  protobuf_c_boolean include_revoked_tokens;
};

struct CSupportRefreshTokenDescription__TokenUsageEvent : public ProtobufCppMessage
{
  CSupportRefreshTokenDescription__TokenUsageEvent() :
     ProtobufCppMessage(csupport_refresh_token_description__token_usage_event__descriptor)
  {}

  protobuf_c_boolean has_time;
  uint32_t time;
  CMsgIPAddress *ip;
  char *country;
  char *state;
  char *city;
};

struct CSupportRefreshTokenDescription : public ProtobufCppMessage
{
  CSupportRefreshTokenDescription() :
     ProtobufCppMessage(csupport_refresh_token_description__descriptor)
  {}

  protobuf_c_boolean has_token_id;
  uint64_t token_id;
  char *token_description;
  protobuf_c_boolean has_time_updated;
  uint32_t time_updated;
  protobuf_c_boolean has_platform_type;
  EAuthTokenPlatformType platform_type;
  protobuf_c_boolean has_token_state;
  EAuthTokenState token_state;
  protobuf_c_boolean has_owner_steamid;
  uint64_t owner_steamid;
  protobuf_c_boolean has_os_platform;
  uint32_t os_platform;
  protobuf_c_boolean has_os_type;
  int32_t os_type;
  protobuf_c_boolean has_auth_type;
  uint32_t auth_type;
  protobuf_c_boolean has_gaming_device_type;
  uint32_t gaming_device_type;
  CSupportRefreshTokenDescription__TokenUsageEvent *first_seen;
  CSupportRefreshTokenDescription__TokenUsageEvent *last_seen;
};

struct CAuthenticationSupportQueryRefreshTokensByAccountResponse : public ProtobufCppMessage
{
  CAuthenticationSupportQueryRefreshTokensByAccountResponse() :
     ProtobufCppMessage(cauthentication_support__query_refresh_tokens_by_account__response__descriptor)
  {}

  size_t n_refresh_tokens;
  CSupportRefreshTokenDescription **refresh_tokens;
  protobuf_c_boolean has_last_token_reset;
  int32_t last_token_reset;
};

struct CAuthenticationSupportQueryRefreshTokenByIDRequest : public ProtobufCppMessage
{
  CAuthenticationSupportQueryRefreshTokenByIDRequest() :
     ProtobufCppMessage(cauthentication_support__query_refresh_token_by_id__request__descriptor)
  {}

  protobuf_c_boolean has_token_id;
  uint64_t token_id;
};

struct CAuthenticationSupportQueryRefreshTokenByIDResponse : public ProtobufCppMessage
{
  CAuthenticationSupportQueryRefreshTokenByIDResponse() :
     ProtobufCppMessage(cauthentication_support__query_refresh_token_by_id__response__descriptor)
  {}

  size_t n_refresh_tokens;
  CSupportRefreshTokenDescription **refresh_tokens;
};

struct CAuthenticationSupportRevokeTokenRequest : public ProtobufCppMessage
{
  CAuthenticationSupportRevokeTokenRequest() :
     ProtobufCppMessage(cauthentication_support__revoke_token__request__descriptor)
  {}

  protobuf_c_boolean has_token_id;
  uint64_t token_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};

struct CAuthenticationSupportRevokeTokenResponse : public ProtobufCppMessage
{
  CAuthenticationSupportRevokeTokenResponse() :
     ProtobufCppMessage(cauthentication_support__revoke_token__response__descriptor)
  {}

};

struct CAuthenticationSupportGetTokenHistoryRequest : public ProtobufCppMessage
{
  CAuthenticationSupportGetTokenHistoryRequest() :
     ProtobufCppMessage(cauthentication_support__get_token_history__request__descriptor)
  {}

  protobuf_c_boolean has_token_id;
  uint64_t token_id;
};

struct CSupportRefreshTokenAudit : public ProtobufCppMessage
{
  CSupportRefreshTokenAudit() :
     ProtobufCppMessage(csupport_refresh_token_audit__descriptor)
  {}

  protobuf_c_boolean has_action;
  int32_t action;
  protobuf_c_boolean has_time;
  uint32_t time;
  CMsgIPAddress *ip;
  protobuf_c_boolean has_actor;
  uint64_t actor;
};

struct CAuthenticationSupportGetTokenHistoryResponse : public ProtobufCppMessage
{
  CAuthenticationSupportGetTokenHistoryResponse() :
     ProtobufCppMessage(cauthentication_support__get_token_history__response__descriptor)
  {}

  size_t n_history;
  CSupportRefreshTokenAudit **history;
};

struct CCloudGamingCreateNonceRequest : public ProtobufCppMessage
{
  CCloudGamingCreateNonceRequest() :
     ProtobufCppMessage(ccloud_gaming__create_nonce__request__descriptor)
  {}

  char *platform;
  protobuf_c_boolean has_appid;
  uint32_t appid;
};

struct CCloudGamingCreateNonceResponse : public ProtobufCppMessage
{
  CCloudGamingCreateNonceResponse() :
     ProtobufCppMessage(ccloud_gaming__create_nonce__response__descriptor)
  {}

  char *nonce;
  protobuf_c_boolean has_expiry;
  uint32_t expiry;
};

struct CCloudGamingGetTimeRemainingRequest : public ProtobufCppMessage
{
  CCloudGamingGetTimeRemainingRequest() :
     ProtobufCppMessage(ccloud_gaming__get_time_remaining__request__descriptor)
  {}

  char *platform;
  size_t n_appid_list;
  uint32_t *appid_list;
};

struct CCloudGamingTimeRemaining : public ProtobufCppMessage
{
  CCloudGamingTimeRemaining() :
     ProtobufCppMessage(ccloud_gaming__time_remaining__descriptor)
  {}

  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_minutes_remaining;
  uint32_t minutes_remaining;
};

struct CCloudGamingGetTimeRemainingResponse : public ProtobufCppMessage
{
  CCloudGamingGetTimeRemainingResponse() :
     ProtobufCppMessage(ccloud_gaming__get_time_remaining__response__descriptor)
  {}

  size_t n_entries;
  CCloudGamingTimeRemaining **entries;
};

size_t cauthentication__get_password_rsapublic_key__request__get_packed_size
                     (const CAuthenticationGetPasswordRSAPublicKeyRequest   *message);
size_t cauthentication__get_password_rsapublic_key__request__pack
                     (const CAuthenticationGetPasswordRSAPublicKeyRequest   *message,
                      uint8_t             *out);
size_t cauthentication__get_password_rsapublic_key__request__pack_to_buffer
                     (const CAuthenticationGetPasswordRSAPublicKeyRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationGetPasswordRSAPublicKeyRequest *
       cauthentication__get_password_rsapublic_key__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__get_password_rsapublic_key__request__free_unpacked
                     (CAuthenticationGetPasswordRSAPublicKeyRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__get_password_rsapublic_key__response__get_packed_size
                     (const CAuthenticationGetPasswordRSAPublicKeyResponse   *message);
size_t cauthentication__get_password_rsapublic_key__response__pack
                     (const CAuthenticationGetPasswordRSAPublicKeyResponse   *message,
                      uint8_t             *out);
size_t cauthentication__get_password_rsapublic_key__response__pack_to_buffer
                     (const CAuthenticationGetPasswordRSAPublicKeyResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationGetPasswordRSAPublicKeyResponse *
       cauthentication__get_password_rsapublic_key__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__get_password_rsapublic_key__response__free_unpacked
                     (CAuthenticationGetPasswordRSAPublicKeyResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__device_details__get_packed_size
                     (const CAuthenticationDeviceDetails   *message);
size_t cauthentication__device_details__pack
                     (const CAuthenticationDeviceDetails   *message,
                      uint8_t             *out);
size_t cauthentication__device_details__pack_to_buffer
                     (const CAuthenticationDeviceDetails   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationDeviceDetails *
       cauthentication__device_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__device_details__free_unpacked
                     (CAuthenticationDeviceDetails *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__begin_auth_session_via_qr__request__get_packed_size
                     (const CAuthenticationBeginAuthSessionViaQRRequest   *message);
size_t cauthentication__begin_auth_session_via_qr__request__pack
                     (const CAuthenticationBeginAuthSessionViaQRRequest   *message,
                      uint8_t             *out);
size_t cauthentication__begin_auth_session_via_qr__request__pack_to_buffer
                     (const CAuthenticationBeginAuthSessionViaQRRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationBeginAuthSessionViaQRRequest *
       cauthentication__begin_auth_session_via_qr__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__begin_auth_session_via_qr__request__free_unpacked
                     (CAuthenticationBeginAuthSessionViaQRRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__allowed_confirmation__get_packed_size
                     (const CAuthenticationAllowedConfirmation   *message);
size_t cauthentication__allowed_confirmation__pack
                     (const CAuthenticationAllowedConfirmation   *message,
                      uint8_t             *out);
size_t cauthentication__allowed_confirmation__pack_to_buffer
                     (const CAuthenticationAllowedConfirmation   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationAllowedConfirmation *
       cauthentication__allowed_confirmation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__allowed_confirmation__free_unpacked
                     (CAuthenticationAllowedConfirmation *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__begin_auth_session_via_qr__response__get_packed_size
                     (const CAuthenticationBeginAuthSessionViaQRResponse   *message);
size_t cauthentication__begin_auth_session_via_qr__response__pack
                     (const CAuthenticationBeginAuthSessionViaQRResponse   *message,
                      uint8_t             *out);
size_t cauthentication__begin_auth_session_via_qr__response__pack_to_buffer
                     (const CAuthenticationBeginAuthSessionViaQRResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationBeginAuthSessionViaQRResponse *
       cauthentication__begin_auth_session_via_qr__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__begin_auth_session_via_qr__response__free_unpacked
                     (CAuthenticationBeginAuthSessionViaQRResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__begin_auth_session_via_credentials__request__get_packed_size
                     (const CAuthenticationBeginAuthSessionViaCredentialsRequest   *message);
size_t cauthentication__begin_auth_session_via_credentials__request__pack
                     (const CAuthenticationBeginAuthSessionViaCredentialsRequest   *message,
                      uint8_t             *out);
size_t cauthentication__begin_auth_session_via_credentials__request__pack_to_buffer
                     (const CAuthenticationBeginAuthSessionViaCredentialsRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationBeginAuthSessionViaCredentialsRequest *
       cauthentication__begin_auth_session_via_credentials__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__begin_auth_session_via_credentials__request__free_unpacked
                     (CAuthenticationBeginAuthSessionViaCredentialsRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__begin_auth_session_via_credentials__response__get_packed_size
                     (const CAuthenticationBeginAuthSessionViaCredentialsResponse   *message);
size_t cauthentication__begin_auth_session_via_credentials__response__pack
                     (const CAuthenticationBeginAuthSessionViaCredentialsResponse   *message,
                      uint8_t             *out);
size_t cauthentication__begin_auth_session_via_credentials__response__pack_to_buffer
                     (const CAuthenticationBeginAuthSessionViaCredentialsResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationBeginAuthSessionViaCredentialsResponse *
       cauthentication__begin_auth_session_via_credentials__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__begin_auth_session_via_credentials__response__free_unpacked
                     (CAuthenticationBeginAuthSessionViaCredentialsResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__poll_auth_session_status__request__get_packed_size
                     (const CAuthenticationPollAuthSessionStatusRequest   *message);
size_t cauthentication__poll_auth_session_status__request__pack
                     (const CAuthenticationPollAuthSessionStatusRequest   *message,
                      uint8_t             *out);
size_t cauthentication__poll_auth_session_status__request__pack_to_buffer
                     (const CAuthenticationPollAuthSessionStatusRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationPollAuthSessionStatusRequest *
       cauthentication__poll_auth_session_status__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__poll_auth_session_status__request__free_unpacked
                     (CAuthenticationPollAuthSessionStatusRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__poll_auth_session_status__response__get_packed_size
                     (const CAuthenticationPollAuthSessionStatusResponse   *message);
size_t cauthentication__poll_auth_session_status__response__pack
                     (const CAuthenticationPollAuthSessionStatusResponse   *message,
                      uint8_t             *out);
size_t cauthentication__poll_auth_session_status__response__pack_to_buffer
                     (const CAuthenticationPollAuthSessionStatusResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationPollAuthSessionStatusResponse *
       cauthentication__poll_auth_session_status__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__poll_auth_session_status__response__free_unpacked
                     (CAuthenticationPollAuthSessionStatusResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__get_auth_session_info__request__get_packed_size
                     (const CAuthenticationGetAuthSessionInfoRequest   *message);
size_t cauthentication__get_auth_session_info__request__pack
                     (const CAuthenticationGetAuthSessionInfoRequest   *message,
                      uint8_t             *out);
size_t cauthentication__get_auth_session_info__request__pack_to_buffer
                     (const CAuthenticationGetAuthSessionInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationGetAuthSessionInfoRequest *
       cauthentication__get_auth_session_info__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__get_auth_session_info__request__free_unpacked
                     (CAuthenticationGetAuthSessionInfoRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__get_auth_session_info__response__get_packed_size
                     (const CAuthenticationGetAuthSessionInfoResponse   *message);
size_t cauthentication__get_auth_session_info__response__pack
                     (const CAuthenticationGetAuthSessionInfoResponse   *message,
                      uint8_t             *out);
size_t cauthentication__get_auth_session_info__response__pack_to_buffer
                     (const CAuthenticationGetAuthSessionInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationGetAuthSessionInfoResponse *
       cauthentication__get_auth_session_info__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__get_auth_session_info__response__free_unpacked
                     (CAuthenticationGetAuthSessionInfoResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__update_auth_session_with_mobile_confirmation__request__get_packed_size
                     (const CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest   *message);
size_t cauthentication__update_auth_session_with_mobile_confirmation__request__pack
                     (const CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest   *message,
                      uint8_t             *out);
size_t cauthentication__update_auth_session_with_mobile_confirmation__request__pack_to_buffer
                     (const CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest *
       cauthentication__update_auth_session_with_mobile_confirmation__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__update_auth_session_with_mobile_confirmation__request__free_unpacked
                     (CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__update_auth_session_with_mobile_confirmation__response__get_packed_size
                     (const CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse   *message);
size_t cauthentication__update_auth_session_with_mobile_confirmation__response__pack
                     (const CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse   *message,
                      uint8_t             *out);
size_t cauthentication__update_auth_session_with_mobile_confirmation__response__pack_to_buffer
                     (const CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse *
       cauthentication__update_auth_session_with_mobile_confirmation__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__update_auth_session_with_mobile_confirmation__response__free_unpacked
                     (CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__update_auth_session_with_steam_guard_code__request__get_packed_size
                     (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest   *message);
size_t cauthentication__update_auth_session_with_steam_guard_code__request__pack
                     (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest   *message,
                      uint8_t             *out);
size_t cauthentication__update_auth_session_with_steam_guard_code__request__pack_to_buffer
                     (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest *
       cauthentication__update_auth_session_with_steam_guard_code__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__update_auth_session_with_steam_guard_code__request__free_unpacked
                     (CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__update_auth_session_with_steam_guard_code__response__get_packed_size
                     (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse   *message);
size_t cauthentication__update_auth_session_with_steam_guard_code__response__pack
                     (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse   *message,
                      uint8_t             *out);
size_t cauthentication__update_auth_session_with_steam_guard_code__response__pack_to_buffer
                     (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse *
       cauthentication__update_auth_session_with_steam_guard_code__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__update_auth_session_with_steam_guard_code__response__free_unpacked
                     (CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__access_token__generate_for_app__request__get_packed_size
                     (const CAuthenticationAccessTokenGenerateForAppRequest   *message);
size_t cauthentication__access_token__generate_for_app__request__pack
                     (const CAuthenticationAccessTokenGenerateForAppRequest   *message,
                      uint8_t             *out);
size_t cauthentication__access_token__generate_for_app__request__pack_to_buffer
                     (const CAuthenticationAccessTokenGenerateForAppRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationAccessTokenGenerateForAppRequest *
       cauthentication__access_token__generate_for_app__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__access_token__generate_for_app__request__free_unpacked
                     (CAuthenticationAccessTokenGenerateForAppRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__access_token__generate_for_app__response__get_packed_size
                     (const CAuthenticationAccessTokenGenerateForAppResponse   *message);
size_t cauthentication__access_token__generate_for_app__response__pack
                     (const CAuthenticationAccessTokenGenerateForAppResponse   *message,
                      uint8_t             *out);
size_t cauthentication__access_token__generate_for_app__response__pack_to_buffer
                     (const CAuthenticationAccessTokenGenerateForAppResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationAccessTokenGenerateForAppResponse *
       cauthentication__access_token__generate_for_app__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__access_token__generate_for_app__response__free_unpacked
                     (CAuthenticationAccessTokenGenerateForAppResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__refresh_token__enumerate__request__get_packed_size
                     (const CAuthenticationRefreshTokenEnumerateRequest   *message);
size_t cauthentication__refresh_token__enumerate__request__pack
                     (const CAuthenticationRefreshTokenEnumerateRequest   *message,
                      uint8_t             *out);
size_t cauthentication__refresh_token__enumerate__request__pack_to_buffer
                     (const CAuthenticationRefreshTokenEnumerateRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationRefreshTokenEnumerateRequest *
       cauthentication__refresh_token__enumerate__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__refresh_token__enumerate__request__free_unpacked
                     (CAuthenticationRefreshTokenEnumerateRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__refresh_token__enumerate__response__get_packed_size
                     (const CAuthenticationRefreshTokenEnumerateResponse   *message);
size_t cauthentication__refresh_token__enumerate__response__pack
                     (const CAuthenticationRefreshTokenEnumerateResponse   *message,
                      uint8_t             *out);
size_t cauthentication__refresh_token__enumerate__response__pack_to_buffer
                     (const CAuthenticationRefreshTokenEnumerateResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationRefreshTokenEnumerateResponse *
       cauthentication__refresh_token__enumerate__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__refresh_token__enumerate__response__free_unpacked
                     (CAuthenticationRefreshTokenEnumerateResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__get_auth_sessions_for_account__request__get_packed_size
                     (const CAuthenticationGetAuthSessionsForAccountRequest   *message);
size_t cauthentication__get_auth_sessions_for_account__request__pack
                     (const CAuthenticationGetAuthSessionsForAccountRequest   *message,
                      uint8_t             *out);
size_t cauthentication__get_auth_sessions_for_account__request__pack_to_buffer
                     (const CAuthenticationGetAuthSessionsForAccountRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationGetAuthSessionsForAccountRequest *
       cauthentication__get_auth_sessions_for_account__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__get_auth_sessions_for_account__request__free_unpacked
                     (CAuthenticationGetAuthSessionsForAccountRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__get_auth_sessions_for_account__response__get_packed_size
                     (const CAuthenticationGetAuthSessionsForAccountResponse   *message);
size_t cauthentication__get_auth_sessions_for_account__response__pack
                     (const CAuthenticationGetAuthSessionsForAccountResponse   *message,
                      uint8_t             *out);
size_t cauthentication__get_auth_sessions_for_account__response__pack_to_buffer
                     (const CAuthenticationGetAuthSessionsForAccountResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationGetAuthSessionsForAccountResponse *
       cauthentication__get_auth_sessions_for_account__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__get_auth_sessions_for_account__response__free_unpacked
                     (CAuthenticationGetAuthSessionsForAccountResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__migrate_mobile_session__request__get_packed_size
                     (const CAuthenticationMigrateMobileSessionRequest   *message);
size_t cauthentication__migrate_mobile_session__request__pack
                     (const CAuthenticationMigrateMobileSessionRequest   *message,
                      uint8_t             *out);
size_t cauthentication__migrate_mobile_session__request__pack_to_buffer
                     (const CAuthenticationMigrateMobileSessionRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationMigrateMobileSessionRequest *
       cauthentication__migrate_mobile_session__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__migrate_mobile_session__request__free_unpacked
                     (CAuthenticationMigrateMobileSessionRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__migrate_mobile_session__response__get_packed_size
                     (const CAuthenticationMigrateMobileSessionResponse   *message);
size_t cauthentication__migrate_mobile_session__response__pack
                     (const CAuthenticationMigrateMobileSessionResponse   *message,
                      uint8_t             *out);
size_t cauthentication__migrate_mobile_session__response__pack_to_buffer
                     (const CAuthenticationMigrateMobileSessionResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationMigrateMobileSessionResponse *
       cauthentication__migrate_mobile_session__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__migrate_mobile_session__response__free_unpacked
                     (CAuthenticationMigrateMobileSessionResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__token__revoke__request__get_packed_size
                     (const CAuthenticationTokenRevokeRequest   *message);
size_t cauthentication__token__revoke__request__pack
                     (const CAuthenticationTokenRevokeRequest   *message,
                      uint8_t             *out);
size_t cauthentication__token__revoke__request__pack_to_buffer
                     (const CAuthenticationTokenRevokeRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationTokenRevokeRequest *
       cauthentication__token__revoke__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__token__revoke__request__free_unpacked
                     (CAuthenticationTokenRevokeRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__token__revoke__response__get_packed_size
                     (const CAuthenticationTokenRevokeResponse   *message);
size_t cauthentication__token__revoke__response__pack
                     (const CAuthenticationTokenRevokeResponse   *message,
                      uint8_t             *out);
size_t cauthentication__token__revoke__response__pack_to_buffer
                     (const CAuthenticationTokenRevokeResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationTokenRevokeResponse *
       cauthentication__token__revoke__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__token__revoke__response__free_unpacked
                     (CAuthenticationTokenRevokeResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__refresh_token__revoke__request__get_packed_size
                     (const CAuthenticationRefreshTokenRevokeRequest   *message);
size_t cauthentication__refresh_token__revoke__request__pack
                     (const CAuthenticationRefreshTokenRevokeRequest   *message,
                      uint8_t             *out);
size_t cauthentication__refresh_token__revoke__request__pack_to_buffer
                     (const CAuthenticationRefreshTokenRevokeRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationRefreshTokenRevokeRequest *
       cauthentication__refresh_token__revoke__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__refresh_token__revoke__request__free_unpacked
                     (CAuthenticationRefreshTokenRevokeRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication__refresh_token__revoke__response__get_packed_size
                     (const CAuthenticationRefreshTokenRevokeResponse   *message);
size_t cauthentication__refresh_token__revoke__response__pack
                     (const CAuthenticationRefreshTokenRevokeResponse   *message,
                      uint8_t             *out);
size_t cauthentication__refresh_token__revoke__response__pack_to_buffer
                     (const CAuthenticationRefreshTokenRevokeResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationRefreshTokenRevokeResponse *
       cauthentication__refresh_token__revoke__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication__refresh_token__revoke__response__free_unpacked
                     (CAuthenticationRefreshTokenRevokeResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__query_refresh_tokens_by_account__request__get_packed_size
                     (const CAuthenticationSupportQueryRefreshTokensByAccountRequest   *message);
size_t cauthentication_support__query_refresh_tokens_by_account__request__pack
                     (const CAuthenticationSupportQueryRefreshTokensByAccountRequest   *message,
                      uint8_t             *out);
size_t cauthentication_support__query_refresh_tokens_by_account__request__pack_to_buffer
                     (const CAuthenticationSupportQueryRefreshTokensByAccountRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportQueryRefreshTokensByAccountRequest *
       cauthentication_support__query_refresh_tokens_by_account__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__query_refresh_tokens_by_account__request__free_unpacked
                     (CAuthenticationSupportQueryRefreshTokensByAccountRequest *message,
                      ProtobufCAllocator *allocator);
size_t csupport_refresh_token_description__get_packed_size
                     (const CSupportRefreshTokenDescription   *message);
size_t csupport_refresh_token_description__pack
                     (const CSupportRefreshTokenDescription   *message,
                      uint8_t             *out);
size_t csupport_refresh_token_description__pack_to_buffer
                     (const CSupportRefreshTokenDescription   *message,
                      ProtobufCBuffer     *buffer);
CSupportRefreshTokenDescription *
       csupport_refresh_token_description__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csupport_refresh_token_description__free_unpacked
                     (CSupportRefreshTokenDescription *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__query_refresh_tokens_by_account__response__get_packed_size
                     (const CAuthenticationSupportQueryRefreshTokensByAccountResponse   *message);
size_t cauthentication_support__query_refresh_tokens_by_account__response__pack
                     (const CAuthenticationSupportQueryRefreshTokensByAccountResponse   *message,
                      uint8_t             *out);
size_t cauthentication_support__query_refresh_tokens_by_account__response__pack_to_buffer
                     (const CAuthenticationSupportQueryRefreshTokensByAccountResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportQueryRefreshTokensByAccountResponse *
       cauthentication_support__query_refresh_tokens_by_account__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__query_refresh_tokens_by_account__response__free_unpacked
                     (CAuthenticationSupportQueryRefreshTokensByAccountResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__query_refresh_token_by_id__request__get_packed_size
                     (const CAuthenticationSupportQueryRefreshTokenByIDRequest   *message);
size_t cauthentication_support__query_refresh_token_by_id__request__pack
                     (const CAuthenticationSupportQueryRefreshTokenByIDRequest   *message,
                      uint8_t             *out);
size_t cauthentication_support__query_refresh_token_by_id__request__pack_to_buffer
                     (const CAuthenticationSupportQueryRefreshTokenByIDRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportQueryRefreshTokenByIDRequest *
       cauthentication_support__query_refresh_token_by_id__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__query_refresh_token_by_id__request__free_unpacked
                     (CAuthenticationSupportQueryRefreshTokenByIDRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__query_refresh_token_by_id__response__get_packed_size
                     (const CAuthenticationSupportQueryRefreshTokenByIDResponse   *message);
size_t cauthentication_support__query_refresh_token_by_id__response__pack
                     (const CAuthenticationSupportQueryRefreshTokenByIDResponse   *message,
                      uint8_t             *out);
size_t cauthentication_support__query_refresh_token_by_id__response__pack_to_buffer
                     (const CAuthenticationSupportQueryRefreshTokenByIDResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportQueryRefreshTokenByIDResponse *
       cauthentication_support__query_refresh_token_by_id__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__query_refresh_token_by_id__response__free_unpacked
                     (CAuthenticationSupportQueryRefreshTokenByIDResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__revoke_token__request__get_packed_size
                     (const CAuthenticationSupportRevokeTokenRequest   *message);
size_t cauthentication_support__revoke_token__request__pack
                     (const CAuthenticationSupportRevokeTokenRequest   *message,
                      uint8_t             *out);
size_t cauthentication_support__revoke_token__request__pack_to_buffer
                     (const CAuthenticationSupportRevokeTokenRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportRevokeTokenRequest *
       cauthentication_support__revoke_token__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__revoke_token__request__free_unpacked
                     (CAuthenticationSupportRevokeTokenRequest *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__revoke_token__response__get_packed_size
                     (const CAuthenticationSupportRevokeTokenResponse   *message);
size_t cauthentication_support__revoke_token__response__pack
                     (const CAuthenticationSupportRevokeTokenResponse   *message,
                      uint8_t             *out);
size_t cauthentication_support__revoke_token__response__pack_to_buffer
                     (const CAuthenticationSupportRevokeTokenResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportRevokeTokenResponse *
       cauthentication_support__revoke_token__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__revoke_token__response__free_unpacked
                     (CAuthenticationSupportRevokeTokenResponse *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__get_token_history__request__get_packed_size
                     (const CAuthenticationSupportGetTokenHistoryRequest   *message);
size_t cauthentication_support__get_token_history__request__pack
                     (const CAuthenticationSupportGetTokenHistoryRequest   *message,
                      uint8_t             *out);
size_t cauthentication_support__get_token_history__request__pack_to_buffer
                     (const CAuthenticationSupportGetTokenHistoryRequest   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportGetTokenHistoryRequest *
       cauthentication_support__get_token_history__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__get_token_history__request__free_unpacked
                     (CAuthenticationSupportGetTokenHistoryRequest *message,
                      ProtobufCAllocator *allocator);
size_t csupport_refresh_token_audit__get_packed_size
                     (const CSupportRefreshTokenAudit   *message);
size_t csupport_refresh_token_audit__pack
                     (const CSupportRefreshTokenAudit   *message,
                      uint8_t             *out);
size_t csupport_refresh_token_audit__pack_to_buffer
                     (const CSupportRefreshTokenAudit   *message,
                      ProtobufCBuffer     *buffer);
CSupportRefreshTokenAudit *
       csupport_refresh_token_audit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csupport_refresh_token_audit__free_unpacked
                     (CSupportRefreshTokenAudit *message,
                      ProtobufCAllocator *allocator);
size_t cauthentication_support__get_token_history__response__get_packed_size
                     (const CAuthenticationSupportGetTokenHistoryResponse   *message);
size_t cauthentication_support__get_token_history__response__pack
                     (const CAuthenticationSupportGetTokenHistoryResponse   *message,
                      uint8_t             *out);
size_t cauthentication_support__get_token_history__response__pack_to_buffer
                     (const CAuthenticationSupportGetTokenHistoryResponse   *message,
                      ProtobufCBuffer     *buffer);
CAuthenticationSupportGetTokenHistoryResponse *
       cauthentication_support__get_token_history__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cauthentication_support__get_token_history__response__free_unpacked
                     (CAuthenticationSupportGetTokenHistoryResponse *message,
                      ProtobufCAllocator *allocator);
size_t ccloud_gaming__create_nonce__request__get_packed_size
                     (const CCloudGamingCreateNonceRequest   *message);
size_t ccloud_gaming__create_nonce__request__pack
                     (const CCloudGamingCreateNonceRequest   *message,
                      uint8_t             *out);
size_t ccloud_gaming__create_nonce__request__pack_to_buffer
                     (const CCloudGamingCreateNonceRequest   *message,
                      ProtobufCBuffer     *buffer);
CCloudGamingCreateNonceRequest *
       ccloud_gaming__create_nonce__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud_gaming__create_nonce__request__free_unpacked
                     (CCloudGamingCreateNonceRequest *message,
                      ProtobufCAllocator *allocator);
size_t ccloud_gaming__create_nonce__response__get_packed_size
                     (const CCloudGamingCreateNonceResponse   *message);
size_t ccloud_gaming__create_nonce__response__pack
                     (const CCloudGamingCreateNonceResponse   *message,
                      uint8_t             *out);
size_t ccloud_gaming__create_nonce__response__pack_to_buffer
                     (const CCloudGamingCreateNonceResponse   *message,
                      ProtobufCBuffer     *buffer);
CCloudGamingCreateNonceResponse *
       ccloud_gaming__create_nonce__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud_gaming__create_nonce__response__free_unpacked
                     (CCloudGamingCreateNonceResponse *message,
                      ProtobufCAllocator *allocator);
size_t ccloud_gaming__get_time_remaining__request__get_packed_size
                     (const CCloudGamingGetTimeRemainingRequest   *message);
size_t ccloud_gaming__get_time_remaining__request__pack
                     (const CCloudGamingGetTimeRemainingRequest   *message,
                      uint8_t             *out);
size_t ccloud_gaming__get_time_remaining__request__pack_to_buffer
                     (const CCloudGamingGetTimeRemainingRequest   *message,
                      ProtobufCBuffer     *buffer);
CCloudGamingGetTimeRemainingRequest *
       ccloud_gaming__get_time_remaining__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud_gaming__get_time_remaining__request__free_unpacked
                     (CCloudGamingGetTimeRemainingRequest *message,
                      ProtobufCAllocator *allocator);
size_t ccloud_gaming__time_remaining__get_packed_size
                     (const CCloudGamingTimeRemaining   *message);
size_t ccloud_gaming__time_remaining__pack
                     (const CCloudGamingTimeRemaining   *message,
                      uint8_t             *out);
size_t ccloud_gaming__time_remaining__pack_to_buffer
                     (const CCloudGamingTimeRemaining   *message,
                      ProtobufCBuffer     *buffer);
CCloudGamingTimeRemaining *
       ccloud_gaming__time_remaining__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud_gaming__time_remaining__free_unpacked
                     (CCloudGamingTimeRemaining *message,
                      ProtobufCAllocator *allocator);
size_t ccloud_gaming__get_time_remaining__response__get_packed_size
                     (const CCloudGamingGetTimeRemainingResponse   *message);
size_t ccloud_gaming__get_time_remaining__response__pack
                     (const CCloudGamingGetTimeRemainingResponse   *message,
                      uint8_t             *out);
size_t ccloud_gaming__get_time_remaining__response__pack_to_buffer
                     (const CCloudGamingGetTimeRemainingResponse   *message,
                      ProtobufCBuffer     *buffer);
CCloudGamingGetTimeRemainingResponse *
       ccloud_gaming__get_time_remaining__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud_gaming__get_time_remaining__response__free_unpacked
                     (CCloudGamingGetTimeRemainingResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CAuthenticationGetPasswordRSAPublicKeyRequest_Closure)
                 (const CAuthenticationGetPasswordRSAPublicKeyRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationGetPasswordRSAPublicKeyResponse_Closure)
                 (const CAuthenticationGetPasswordRSAPublicKeyResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationDeviceDetails_Closure)
                 (const CAuthenticationDeviceDetails *message,
                  void *closure_data);
typedef void (*CAuthenticationBeginAuthSessionViaQRRequest_Closure)
                 (const CAuthenticationBeginAuthSessionViaQRRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationAllowedConfirmation_Closure)
                 (const CAuthenticationAllowedConfirmation *message,
                  void *closure_data);
typedef void (*CAuthenticationBeginAuthSessionViaQRResponse_Closure)
                 (const CAuthenticationBeginAuthSessionViaQRResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationBeginAuthSessionViaCredentialsRequest_Closure)
                 (const CAuthenticationBeginAuthSessionViaCredentialsRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationBeginAuthSessionViaCredentialsResponse_Closure)
                 (const CAuthenticationBeginAuthSessionViaCredentialsResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationPollAuthSessionStatusRequest_Closure)
                 (const CAuthenticationPollAuthSessionStatusRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationPollAuthSessionStatusResponse_Closure)
                 (const CAuthenticationPollAuthSessionStatusResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationGetAuthSessionInfoRequest_Closure)
                 (const CAuthenticationGetAuthSessionInfoRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationGetAuthSessionInfoResponse_Closure)
                 (const CAuthenticationGetAuthSessionInfoResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest_Closure)
                 (const CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse_Closure)
                 (const CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest_Closure)
                 (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse_Closure)
                 (const CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationAccessTokenGenerateForAppRequest_Closure)
                 (const CAuthenticationAccessTokenGenerateForAppRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationAccessTokenGenerateForAppResponse_Closure)
                 (const CAuthenticationAccessTokenGenerateForAppResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationRefreshTokenEnumerateRequest_Closure)
                 (const CAuthenticationRefreshTokenEnumerateRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationRefreshTokenEnumerateResponse__TokenUsageEvent_Closure)
                 (const CAuthenticationRefreshTokenEnumerateResponse__TokenUsageEvent *message,
                  void *closure_data);
typedef void (*CAuthenticationRefreshTokenEnumerateResponse__RefreshTokenDescription_Closure)
                 (const CAuthenticationRefreshTokenEnumerateResponse__RefreshTokenDescription *message,
                  void *closure_data);
typedef void (*CAuthenticationRefreshTokenEnumerateResponse_Closure)
                 (const CAuthenticationRefreshTokenEnumerateResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationGetAuthSessionsForAccountRequest_Closure)
                 (const CAuthenticationGetAuthSessionsForAccountRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationGetAuthSessionsForAccountResponse_Closure)
                 (const CAuthenticationGetAuthSessionsForAccountResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationMigrateMobileSessionRequest_Closure)
                 (const CAuthenticationMigrateMobileSessionRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationMigrateMobileSessionResponse_Closure)
                 (const CAuthenticationMigrateMobileSessionResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationTokenRevokeRequest_Closure)
                 (const CAuthenticationTokenRevokeRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationTokenRevokeResponse_Closure)
                 (const CAuthenticationTokenRevokeResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationRefreshTokenRevokeRequest_Closure)
                 (const CAuthenticationRefreshTokenRevokeRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationRefreshTokenRevokeResponse_Closure)
                 (const CAuthenticationRefreshTokenRevokeResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportQueryRefreshTokensByAccountRequest_Closure)
                 (const CAuthenticationSupportQueryRefreshTokensByAccountRequest *message,
                  void *closure_data);
typedef void (*CSupportRefreshTokenDescription__TokenUsageEvent_Closure)
                 (const CSupportRefreshTokenDescription__TokenUsageEvent *message,
                  void *closure_data);
typedef void (*CSupportRefreshTokenDescription_Closure)
                 (const CSupportRefreshTokenDescription *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportQueryRefreshTokensByAccountResponse_Closure)
                 (const CAuthenticationSupportQueryRefreshTokensByAccountResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportQueryRefreshTokenByIDRequest_Closure)
                 (const CAuthenticationSupportQueryRefreshTokenByIDRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportQueryRefreshTokenByIDResponse_Closure)
                 (const CAuthenticationSupportQueryRefreshTokenByIDResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportRevokeTokenRequest_Closure)
                 (const CAuthenticationSupportRevokeTokenRequest *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportRevokeTokenResponse_Closure)
                 (const CAuthenticationSupportRevokeTokenResponse *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportGetTokenHistoryRequest_Closure)
                 (const CAuthenticationSupportGetTokenHistoryRequest *message,
                  void *closure_data);
typedef void (*CSupportRefreshTokenAudit_Closure)
                 (const CSupportRefreshTokenAudit *message,
                  void *closure_data);
typedef void (*CAuthenticationSupportGetTokenHistoryResponse_Closure)
                 (const CAuthenticationSupportGetTokenHistoryResponse *message,
                  void *closure_data);
typedef void (*CCloudGamingCreateNonceRequest_Closure)
                 (const CCloudGamingCreateNonceRequest *message,
                  void *closure_data);
typedef void (*CCloudGamingCreateNonceResponse_Closure)
                 (const CCloudGamingCreateNonceResponse *message,
                  void *closure_data);
typedef void (*CCloudGamingGetTimeRemainingRequest_Closure)
                 (const CCloudGamingGetTimeRemainingRequest *message,
                  void *closure_data);
typedef void (*CCloudGamingTimeRemaining_Closure)
                 (const CCloudGamingTimeRemaining *message,
                  void *closure_data);
typedef void (*CCloudGamingGetTimeRemainingResponse_Closure)
                 (const CCloudGamingGetTimeRemainingResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Authentication_Service Authentication_Service;
struct Authentication_Service
{
  ProtobufCService base;
  void (*get_password_rsapublic_key)(Authentication_Service *service,
                                     const CAuthenticationGetPasswordRSAPublicKeyRequest *input,
                                     CAuthenticationGetPasswordRSAPublicKeyResponse_Closure closure,
                                     void *closure_data);
  void (*begin_auth_session_via_qr)(Authentication_Service *service,
                                    const CAuthenticationBeginAuthSessionViaQRRequest *input,
                                    CAuthenticationBeginAuthSessionViaQRResponse_Closure closure,
                                    void *closure_data);
  void (*begin_auth_session_via_credentials)(Authentication_Service *service,
                                             const CAuthenticationBeginAuthSessionViaCredentialsRequest *input,
                                             CAuthenticationBeginAuthSessionViaCredentialsResponse_Closure closure,
                                             void *closure_data);
  void (*poll_auth_session_status)(Authentication_Service *service,
                                   const CAuthenticationPollAuthSessionStatusRequest *input,
                                   CAuthenticationPollAuthSessionStatusResponse_Closure closure,
                                   void *closure_data);
  void (*get_auth_session_info)(Authentication_Service *service,
                                const CAuthenticationGetAuthSessionInfoRequest *input,
                                CAuthenticationGetAuthSessionInfoResponse_Closure closure,
                                void *closure_data);
  void (*update_auth_session_with_mobile_confirmation)(Authentication_Service *service,
                                                       const CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest *input,
                                                       CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse_Closure closure,
                                                       void *closure_data);
  void (*update_auth_session_with_steam_guard_code)(Authentication_Service *service,
                                                    const CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest *input,
                                                    CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse_Closure closure,
                                                    void *closure_data);
  void (*generate_access_token_for_app)(Authentication_Service *service,
                                        const CAuthenticationAccessTokenGenerateForAppRequest *input,
                                        CAuthenticationAccessTokenGenerateForAppResponse_Closure closure,
                                        void *closure_data);
  void (*enumerate_tokens)(Authentication_Service *service,
                           const CAuthenticationRefreshTokenEnumerateRequest *input,
                           CAuthenticationRefreshTokenEnumerateResponse_Closure closure,
                           void *closure_data);
  void (*get_auth_sessions_for_account)(Authentication_Service *service,
                                        const CAuthenticationGetAuthSessionsForAccountRequest *input,
                                        CAuthenticationGetAuthSessionsForAccountResponse_Closure closure,
                                        void *closure_data);
  void (*migrate_mobile_session)(Authentication_Service *service,
                                 const CAuthenticationMigrateMobileSessionRequest *input,
                                 CAuthenticationMigrateMobileSessionResponse_Closure closure,
                                 void *closure_data);
  void (*revoke_token)(Authentication_Service *service,
                       const CAuthenticationTokenRevokeRequest *input,
                       CAuthenticationTokenRevokeResponse_Closure closure,
                       void *closure_data);
  void (*revoke_refresh_token)(Authentication_Service *service,
                               const CAuthenticationRefreshTokenRevokeRequest *input,
                               CAuthenticationRefreshTokenRevokeResponse_Closure closure,
                               void *closure_data);
};
typedef void (*Authentication_ServiceDestroy)(Authentication_Service *);
void authentication__init (Authentication_Service *service,
                           Authentication_ServiceDestroy destroy);
#define AUTHENTICATION__BASE_INIT \
    { &authentication__descriptor, protobuf_c_service_invoke_internal, NULL }
#define AUTHENTICATION__INIT(function_prefix__) \
    { AUTHENTICATION__BASE_INIT,\
      function_prefix__ ## get_password_rsapublic_key,\
      function_prefix__ ## begin_auth_session_via_qr,\
      function_prefix__ ## begin_auth_session_via_credentials,\
      function_prefix__ ## poll_auth_session_status,\
      function_prefix__ ## get_auth_session_info,\
      function_prefix__ ## update_auth_session_with_mobile_confirmation,\
      function_prefix__ ## update_auth_session_with_steam_guard_code,\
      function_prefix__ ## generate_access_token_for_app,\
      function_prefix__ ## enumerate_tokens,\
      function_prefix__ ## get_auth_sessions_for_account,\
      function_prefix__ ## migrate_mobile_session,\
      function_prefix__ ## revoke_token,\
      function_prefix__ ## revoke_refresh_token  }
void authentication__get_password_rsapublic_key(ProtobufCService *service,
                                                const CAuthenticationGetPasswordRSAPublicKeyRequest *input,
                                                CAuthenticationGetPasswordRSAPublicKeyResponse_Closure closure,
                                                void *closure_data);
void authentication__begin_auth_session_via_qr(ProtobufCService *service,
                                               const CAuthenticationBeginAuthSessionViaQRRequest *input,
                                               CAuthenticationBeginAuthSessionViaQRResponse_Closure closure,
                                               void *closure_data);
void authentication__begin_auth_session_via_credentials(ProtobufCService *service,
                                                        const CAuthenticationBeginAuthSessionViaCredentialsRequest *input,
                                                        CAuthenticationBeginAuthSessionViaCredentialsResponse_Closure closure,
                                                        void *closure_data);
void authentication__poll_auth_session_status(ProtobufCService *service,
                                              const CAuthenticationPollAuthSessionStatusRequest *input,
                                              CAuthenticationPollAuthSessionStatusResponse_Closure closure,
                                              void *closure_data);
void authentication__get_auth_session_info(ProtobufCService *service,
                                           const CAuthenticationGetAuthSessionInfoRequest *input,
                                           CAuthenticationGetAuthSessionInfoResponse_Closure closure,
                                           void *closure_data);
void authentication__update_auth_session_with_mobile_confirmation(ProtobufCService *service,
                                                                  const CAuthenticationUpdateAuthSessionWithMobileConfirmationRequest *input,
                                                                  CAuthenticationUpdateAuthSessionWithMobileConfirmationResponse_Closure closure,
                                                                  void *closure_data);
void authentication__update_auth_session_with_steam_guard_code(ProtobufCService *service,
                                                               const CAuthenticationUpdateAuthSessionWithSteamGuardCodeRequest *input,
                                                               CAuthenticationUpdateAuthSessionWithSteamGuardCodeResponse_Closure closure,
                                                               void *closure_data);
void authentication__generate_access_token_for_app(ProtobufCService *service,
                                                   const CAuthenticationAccessTokenGenerateForAppRequest *input,
                                                   CAuthenticationAccessTokenGenerateForAppResponse_Closure closure,
                                                   void *closure_data);
void authentication__enumerate_tokens(ProtobufCService *service,
                                      const CAuthenticationRefreshTokenEnumerateRequest *input,
                                      CAuthenticationRefreshTokenEnumerateResponse_Closure closure,
                                      void *closure_data);
void authentication__get_auth_sessions_for_account(ProtobufCService *service,
                                                   const CAuthenticationGetAuthSessionsForAccountRequest *input,
                                                   CAuthenticationGetAuthSessionsForAccountResponse_Closure closure,
                                                   void *closure_data);
void authentication__migrate_mobile_session(ProtobufCService *service,
                                            const CAuthenticationMigrateMobileSessionRequest *input,
                                            CAuthenticationMigrateMobileSessionResponse_Closure closure,
                                            void *closure_data);
void authentication__revoke_token(ProtobufCService *service,
                                  const CAuthenticationTokenRevokeRequest *input,
                                  CAuthenticationTokenRevokeResponse_Closure closure,
                                  void *closure_data);
void authentication__revoke_refresh_token(ProtobufCService *service,
                                          const CAuthenticationRefreshTokenRevokeRequest *input,
                                          CAuthenticationRefreshTokenRevokeResponse_Closure closure,
                                          void *closure_data);
typedef struct AuthenticationSupport_Service AuthenticationSupport_Service;
struct AuthenticationSupport_Service
{
  ProtobufCService base;
  void (*query_refresh_tokens_by_account)(AuthenticationSupport_Service *service,
                                          const CAuthenticationSupportQueryRefreshTokensByAccountRequest *input,
                                          CAuthenticationSupportQueryRefreshTokensByAccountResponse_Closure closure,
                                          void *closure_data);
  void (*query_refresh_token_by_id)(AuthenticationSupport_Service *service,
                                    const CAuthenticationSupportQueryRefreshTokenByIDRequest *input,
                                    CAuthenticationSupportQueryRefreshTokenByIDResponse_Closure closure,
                                    void *closure_data);
  void (*revoke_token)(AuthenticationSupport_Service *service,
                       const CAuthenticationSupportRevokeTokenRequest *input,
                       CAuthenticationSupportRevokeTokenResponse_Closure closure,
                       void *closure_data);
  void (*get_token_history)(AuthenticationSupport_Service *service,
                            const CAuthenticationSupportGetTokenHistoryRequest *input,
                            CAuthenticationSupportGetTokenHistoryResponse_Closure closure,
                            void *closure_data);
};
typedef void (*AuthenticationSupport_ServiceDestroy)(AuthenticationSupport_Service *);
void authentication_support__init (AuthenticationSupport_Service *service,
                                   AuthenticationSupport_ServiceDestroy destroy);
#define AUTHENTICATION_SUPPORT__BASE_INIT \
    { &authentication_support__descriptor, protobuf_c_service_invoke_internal, NULL }
#define AUTHENTICATION_SUPPORT__INIT(function_prefix__) \
    { AUTHENTICATION_SUPPORT__BASE_INIT,\
      function_prefix__ ## query_refresh_tokens_by_account,\
      function_prefix__ ## query_refresh_token_by_id,\
      function_prefix__ ## revoke_token,\
      function_prefix__ ## get_token_history  }
void authentication_support__query_refresh_tokens_by_account(ProtobufCService *service,
                                                             const CAuthenticationSupportQueryRefreshTokensByAccountRequest *input,
                                                             CAuthenticationSupportQueryRefreshTokensByAccountResponse_Closure closure,
                                                             void *closure_data);
void authentication_support__query_refresh_token_by_id(ProtobufCService *service,
                                                       const CAuthenticationSupportQueryRefreshTokenByIDRequest *input,
                                                       CAuthenticationSupportQueryRefreshTokenByIDResponse_Closure closure,
                                                       void *closure_data);
void authentication_support__revoke_token(ProtobufCService *service,
                                          const CAuthenticationSupportRevokeTokenRequest *input,
                                          CAuthenticationSupportRevokeTokenResponse_Closure closure,
                                          void *closure_data);
void authentication_support__get_token_history(ProtobufCService *service,
                                               const CAuthenticationSupportGetTokenHistoryRequest *input,
                                               CAuthenticationSupportGetTokenHistoryResponse_Closure closure,
                                               void *closure_data);
typedef struct CloudGaming_Service CloudGaming_Service;
struct CloudGaming_Service
{
  ProtobufCService base;
  void (*create_nonce)(CloudGaming_Service *service,
                       const CCloudGamingCreateNonceRequest *input,
                       CCloudGamingCreateNonceResponse_Closure closure,
                       void *closure_data);
  void (*get_time_remaining)(CloudGaming_Service *service,
                             const CCloudGamingGetTimeRemainingRequest *input,
                             CCloudGamingGetTimeRemainingResponse_Closure closure,
                             void *closure_data);
};
typedef void (*CloudGaming_ServiceDestroy)(CloudGaming_Service *);
void cloud_gaming__init (CloudGaming_Service *service,
                         CloudGaming_ServiceDestroy destroy);
#define CLOUD_GAMING__BASE_INIT \
    { &cloud_gaming__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CLOUD_GAMING__INIT(function_prefix__) \
    { CLOUD_GAMING__BASE_INIT,\
      function_prefix__ ## create_nonce,\
      function_prefix__ ## get_time_remaining  }
void cloud_gaming__create_nonce(ProtobufCService *service,
                                const CCloudGamingCreateNonceRequest *input,
                                CCloudGamingCreateNonceResponse_Closure closure,
                                void *closure_data);
void cloud_gaming__get_time_remaining(ProtobufCService *service,
                                      const CCloudGamingGetTimeRemainingRequest *input,
                                      CCloudGamingGetTimeRemainingResponse_Closure closure,
                                      void *closure_data);

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_steammessages_5fauth_2esteamclient_2eproto__INCLUDED */
