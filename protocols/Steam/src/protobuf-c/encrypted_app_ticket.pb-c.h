/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: encrypted_app_ticket.proto */

#ifndef PROTOBUF_C_encrypted_5fapp_5fticket_2eproto__INCLUDED
#define PROTOBUF_C_encrypted_5fapp_5fticket_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


struct EncryptedAppTicket;


/* --- enums --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor encrypted_app_ticket__descriptor;

/* --- messages --- */

extern "C" void message_init_generic(const ProtobufCMessageDescriptor * desc, ProtobufCMessage * message);

struct EncryptedAppTicket : public ProtobufCppMessage
{
  EncryptedAppTicket() :
     ProtobufCppMessage(encrypted_app_ticket__descriptor)
  {}

  protobuf_c_boolean has_ticket_version_no;
  uint32_t ticket_version_no;
  protobuf_c_boolean has_crc_encryptedticket;
  uint32_t crc_encryptedticket;
  protobuf_c_boolean has_cb_encrypteduserdata;
  uint32_t cb_encrypteduserdata;
  protobuf_c_boolean has_cb_encrypted_appownershipticket;
  uint32_t cb_encrypted_appownershipticket;
  protobuf_c_boolean has_encrypted_ticket;
  ProtobufCBinaryData encrypted_ticket;
};

size_t encrypted_app_ticket__get_packed_size
                     (const EncryptedAppTicket   *message);
size_t encrypted_app_ticket__pack
                     (const EncryptedAppTicket   *message,
                      uint8_t             *out);
size_t encrypted_app_ticket__pack_to_buffer
                     (const EncryptedAppTicket   *message,
                      ProtobufCBuffer     *buffer);
EncryptedAppTicket *
       encrypted_app_ticket__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   encrypted_app_ticket__free_unpacked
                     (EncryptedAppTicket *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*EncryptedAppTicket_Closure)
                 (const EncryptedAppTicket *message,
                  void *closure_data);

/* --- services --- */


PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_encrypted_5fapp_5fticket_2eproto__INCLUDED */
