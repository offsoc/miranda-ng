/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steammessages_chat.steamclient.proto */

#ifndef PROTOBUF_C_steammessages_5fchat_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_C_steammessages_5fchat_2esteamclient_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages_base.pb-c.h"
#include "steammessages_unified_base.steamclient.pb-c.h"
#include "steammessages_clientserver_friends.pb-c.h"

struct CChatRequestFriendPersonaStatesRequest;
struct CChatRequestFriendPersonaStatesResponse;
struct CChatRoomCreateChatRoomGroupRequest;
struct CChatRole;
struct CChatRoleActions;
struct CChatPartyBeacon;
struct CChatRoomGroupHeaderState;
struct CChatRoomMember;
struct CChatRoomState;
struct CChatRoomGroupState;
struct CUserChatRoomState;
struct CUserChatRoomGroupState;
struct CChatRoomCreateChatRoomGroupResponse;
struct CChatRoomSaveChatRoomGroupRequest;
struct CChatRoomSaveChatRoomGroupResponse;
struct CChatRoomRenameChatRoomGroupRequest;
struct CChatRoomRenameChatRoomGroupResponse;
struct CChatRoomSetChatRoomGroupTaglineRequest;
struct CChatRoomSetChatRoomGroupTaglineResponse;
struct CChatRoomSetChatRoomGroupAvatarRequest;
struct CChatRoomSetChatRoomGroupAvatarResponse;
struct CChatRoomSetChatRoomGroupWatchingBroadcastRequest;
struct CChatRoomSetChatRoomGroupWatchingBroadcastResponse;
struct CChatRoomJoinMiniGameForChatRoomGroupRequest;
struct CChatRoomJoinMiniGameForChatRoomGroupResponse;
struct CChatRoomEndMiniGameForChatRoomGroupRequest;
struct CChatRoomEndMiniGameForChatRoomGroupResponse;
struct CChatRoomMuteUserRequest;
struct CChatRoomMuteUserResponse;
struct CChatRoomKickUserRequest;
struct CChatRoomKickUserResponse;
struct CChatRoomSetUserBanStateRequest;
struct CChatRoomSetUserBanStateResponse;
struct CChatRoomRevokeInviteRequest;
struct CChatRoomRevokeInviteResponse;
struct CChatRoomCreateRoleRequest;
struct CChatRoomCreateRoleResponse;
struct CChatRoomGetRolesRequest;
struct CChatRoomGetRolesResponse;
struct CChatRoomRenameRoleRequest;
struct CChatRoomRenameRoleResponse;
struct CChatRoomReorderRoleRequest;
struct CChatRoomReorderRoleResponse;
struct CChatRoomDeleteRoleRequest;
struct CChatRoomDeleteRoleResponse;
struct CChatRoomGetRoleActionsRequest;
struct CChatRoomGetRoleActionsResponse;
struct CChatRoomReplaceRoleActionsRequest;
struct CChatRoomReplaceRoleActionsResponse;
struct CChatRoomAddRoleToUserRequest;
struct CChatRoomAddRoleToUserResponse;
struct CChatRoomGetRolesForUserRequest;
struct CChatRoomGetRolesForUserResponse;
struct CChatRoomDeleteRoleFromUserRequest;
struct CChatRoomDeleteRoleFromUserResponse;
struct CChatRoomJoinChatRoomGroupRequest;
struct CChatRoomJoinChatRoomGroupResponse;
struct CChatRoomInviteFriendToChatRoomGroupRequest;
struct CChatRoomInviteFriendToChatRoomGroupResponse;
struct CChatRoomLeaveChatRoomGroupRequest;
struct CChatRoomLeaveChatRoomGroupResponse;
struct CChatRoomCreateChatRoomRequest;
struct CChatRoomCreateChatRoomResponse;
struct CChatRoomDeleteChatRoomRequest;
struct CChatRoomDeleteChatRoomResponse;
struct CChatRoomRenameChatRoomRequest;
struct CChatRoomRenameChatRoomResponse;
struct CChatRoomReorderChatRoomRequest;
struct CChatRoomReorderChatRoomResponse;
struct CChatRoomSendChatMessageRequest;
struct CChatRoomSendChatMessageResponse;
struct CChatRoomJoinVoiceChatRequest;
struct CChatRoomJoinVoiceChatResponse;
struct CChatRoomLeaveVoiceChatRequest;
struct CChatRoomLeaveVoiceChatResponse;
struct CChatRoomGetMessageHistoryRequest;
struct ServerMessage;
struct CChatRoomGetMessageHistoryResponse;
struct CChatRoomGetMessageHistoryResponse__ChatMessage;
struct CChatRoomGetMessageHistoryResponse__ChatMessage__MessageReaction;
struct CChatRoomGetMyChatRoomGroupsRequest;
struct CChatRoomGetChatRoomGroupSummaryResponse;
struct CChatRoomSummaryPair;
struct CChatRoomGetMyChatRoomGroupsResponse;
struct CChatRoomGetChatRoomGroupStateRequest;
struct CChatRoomGetChatRoomGroupStateResponse;
struct CChatRoomGetChatRoomGroupSummaryRequest;
struct CChatRoomSetAppChatRoomGroupForceActiveRequest;
struct CChatRoomSetAppChatRoomGroupForceActiveResponse;
struct CChatRoomSetAppChatRoomGroupStopForceActiveNotification;
struct CChatRoomAckChatMessageNotification;
struct CChatRoomCreateInviteLinkRequest;
struct CChatRoomCreateInviteLinkResponse;
struct CChatRoomGetInviteLinkInfoRequest;
struct CChatRoomGetInviteLinkInfoResponse;
struct CChatRoomGetInviteInfoRequest;
struct CChatRoomGetInviteInfoResponse;
struct CChatRoomGetInviteLinksForGroupRequest;
struct CChatRoomGetInviteLinksForGroupResponse;
struct CChatRoomGetInviteLinksForGroupResponse__LinkInfo;
struct CChatRoomGetBanListRequest;
struct CChatRoomGetBanListResponse;
struct CChatRoomGetBanListResponse__BanInfo;
struct CChatRoomGetInviteListRequest;
struct CChatRoomGroupInvite;
struct CChatRoomGetInviteListResponse;
struct CChatRoomDeleteInviteLinkRequest;
struct CChatRoomDeleteInviteLinkResponse;
struct CChatRoomSetSessionActiveChatRoomGroupsRequest;
struct CChatRoomSetSessionActiveChatRoomGroupsResponse;
struct CChatRoomSetUserChatGroupPreferencesRequest;
struct CChatRoomSetUserChatGroupPreferencesRequest__ChatGroupPreferences;
struct CChatRoomSetUserChatGroupPreferencesRequest__ChatRoomPreferences;
struct CChatRoomSetUserChatGroupPreferencesResponse;
struct CChatRoomDeleteChatMessagesRequest;
struct CChatRoomDeleteChatMessagesRequest__Message;
struct CChatRoomDeleteChatMessagesResponse;
struct CChatRoomUpdateMemberListViewNotification;
struct CChatRoomSearchMembersRequest;
struct CChatRoomSearchMembersResponse;
struct CChatRoomSearchMembersResponse__MemberMatch;
struct CChatRoomUpdateMessageReactionRequest;
struct CChatRoomUpdateMessageReactionResponse;
struct CChatRoomGetMessageReactionReactorsRequest;
struct CChatRoomGetMessageReactionReactorsResponse;
struct CClanChatRoomsGetClanChatRoomInfoRequest;
struct CClanChatRoomsGetClanChatRoomInfoResponse;
struct CClanChatRoomsSetClanChatRoomPrivateRequest;
struct CClanChatRoomsSetClanChatRoomPrivateResponse;
struct CChatMentions;
struct CChatRoomIncomingChatMessageNotification;
struct CChatRoomChatMessageModifiedNotification;
struct CChatRoomChatMessageModifiedNotification__ChatMessage;
struct CChatRoomMemberStateChangeNotification;
struct CChatRoomChatRoomHeaderStateNotification;
struct CChatRoomChatRoomGroupRoomsChangeNotification;
struct CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification;
struct ChatRoomClientNotifyChatGroupUserStateChangedNotification;
struct ChatRoomClientNotifyChatRoomDisconnectNotification;
struct CChatRoomMemberListView;
struct CChatRoomMemberSummaryCounts;
struct CChatRoomClientMemberListViewUpdatedNotification;
struct CChatRoomClientMemberListViewUpdatedNotification__MemberListViewEntry;
struct CChatRoomMessageReactionNotification;
struct CChatUsabilityClientUsabilityMetricsNotification;
struct CChatUsabilityClientUsabilityMetricsNotification__Settings;
struct CChatUsabilityClientUsabilityMetricsNotification__VoiceSettings;
struct CChatUsabilityClientUsabilityMetricsNotification__UIState;
struct CChatUsabilityClientUsabilityMetricsNotification__UIState__CategoryCollapseState;
struct CChatUsabilityClientUsabilityMetricsNotification__Metrics;
struct CChatUsabilityRequestClientUsabilityMetricsNotification;


/* --- enums --- */

typedef enum _EChatRoomJoinState {
  ECHAT_ROOM_JOIN_STATE__k_EChatRoomJoinState_Default = 0,
  ECHAT_ROOM_JOIN_STATE__k_EChatRoomJoinState_None = 1,
  ECHAT_ROOM_JOIN_STATE__k_EChatRoomJoinState_Joined = 2,
  ECHAT_ROOM_JOIN_STATE__k_EChatRoomJoinState_TestInvalid = 99
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECHAT_ROOM_JOIN_STATE)
} EChatRoomJoinState;
typedef enum _EChatRoomGroupRank {
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_Default = 0,
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_Viewer = 10,
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_Guest = 15,
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_Member = 20,
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_Moderator = 30,
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_Officer = 40,
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_Owner = 50,
  ECHAT_ROOM_GROUP_RANK__k_EChatRoomGroupRank_TestInvalid = 99
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECHAT_ROOM_GROUP_RANK)
} EChatRoomGroupRank;
typedef enum _EChatRoomNotificationLevel {
  ECHAT_ROOM_NOTIFICATION_LEVEL__k_EChatroomNotificationLevel_Invalid = 0,
  ECHAT_ROOM_NOTIFICATION_LEVEL__k_EChatroomNotificationLevel_None = 1,
  ECHAT_ROOM_NOTIFICATION_LEVEL__k_EChatroomNotificationLevel_MentionMe = 2,
  ECHAT_ROOM_NOTIFICATION_LEVEL__k_EChatroomNotificationLevel_MentionAll = 3,
  ECHAT_ROOM_NOTIFICATION_LEVEL__k_EChatroomNotificationLevel_AllMessages = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECHAT_ROOM_NOTIFICATION_LEVEL)
} EChatRoomNotificationLevel;
typedef enum _EChatRoomServerMessage {
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_Invalid = 0,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_RenameChatRoom = 1,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_Joined = 2,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_Parted = 3,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_Kicked = 4,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_Invited = 5,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_InviteDismissed = 8,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_ChatRoomTaglineChanged = 9,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_ChatRoomAvatarChanged = 10,
  ECHAT_ROOM_SERVER_MESSAGE__k_EChatRoomServerMsg_AppCustom = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECHAT_ROOM_SERVER_MESSAGE)
} EChatRoomServerMessage;
typedef enum _EChatRoomMessageReactionType {
  ECHAT_ROOM_MESSAGE_REACTION_TYPE__k_EChatRoomMessageReactionType_Invalid = 0,
  ECHAT_ROOM_MESSAGE_REACTION_TYPE__k_EChatRoomMessageReactionType_Emoticon = 1,
  ECHAT_ROOM_MESSAGE_REACTION_TYPE__k_EChatRoomMessageReactionType_Sticker = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECHAT_ROOM_MESSAGE_REACTION_TYPE)
} EChatRoomMessageReactionType;
typedef enum _EChatRoomMemberStateChange {
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_Invalid = 0,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_Joined = 1,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_Parted = 2,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_Kicked = 3,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_Invited = 4,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_RankChanged = 7,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_InviteDismissed = 8,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_Muted = 9,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_Banned = 10,
  ECHAT_ROOM_MEMBER_STATE_CHANGE__k_EChatRoomMemberStateChange_RolesChanged = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECHAT_ROOM_MEMBER_STATE_CHANGE)
} EChatRoomMemberStateChange;

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    echat_room_join_state__descriptor;
extern const ProtobufCEnumDescriptor    echat_room_group_rank__descriptor;
extern const ProtobufCEnumDescriptor    echat_room_notification_level__descriptor;
extern const ProtobufCEnumDescriptor    echat_room_server_message__descriptor;
extern const ProtobufCEnumDescriptor    echat_room_message_reaction_type__descriptor;
extern const ProtobufCEnumDescriptor    echat_room_member_state_change__descriptor;
extern const ProtobufCMessageDescriptor cchat__request_friend_persona_states__request__descriptor;
extern const ProtobufCMessageDescriptor cchat__request_friend_persona_states__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_role__descriptor;
extern const ProtobufCMessageDescriptor cchat_role_actions__descriptor;
extern const ProtobufCMessageDescriptor cchat_party_beacon__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_group_header_state__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_member__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_state__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_group_state__descriptor;
extern const ProtobufCMessageDescriptor cuser_chat_room_state__descriptor;
extern const ProtobufCMessageDescriptor cuser_chat_room_group_state__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__save_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__save_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__rename_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__rename_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_chat_room_group_tagline__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_chat_room_group_tagline__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_chat_room_group_avatar__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_chat_room_group_avatar__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_chat_room_group_watching_broadcast__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_chat_room_group_watching_broadcast__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__join_mini_game_for_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__join_mini_game_for_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__end_mini_game_for_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__end_mini_game_for_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__mute_user__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__mute_user__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__kick_user__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__kick_user__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_user_ban_state__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_user_ban_state__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__revoke_invite__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__revoke_invite__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_role__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_role__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_roles__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_roles__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__rename_role__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__rename_role__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__reorder_role__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__reorder_role__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_role__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_role__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_role_actions__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_role_actions__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__replace_role_actions__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__replace_role_actions__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__add_role_to_user__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__add_role_to_user__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_roles_for_user__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_roles_for_user__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_role_from_user__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_role_from_user__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__join_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__join_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__invite_friend_to_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__invite_friend_to_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__leave_chat_room_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__leave_chat_room_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_chat_room__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_chat_room__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_chat_room__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_chat_room__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__rename_chat_room__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__rename_chat_room__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__reorder_chat_room__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__reorder_chat_room__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__send_chat_message__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__send_chat_message__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__join_voice_chat__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__join_voice_chat__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__leave_voice_chat__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__leave_voice_chat__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_message_history__request__descriptor;
extern const ProtobufCMessageDescriptor server_message__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_message_history__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_message_history__response__chat_message__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_message_history__response__chat_message__message_reaction__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_my_chat_room_groups__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_chat_room_group_summary__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_summary_pair__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_my_chat_room_groups__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_chat_room_group_state__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_chat_room_group_state__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_chat_room_group_summary__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_app_chat_room_group_force_active__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_app_chat_room_group_force_active__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_app_chat_room_group_stop_force_active__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__ack_chat_message__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_invite_link__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__create_invite_link__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_link_info__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_link_info__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_info__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_info__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_links_for_group__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_links_for_group__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_links_for_group__response__link_info__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_ban_list__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_ban_list__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_ban_list__response__ban_info__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_list__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_group_invite__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_invite_list__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_invite_link__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_invite_link__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_session_active_chat_room_groups__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_session_active_chat_room_groups__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_user_chat_group_preferences__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_user_chat_group_preferences__request__chat_group_preferences__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_user_chat_group_preferences__request__chat_room_preferences__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__set_user_chat_group_preferences__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_chat_messages__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_chat_messages__request__message__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__delete_chat_messages__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__update_member_list_view__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__search_members__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__search_members__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__search_members__response__member_match__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__update_message_reaction__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__update_message_reaction__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_message_reaction_reactors__request__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__get_message_reaction_reactors__response__descriptor;
extern const ProtobufCMessageDescriptor cclan_chat_rooms__get_clan_chat_room_info__request__descriptor;
extern const ProtobufCMessageDescriptor cclan_chat_rooms__get_clan_chat_room_info__response__descriptor;
extern const ProtobufCMessageDescriptor cclan_chat_rooms__set_clan_chat_room_private__request__descriptor;
extern const ProtobufCMessageDescriptor cclan_chat_rooms__set_clan_chat_room_private__response__descriptor;
extern const ProtobufCMessageDescriptor cchat_mentions__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__incoming_chat_message__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__chat_message_modified__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__chat_message_modified__notification__chat_message__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__member_state_change__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__chat_room_header_state__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__chat_room_group_rooms_change__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__notify_should_rejoin_chat_room_voice_chat__notification__descriptor;
extern const ProtobufCMessageDescriptor chat_room_client__notify_chat_group_user_state_changed__notification__descriptor;
extern const ProtobufCMessageDescriptor chat_room_client__notify_chat_room_disconnect__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_member_list_view__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_member_summary_counts__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_client__member_list_view_updated__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_room_client__member_list_view_updated__notification__member_list_view_entry__descriptor;
extern const ProtobufCMessageDescriptor cchat_room__message_reaction__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_usability__client_usability_metrics__notification__descriptor;
extern const ProtobufCMessageDescriptor cchat_usability__client_usability_metrics__notification__settings__descriptor;
extern const ProtobufCMessageDescriptor cchat_usability__client_usability_metrics__notification__voice_settings__descriptor;
extern const ProtobufCMessageDescriptor cchat_usability__client_usability_metrics__notification__uistate__descriptor;
extern const ProtobufCMessageDescriptor cchat_usability__client_usability_metrics__notification__uistate__category_collapse_state__descriptor;
extern const ProtobufCMessageDescriptor cchat_usability__client_usability_metrics__notification__metrics__descriptor;
extern const ProtobufCMessageDescriptor cchat_usability__request_client_usability_metrics__notification__descriptor;
extern const ProtobufCServiceDescriptor chat__descriptor;
extern const ProtobufCServiceDescriptor chat_room__descriptor;
extern const ProtobufCServiceDescriptor clan_chat_rooms__descriptor;
extern const ProtobufCServiceDescriptor chat_room_client__descriptor;
extern const ProtobufCServiceDescriptor chat_usability__descriptor;
extern const ProtobufCServiceDescriptor chat_usability_client__descriptor;

/* --- messages --- */

extern "C" void message_init_generic(const ProtobufCMessageDescriptor * desc, ProtobufCMessage * message);

struct CChatRequestFriendPersonaStatesRequest : public ProtobufCppMessage
{
  CChatRequestFriendPersonaStatesRequest() :
     ProtobufCppMessage(cchat__request_friend_persona_states__request__descriptor)
  {}

};

struct CChatRequestFriendPersonaStatesResponse : public ProtobufCppMessage
{
  CChatRequestFriendPersonaStatesResponse() :
     ProtobufCppMessage(cchat__request_friend_persona_states__response__descriptor)
  {}

};

struct CChatRoomCreateChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomCreateChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__create_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_steamid_partner;
  uint64_t steamid_partner;
  protobuf_c_boolean has_steamid_invited;
  uint64_t steamid_invited;
  char *name;
  size_t n_steamid_invitees;
  uint64_t *steamid_invitees;
  protobuf_c_boolean has_watching_broadcast_accountid;
  uint32_t watching_broadcast_accountid;
  protobuf_c_boolean has_watching_broadcast_channel_id;
  uint64_t watching_broadcast_channel_id;
};

struct CChatRole : public ProtobufCppMessage
{
  CChatRole() :
     ProtobufCppMessage(cchat_role__descriptor)
  {}

  protobuf_c_boolean has_role_id;
  uint64_t role_id;
  char *name;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
};

struct CChatRoleActions : public ProtobufCppMessage
{
  CChatRoleActions() :
     ProtobufCppMessage(cchat_role_actions__descriptor)
  {}

  protobuf_c_boolean has_role_id;
  uint64_t role_id;
  protobuf_c_boolean has_can_create_rename_delete_channel;
  protobuf_c_boolean can_create_rename_delete_channel;
  protobuf_c_boolean has_can_kick;
  protobuf_c_boolean can_kick;
  protobuf_c_boolean has_can_ban;
  protobuf_c_boolean can_ban;
  protobuf_c_boolean has_can_invite;
  protobuf_c_boolean can_invite;
  protobuf_c_boolean has_can_change_tagline_avatar_name;
  protobuf_c_boolean can_change_tagline_avatar_name;
  protobuf_c_boolean has_can_chat;
  protobuf_c_boolean can_chat;
  protobuf_c_boolean has_can_view_history;
  protobuf_c_boolean can_view_history;
  protobuf_c_boolean has_can_change_group_roles;
  protobuf_c_boolean can_change_group_roles;
  protobuf_c_boolean has_can_change_user_roles;
  protobuf_c_boolean can_change_user_roles;
  protobuf_c_boolean has_can_mention_all;
  protobuf_c_boolean can_mention_all;
  protobuf_c_boolean has_can_set_watching_broadcast;
  protobuf_c_boolean can_set_watching_broadcast;
};

struct CChatPartyBeacon : public ProtobufCppMessage
{
  CChatPartyBeacon() :
     ProtobufCppMessage(cchat_party_beacon__descriptor)
  {}

  protobuf_c_boolean has_app_id;
  uint32_t app_id;
  protobuf_c_boolean has_steamid_owner;
  uint64_t steamid_owner;
  protobuf_c_boolean has_beacon_id;
  uint64_t beacon_id;
  char *game_metadata;
};

struct CChatRoomGroupHeaderState : public ProtobufCppMessage
{
  CChatRoomGroupHeaderState() :
     ProtobufCppMessage(cchat_room_group_header_state__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *chat_name;
  protobuf_c_boolean has_clanid;
  uint32_t clanid;
  protobuf_c_boolean has_accountid_owner;
  uint32_t accountid_owner;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  char *tagline;
  protobuf_c_boolean has_avatar_sha;
  ProtobufCBinaryData avatar_sha;
  protobuf_c_boolean has_default_role_id;
  uint64_t default_role_id;
  size_t n_roles;
  CChatRole **roles;
  size_t n_role_actions;
  CChatRoleActions **role_actions;
  protobuf_c_boolean has_watching_broadcast_accountid;
  uint32_t watching_broadcast_accountid;
  size_t n_party_beacons;
  CChatPartyBeacon **party_beacons;
  protobuf_c_boolean has_watching_broadcast_channel_id;
  uint64_t watching_broadcast_channel_id;
  protobuf_c_boolean has_active_minigame_id;
  uint64_t active_minigame_id;
  char *avatar_ugc_url;
  protobuf_c_boolean has_disabled;
  protobuf_c_boolean disabled;
};

struct CChatRoomMember : public ProtobufCppMessage
{
  CChatRoomMember() :
     ProtobufCppMessage(cchat_room_member__descriptor)
  {}

  protobuf_c_boolean has_accountid;
  uint32_t accountid;
  protobuf_c_boolean has_state;
  EChatRoomJoinState state;
  protobuf_c_boolean has_rank;
  EChatRoomGroupRank rank;
  protobuf_c_boolean has_time_kick_expire;
  uint32_t time_kick_expire;
  size_t n_role_ids;
  uint64_t *role_ids;
};

struct CChatRoomState : public ProtobufCppMessage
{
  CChatRoomState() :
     ProtobufCppMessage(cchat_room_state__descriptor)
  {}

  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  char *chat_name;
  protobuf_c_boolean has_voice_allowed;
  protobuf_c_boolean voice_allowed;
  size_t n_members_in_voice;
  uint32_t *members_in_voice;
  protobuf_c_boolean has_time_last_message;
  uint32_t time_last_message;
  protobuf_c_boolean has_sort_order;
  uint32_t sort_order;
  char *last_message;
  protobuf_c_boolean has_accountid_last_message;
  uint32_t accountid_last_message;
};

struct CChatRoomGroupState : public ProtobufCppMessage
{
  CChatRoomGroupState() :
     ProtobufCppMessage(cchat_room_group_state__descriptor)
  {}

  CChatRoomGroupHeaderState *header_state;
  size_t n_members;
  CChatRoomMember **members;
  protobuf_c_boolean has_default_chat_id;
  uint64_t default_chat_id;
  size_t n_chat_rooms;
  CChatRoomState **chat_rooms;
  size_t n_kicked;
  CChatRoomMember **kicked;
};

struct CUserChatRoomState : public ProtobufCppMessage
{
  CUserChatRoomState() :
     ProtobufCppMessage(cuser_chat_room_state__descriptor)
  {}

  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_time_joined;
  uint32_t time_joined;
  protobuf_c_boolean has_time_last_ack;
  uint32_t time_last_ack;
  protobuf_c_boolean has_desktop_notification_level;
  EChatRoomNotificationLevel desktop_notification_level;
  protobuf_c_boolean has_mobile_notification_level;
  EChatRoomNotificationLevel mobile_notification_level;
  protobuf_c_boolean has_time_last_mention;
  uint32_t time_last_mention;
  protobuf_c_boolean has_unread_indicator_muted;
  protobuf_c_boolean unread_indicator_muted;
  protobuf_c_boolean has_time_first_unread;
  uint32_t time_first_unread;
};

struct CUserChatRoomGroupState : public ProtobufCppMessage
{
  CUserChatRoomGroupState() :
     ProtobufCppMessage(cuser_chat_room_group_state__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_time_joined;
  uint32_t time_joined;
  size_t n_user_chat_room_state;
  CUserChatRoomState **user_chat_room_state;
  protobuf_c_boolean has_desktop_notification_level;
  EChatRoomNotificationLevel desktop_notification_level;
  protobuf_c_boolean has_mobile_notification_level;
  EChatRoomNotificationLevel mobile_notification_level;
  protobuf_c_boolean has_time_last_group_ack;
  uint32_t time_last_group_ack;
  protobuf_c_boolean has_unread_indicator_muted;
  protobuf_c_boolean unread_indicator_muted;
};

struct CChatRoomCreateChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomCreateChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__create_chat_room_group__response__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  CChatRoomGroupState *state;
  CUserChatRoomGroupState *user_chat_state;
};

struct CChatRoomSaveChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomSaveChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__save_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *name;
};

struct CChatRoomSaveChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomSaveChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__save_chat_room_group__response__descriptor)
  {}

};

struct CChatRoomRenameChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomRenameChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__rename_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *name;
};

struct CChatRoomRenameChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomRenameChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__rename_chat_room_group__response__descriptor)
  {}

  char *name;
};

struct CChatRoomSetChatRoomGroupTaglineRequest : public ProtobufCppMessage
{
  CChatRoomSetChatRoomGroupTaglineRequest() :
     ProtobufCppMessage(cchat_room__set_chat_room_group_tagline__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *tagline;
};

struct CChatRoomSetChatRoomGroupTaglineResponse : public ProtobufCppMessage
{
  CChatRoomSetChatRoomGroupTaglineResponse() :
     ProtobufCppMessage(cchat_room__set_chat_room_group_tagline__response__descriptor)
  {}

};

struct CChatRoomSetChatRoomGroupAvatarRequest : public ProtobufCppMessage
{
  CChatRoomSetChatRoomGroupAvatarRequest() :
     ProtobufCppMessage(cchat_room__set_chat_room_group_avatar__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_avatar_sha;
  ProtobufCBinaryData avatar_sha;
};

struct CChatRoomSetChatRoomGroupAvatarResponse : public ProtobufCppMessage
{
  CChatRoomSetChatRoomGroupAvatarResponse() :
     ProtobufCppMessage(cchat_room__set_chat_room_group_avatar__response__descriptor)
  {}

};

struct CChatRoomSetChatRoomGroupWatchingBroadcastRequest : public ProtobufCppMessage
{
  CChatRoomSetChatRoomGroupWatchingBroadcastRequest() :
     ProtobufCppMessage(cchat_room__set_chat_room_group_watching_broadcast__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_watching_broadcast_accountid;
  uint32_t watching_broadcast_accountid;
  protobuf_c_boolean has_watching_broadcast_channel_id;
  uint64_t watching_broadcast_channel_id;
};

struct CChatRoomSetChatRoomGroupWatchingBroadcastResponse : public ProtobufCppMessage
{
  CChatRoomSetChatRoomGroupWatchingBroadcastResponse() :
     ProtobufCppMessage(cchat_room__set_chat_room_group_watching_broadcast__response__descriptor)
  {}

};

struct CChatRoomJoinMiniGameForChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomJoinMiniGameForChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__join_mini_game_for_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
};

struct CChatRoomJoinMiniGameForChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomJoinMiniGameForChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__join_mini_game_for_chat_room_group__response__descriptor)
  {}

  protobuf_c_boolean has_minigame_id;
  uint64_t minigame_id;
};

struct CChatRoomEndMiniGameForChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomEndMiniGameForChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__end_mini_game_for_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_minigame_id;
  uint64_t minigame_id;
};

struct CChatRoomEndMiniGameForChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomEndMiniGameForChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__end_mini_game_for_chat_room_group__response__descriptor)
  {}

};

struct CChatRoomMuteUserRequest : public ProtobufCppMessage
{
  CChatRoomMuteUserRequest() :
     ProtobufCppMessage(cchat_room__mute_user__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_expiration;
  int32_t expiration;
};

struct CChatRoomMuteUserResponse : public ProtobufCppMessage
{
  CChatRoomMuteUserResponse() :
     ProtobufCppMessage(cchat_room__mute_user__response__descriptor)
  {}

};

struct CChatRoomKickUserRequest : public ProtobufCppMessage
{
  CChatRoomKickUserRequest() :
     ProtobufCppMessage(cchat_room__kick_user__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_expiration;
  int32_t expiration;
};

struct CChatRoomKickUserResponse : public ProtobufCppMessage
{
  CChatRoomKickUserResponse() :
     ProtobufCppMessage(cchat_room__kick_user__response__descriptor)
  {}

};

struct CChatRoomSetUserBanStateRequest : public ProtobufCppMessage
{
  CChatRoomSetUserBanStateRequest() :
     ProtobufCppMessage(cchat_room__set_user_ban_state__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_ban_state;
  protobuf_c_boolean ban_state;
};

struct CChatRoomSetUserBanStateResponse : public ProtobufCppMessage
{
  CChatRoomSetUserBanStateResponse() :
     ProtobufCppMessage(cchat_room__set_user_ban_state__response__descriptor)
  {}

};

struct CChatRoomRevokeInviteRequest : public ProtobufCppMessage
{
  CChatRoomRevokeInviteRequest() :
     ProtobufCppMessage(cchat_room__revoke_invite__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};

struct CChatRoomRevokeInviteResponse : public ProtobufCppMessage
{
  CChatRoomRevokeInviteResponse() :
     ProtobufCppMessage(cchat_room__revoke_invite__response__descriptor)
  {}

};

struct CChatRoomCreateRoleRequest : public ProtobufCppMessage
{
  CChatRoomCreateRoleRequest() :
     ProtobufCppMessage(cchat_room__create_role__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *name;
};

struct CChatRoomCreateRoleResponse : public ProtobufCppMessage
{
  CChatRoomCreateRoleResponse() :
     ProtobufCppMessage(cchat_room__create_role__response__descriptor)
  {}

  CChatRoleActions *actions;
};

struct CChatRoomGetRolesRequest : public ProtobufCppMessage
{
  CChatRoomGetRolesRequest() :
     ProtobufCppMessage(cchat_room__get_roles__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct CChatRoomGetRolesResponse : public ProtobufCppMessage
{
  CChatRoomGetRolesResponse() :
     ProtobufCppMessage(cchat_room__get_roles__response__descriptor)
  {}

  size_t n_roles;
  CChatRole **roles;
};

struct CChatRoomRenameRoleRequest : public ProtobufCppMessage
{
  CChatRoomRenameRoleRequest() :
     ProtobufCppMessage(cchat_room__rename_role__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_role_id;
  uint64_t role_id;
  char *name;
};

struct CChatRoomRenameRoleResponse : public ProtobufCppMessage
{
  CChatRoomRenameRoleResponse() :
     ProtobufCppMessage(cchat_room__rename_role__response__descriptor)
  {}

};

struct CChatRoomReorderRoleRequest : public ProtobufCppMessage
{
  CChatRoomReorderRoleRequest() :
     ProtobufCppMessage(cchat_room__reorder_role__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_role_id;
  uint64_t role_id;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
};

struct CChatRoomReorderRoleResponse : public ProtobufCppMessage
{
  CChatRoomReorderRoleResponse() :
     ProtobufCppMessage(cchat_room__reorder_role__response__descriptor)
  {}

};

struct CChatRoomDeleteRoleRequest : public ProtobufCppMessage
{
  CChatRoomDeleteRoleRequest() :
     ProtobufCppMessage(cchat_room__delete_role__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_role_id;
  uint64_t role_id;
};

struct CChatRoomDeleteRoleResponse : public ProtobufCppMessage
{
  CChatRoomDeleteRoleResponse() :
     ProtobufCppMessage(cchat_room__delete_role__response__descriptor)
  {}

};

struct CChatRoomGetRoleActionsRequest : public ProtobufCppMessage
{
  CChatRoomGetRoleActionsRequest() :
     ProtobufCppMessage(cchat_room__get_role_actions__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_role_id;
  uint64_t role_id;
};

struct CChatRoomGetRoleActionsResponse : public ProtobufCppMessage
{
  CChatRoomGetRoleActionsResponse() :
     ProtobufCppMessage(cchat_room__get_role_actions__response__descriptor)
  {}

  size_t n_actions;
  CChatRoleActions **actions;
};

struct CChatRoomReplaceRoleActionsRequest : public ProtobufCppMessage
{
  CChatRoomReplaceRoleActionsRequest() :
     ProtobufCppMessage(cchat_room__replace_role_actions__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_role_id;
  uint64_t role_id;
  CChatRoleActions *actions;
};

struct CChatRoomReplaceRoleActionsResponse : public ProtobufCppMessage
{
  CChatRoomReplaceRoleActionsResponse() :
     ProtobufCppMessage(cchat_room__replace_role_actions__response__descriptor)
  {}

};

struct CChatRoomAddRoleToUserRequest : public ProtobufCppMessage
{
  CChatRoomAddRoleToUserRequest() :
     ProtobufCppMessage(cchat_room__add_role_to_user__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_role_id;
  uint64_t role_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};

struct CChatRoomAddRoleToUserResponse : public ProtobufCppMessage
{
  CChatRoomAddRoleToUserResponse() :
     ProtobufCppMessage(cchat_room__add_role_to_user__response__descriptor)
  {}

};

struct CChatRoomGetRolesForUserRequest : public ProtobufCppMessage
{
  CChatRoomGetRolesForUserRequest() :
     ProtobufCppMessage(cchat_room__get_roles_for_user__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};

struct CChatRoomGetRolesForUserResponse : public ProtobufCppMessage
{
  CChatRoomGetRolesForUserResponse() :
     ProtobufCppMessage(cchat_room__get_roles_for_user__response__descriptor)
  {}

  size_t n_role_ids;
  uint64_t *role_ids;
};

struct CChatRoomDeleteRoleFromUserRequest : public ProtobufCppMessage
{
  CChatRoomDeleteRoleFromUserRequest() :
     ProtobufCppMessage(cchat_room__delete_role_from_user__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_role_id;
  uint64_t role_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};

struct CChatRoomDeleteRoleFromUserResponse : public ProtobufCppMessage
{
  CChatRoomDeleteRoleFromUserResponse() :
     ProtobufCppMessage(cchat_room__delete_role_from_user__response__descriptor)
  {}

};

struct CChatRoomJoinChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomJoinChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__join_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *invite_code;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
};

struct CChatRoomJoinChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomJoinChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__join_chat_room_group__response__descriptor)
  {}

  CChatRoomGroupState *state;
  CUserChatRoomGroupState *user_chat_state;
  protobuf_c_boolean has_join_chat_id;
  uint64_t join_chat_id;
  protobuf_c_boolean has_time_expire;
  uint32_t time_expire;
};

struct CChatRoomInviteFriendToChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomInviteFriendToChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__invite_friend_to_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_skip_friendsui_check;
  protobuf_c_boolean skip_friendsui_check;
};

struct CChatRoomInviteFriendToChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomInviteFriendToChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__invite_friend_to_chat_room_group__response__descriptor)
  {}

};

struct CChatRoomLeaveChatRoomGroupRequest : public ProtobufCppMessage
{
  CChatRoomLeaveChatRoomGroupRequest() :
     ProtobufCppMessage(cchat_room__leave_chat_room_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct CChatRoomLeaveChatRoomGroupResponse : public ProtobufCppMessage
{
  CChatRoomLeaveChatRoomGroupResponse() :
     ProtobufCppMessage(cchat_room__leave_chat_room_group__response__descriptor)
  {}

};

struct CChatRoomCreateChatRoomRequest : public ProtobufCppMessage
{
  CChatRoomCreateChatRoomRequest() :
     ProtobufCppMessage(cchat_room__create_chat_room__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *name;
  protobuf_c_boolean has_allow_voice;
  protobuf_c_boolean allow_voice;
};

struct CChatRoomCreateChatRoomResponse : public ProtobufCppMessage
{
  CChatRoomCreateChatRoomResponse() :
     ProtobufCppMessage(cchat_room__create_chat_room__response__descriptor)
  {}

  CChatRoomState *chat_room;
};

struct CChatRoomDeleteChatRoomRequest : public ProtobufCppMessage
{
  CChatRoomDeleteChatRoomRequest() :
     ProtobufCppMessage(cchat_room__delete_chat_room__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
};

struct CChatRoomDeleteChatRoomResponse : public ProtobufCppMessage
{
  CChatRoomDeleteChatRoomResponse() :
     ProtobufCppMessage(cchat_room__delete_chat_room__response__descriptor)
  {}

};

struct CChatRoomRenameChatRoomRequest : public ProtobufCppMessage
{
  CChatRoomRenameChatRoomRequest() :
     ProtobufCppMessage(cchat_room__rename_chat_room__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  char *name;
};

struct CChatRoomRenameChatRoomResponse : public ProtobufCppMessage
{
  CChatRoomRenameChatRoomResponse() :
     ProtobufCppMessage(cchat_room__rename_chat_room__response__descriptor)
  {}

};

struct CChatRoomReorderChatRoomRequest : public ProtobufCppMessage
{
  CChatRoomReorderChatRoomRequest() :
     ProtobufCppMessage(cchat_room__reorder_chat_room__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_move_after_chat_id;
  uint64_t move_after_chat_id;
};

struct CChatRoomReorderChatRoomResponse : public ProtobufCppMessage
{
  CChatRoomReorderChatRoomResponse() :
     ProtobufCppMessage(cchat_room__reorder_chat_room__response__descriptor)
  {}

};

struct CChatRoomSendChatMessageRequest : public ProtobufCppMessage
{
  CChatRoomSendChatMessageRequest() :
     ProtobufCppMessage(cchat_room__send_chat_message__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  char *message;
  protobuf_c_boolean has_echo_to_sender;
  protobuf_c_boolean echo_to_sender;
};

struct CChatRoomSendChatMessageResponse : public ProtobufCppMessage
{
  CChatRoomSendChatMessageResponse() :
     ProtobufCppMessage(cchat_room__send_chat_message__response__descriptor)
  {}

  char *modified_message;
  protobuf_c_boolean has_server_timestamp;
  uint32_t server_timestamp;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
  char *message_without_bb_code;
};

struct CChatRoomJoinVoiceChatRequest : public ProtobufCppMessage
{
  CChatRoomJoinVoiceChatRequest() :
     ProtobufCppMessage(cchat_room__join_voice_chat__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
};

struct CChatRoomJoinVoiceChatResponse : public ProtobufCppMessage
{
  CChatRoomJoinVoiceChatResponse() :
     ProtobufCppMessage(cchat_room__join_voice_chat__response__descriptor)
  {}

  protobuf_c_boolean has_voice_chatid;
  uint64_t voice_chatid;
};

struct CChatRoomLeaveVoiceChatRequest : public ProtobufCppMessage
{
  CChatRoomLeaveVoiceChatRequest() :
     ProtobufCppMessage(cchat_room__leave_voice_chat__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
};

struct CChatRoomLeaveVoiceChatResponse : public ProtobufCppMessage
{
  CChatRoomLeaveVoiceChatResponse() :
     ProtobufCppMessage(cchat_room__leave_voice_chat__response__descriptor)
  {}

};

struct CChatRoomGetMessageHistoryRequest : public ProtobufCppMessage
{
  CChatRoomGetMessageHistoryRequest() :
     ProtobufCppMessage(cchat_room__get_message_history__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_last_time;
  uint32_t last_time;
  protobuf_c_boolean has_last_ordinal;
  uint32_t last_ordinal;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
  protobuf_c_boolean has_start_ordinal;
  uint32_t start_ordinal;
  protobuf_c_boolean has_max_count;
  uint32_t max_count;
};

struct ServerMessage : public ProtobufCppMessage
{
  ServerMessage() :
     ProtobufCppMessage(server_message__descriptor)
  {}

  protobuf_c_boolean has_message;
  EChatRoomServerMessage message;
  char *string_param;
  protobuf_c_boolean has_accountid_param;
  uint32_t accountid_param;
};

struct CChatRoomGetMessageHistoryResponse__ChatMessage__MessageReaction : public ProtobufCppMessage
{
  CChatRoomGetMessageHistoryResponse__ChatMessage__MessageReaction() :
     ProtobufCppMessage(cchat_room__get_message_history__response__chat_message__message_reaction__descriptor)
  {}

  protobuf_c_boolean has_reaction_type;
  EChatRoomMessageReactionType reaction_type;
  char *reaction;
  protobuf_c_boolean has_num_reactors;
  uint32_t num_reactors;
  protobuf_c_boolean has_has_user_reacted;
  protobuf_c_boolean has_user_reacted;
};

struct CChatRoomGetMessageHistoryResponse__ChatMessage : public ProtobufCppMessage
{
  CChatRoomGetMessageHistoryResponse__ChatMessage() :
     ProtobufCppMessage(cchat_room__get_message_history__response__chat_message__descriptor)
  {}

  protobuf_c_boolean has_sender;
  uint32_t sender;
  protobuf_c_boolean has_server_timestamp;
  uint32_t server_timestamp;
  char *message;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
  ServerMessage *server_message;
  protobuf_c_boolean has_deleted;
  protobuf_c_boolean deleted;
  size_t n_reactions;
  CChatRoomGetMessageHistoryResponse__ChatMessage__MessageReaction **reactions;
};

struct CChatRoomGetMessageHistoryResponse : public ProtobufCppMessage
{
  CChatRoomGetMessageHistoryResponse() :
     ProtobufCppMessage(cchat_room__get_message_history__response__descriptor)
  {}

  size_t n_messages;
  CChatRoomGetMessageHistoryResponse__ChatMessage **messages;
  protobuf_c_boolean has_more_available;
  protobuf_c_boolean more_available;
};

struct CChatRoomGetMyChatRoomGroupsRequest : public ProtobufCppMessage
{
  CChatRoomGetMyChatRoomGroupsRequest() :
     ProtobufCppMessage(cchat_room__get_my_chat_room_groups__request__descriptor)
  {}

};

struct CChatRoomGetChatRoomGroupSummaryResponse : public ProtobufCppMessage
{
  CChatRoomGetChatRoomGroupSummaryResponse() :
     ProtobufCppMessage(cchat_room__get_chat_room_group_summary__response__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *chat_group_name;
  protobuf_c_boolean has_active_member_count;
  uint32_t active_member_count;
  protobuf_c_boolean has_active_voice_member_count;
  uint32_t active_voice_member_count;
  protobuf_c_boolean has_default_chat_id;
  uint64_t default_chat_id;
  size_t n_chat_rooms;
  CChatRoomState **chat_rooms;
  protobuf_c_boolean has_clanid;
  uint32_t clanid;
  char *chat_group_tagline;
  protobuf_c_boolean has_accountid_owner;
  uint32_t accountid_owner;
  size_t n_top_members;
  uint32_t *top_members;
  protobuf_c_boolean has_chat_group_avatar_sha;
  ProtobufCBinaryData chat_group_avatar_sha;
  protobuf_c_boolean has_rank;
  EChatRoomGroupRank rank;
  protobuf_c_boolean has_default_role_id;
  uint64_t default_role_id;
  size_t n_role_ids;
  uint64_t *role_ids;
  size_t n_role_actions;
  CChatRoleActions **role_actions;
  protobuf_c_boolean has_watching_broadcast_accountid;
  uint32_t watching_broadcast_accountid;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  size_t n_party_beacons;
  CChatPartyBeacon **party_beacons;
  protobuf_c_boolean has_watching_broadcast_channel_id;
  uint64_t watching_broadcast_channel_id;
  protobuf_c_boolean has_active_minigame_id;
  uint64_t active_minigame_id;
  char *avatar_ugc_url;
  protobuf_c_boolean has_disabled;
  protobuf_c_boolean disabled;
};

struct CChatRoomSummaryPair : public ProtobufCppMessage
{
  CChatRoomSummaryPair() :
     ProtobufCppMessage(cchat_room_summary_pair__descriptor)
  {}

  CUserChatRoomGroupState *user_chat_group_state;
  CChatRoomGetChatRoomGroupSummaryResponse *group_summary;
};

struct CChatRoomGetMyChatRoomGroupsResponse : public ProtobufCppMessage
{
  CChatRoomGetMyChatRoomGroupsResponse() :
     ProtobufCppMessage(cchat_room__get_my_chat_room_groups__response__descriptor)
  {}

  size_t n_chat_room_groups;
  CChatRoomSummaryPair **chat_room_groups;
};

struct CChatRoomGetChatRoomGroupStateRequest : public ProtobufCppMessage
{
  CChatRoomGetChatRoomGroupStateRequest() :
     ProtobufCppMessage(cchat_room__get_chat_room_group_state__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct CChatRoomGetChatRoomGroupStateResponse : public ProtobufCppMessage
{
  CChatRoomGetChatRoomGroupStateResponse() :
     ProtobufCppMessage(cchat_room__get_chat_room_group_state__response__descriptor)
  {}

  CChatRoomGroupState *state;
};

struct CChatRoomGetChatRoomGroupSummaryRequest : public ProtobufCppMessage
{
  CChatRoomGetChatRoomGroupSummaryRequest() :
     ProtobufCppMessage(cchat_room__get_chat_room_group_summary__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct CChatRoomSetAppChatRoomGroupForceActiveRequest : public ProtobufCppMessage
{
  CChatRoomSetAppChatRoomGroupForceActiveRequest() :
     ProtobufCppMessage(cchat_room__set_app_chat_room_group_force_active__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_requesting_app_id;
  uint32_t requesting_app_id;
};

struct CChatRoomSetAppChatRoomGroupForceActiveResponse : public ProtobufCppMessage
{
  CChatRoomSetAppChatRoomGroupForceActiveResponse() :
     ProtobufCppMessage(cchat_room__set_app_chat_room_group_force_active__response__descriptor)
  {}

  protobuf_c_boolean has_result;
  uint32_t result;
  size_t n_accounts_in_channel;
  uint32_t *accounts_in_channel;
};

struct CChatRoomSetAppChatRoomGroupStopForceActiveNotification : public ProtobufCppMessage
{
  CChatRoomSetAppChatRoomGroupStopForceActiveNotification() :
     ProtobufCppMessage(cchat_room__set_app_chat_room_group_stop_force_active__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_requesting_app_id;
  uint32_t requesting_app_id;
};

struct CChatRoomAckChatMessageNotification : public ProtobufCppMessage
{
  CChatRoomAckChatMessageNotification() :
     ProtobufCppMessage(cchat_room__ack_chat_message__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
};

struct CChatRoomCreateInviteLinkRequest : public ProtobufCppMessage
{
  CChatRoomCreateInviteLinkRequest() :
     ProtobufCppMessage(cchat_room__create_invite_link__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_seconds_valid;
  uint32_t seconds_valid;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
};

struct CChatRoomCreateInviteLinkResponse : public ProtobufCppMessage
{
  CChatRoomCreateInviteLinkResponse() :
     ProtobufCppMessage(cchat_room__create_invite_link__response__descriptor)
  {}

  char *invite_code;
  protobuf_c_boolean has_seconds_valid;
  uint32_t seconds_valid;
};

struct CChatRoomGetInviteLinkInfoRequest : public ProtobufCppMessage
{
  CChatRoomGetInviteLinkInfoRequest() :
     ProtobufCppMessage(cchat_room__get_invite_link_info__request__descriptor)
  {}

  char *invite_code;
};

struct CChatRoomGetInviteLinkInfoResponse : public ProtobufCppMessage
{
  CChatRoomGetInviteLinkInfoResponse() :
     ProtobufCppMessage(cchat_room__get_invite_link_info__response__descriptor)
  {}

  protobuf_c_boolean has_steamid_sender;
  uint64_t steamid_sender;
  protobuf_c_boolean has_time_expires;
  uint32_t time_expires;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  CChatRoomGetChatRoomGroupSummaryResponse *group_summary;
  CUserChatRoomGroupState *user_chat_group_state;
  protobuf_c_boolean has_time_kick_expire;
  uint32_t time_kick_expire;
  protobuf_c_boolean has_banned;
  protobuf_c_boolean banned;
};

struct CChatRoomGetInviteInfoRequest : public ProtobufCppMessage
{
  CChatRoomGetInviteInfoRequest() :
     ProtobufCppMessage(cchat_room__get_invite_info__request__descriptor)
  {}

  protobuf_c_boolean has_steamid_invitee;
  uint64_t steamid_invitee;
  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  char *invite_code;
};

struct CChatRoomGetInviteInfoResponse : public ProtobufCppMessage
{
  CChatRoomGetInviteInfoResponse() :
     ProtobufCppMessage(cchat_room__get_invite_info__response__descriptor)
  {}

  CChatRoomGetChatRoomGroupSummaryResponse *group_summary;
  protobuf_c_boolean has_time_kick_expire;
  uint32_t time_kick_expire;
  protobuf_c_boolean has_banned;
  protobuf_c_boolean banned;
};

struct CChatRoomGetInviteLinksForGroupRequest : public ProtobufCppMessage
{
  CChatRoomGetInviteLinksForGroupRequest() :
     ProtobufCppMessage(cchat_room__get_invite_links_for_group__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct CChatRoomGetInviteLinksForGroupResponse__LinkInfo : public ProtobufCppMessage
{
  CChatRoomGetInviteLinksForGroupResponse__LinkInfo() :
     ProtobufCppMessage(cchat_room__get_invite_links_for_group__response__link_info__descriptor)
  {}

  char *invite_code;
  protobuf_c_boolean has_steamid_creator;
  uint64_t steamid_creator;
  protobuf_c_boolean has_time_expires;
  uint32_t time_expires;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
};

struct CChatRoomGetInviteLinksForGroupResponse : public ProtobufCppMessage
{
  CChatRoomGetInviteLinksForGroupResponse() :
     ProtobufCppMessage(cchat_room__get_invite_links_for_group__response__descriptor)
  {}

  size_t n_invite_links;
  CChatRoomGetInviteLinksForGroupResponse__LinkInfo **invite_links;
};

struct CChatRoomGetBanListRequest : public ProtobufCppMessage
{
  CChatRoomGetBanListRequest() :
     ProtobufCppMessage(cchat_room__get_ban_list__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct CChatRoomGetBanListResponse__BanInfo : public ProtobufCppMessage
{
  CChatRoomGetBanListResponse__BanInfo() :
     ProtobufCppMessage(cchat_room__get_ban_list__response__ban_info__descriptor)
  {}

  protobuf_c_boolean has_accountid;
  uint32_t accountid;
  protobuf_c_boolean has_accountid_actor;
  uint32_t accountid_actor;
  protobuf_c_boolean has_time_banned;
  uint32_t time_banned;
  char *ban_reason;
};

struct CChatRoomGetBanListResponse : public ProtobufCppMessage
{
  CChatRoomGetBanListResponse() :
     ProtobufCppMessage(cchat_room__get_ban_list__response__descriptor)
  {}

  size_t n_bans;
  CChatRoomGetBanListResponse__BanInfo **bans;
};

struct CChatRoomGetInviteListRequest : public ProtobufCppMessage
{
  CChatRoomGetInviteListRequest() :
     ProtobufCppMessage(cchat_room__get_invite_list__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct CChatRoomGroupInvite : public ProtobufCppMessage
{
  CChatRoomGroupInvite() :
     ProtobufCppMessage(cchat_room_group_invite__descriptor)
  {}

  protobuf_c_boolean has_accountid;
  uint32_t accountid;
  protobuf_c_boolean has_accountid_actor;
  uint32_t accountid_actor;
  protobuf_c_boolean has_time_invited;
  uint32_t time_invited;
};

struct CChatRoomGetInviteListResponse : public ProtobufCppMessage
{
  CChatRoomGetInviteListResponse() :
     ProtobufCppMessage(cchat_room__get_invite_list__response__descriptor)
  {}

  size_t n_invites;
  CChatRoomGroupInvite **invites;
};

struct CChatRoomDeleteInviteLinkRequest : public ProtobufCppMessage
{
  CChatRoomDeleteInviteLinkRequest() :
     ProtobufCppMessage(cchat_room__delete_invite_link__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  char *invite_code;
};

struct CChatRoomDeleteInviteLinkResponse : public ProtobufCppMessage
{
  CChatRoomDeleteInviteLinkResponse() :
     ProtobufCppMessage(cchat_room__delete_invite_link__response__descriptor)
  {}

};

struct CChatRoomSetSessionActiveChatRoomGroupsRequest : public ProtobufCppMessage
{
  CChatRoomSetSessionActiveChatRoomGroupsRequest() :
     ProtobufCppMessage(cchat_room__set_session_active_chat_room_groups__request__descriptor)
  {}

  size_t n_chat_group_ids;
  uint64_t *chat_group_ids;
  size_t n_chat_groups_data_requested;
  uint64_t *chat_groups_data_requested;
  protobuf_c_boolean has_virtualize_members_threshold;
  int32_t virtualize_members_threshold;
};

struct CChatRoomSetSessionActiveChatRoomGroupsResponse : public ProtobufCppMessage
{
  CChatRoomSetSessionActiveChatRoomGroupsResponse() :
     ProtobufCppMessage(cchat_room__set_session_active_chat_room_groups__response__descriptor)
  {}

  size_t n_chat_states;
  CChatRoomGroupState **chat_states;
  size_t n_virtualize_members_chat_group_ids;
  uint64_t *virtualize_members_chat_group_ids;
};

struct CChatRoomSetUserChatGroupPreferencesRequest__ChatGroupPreferences : public ProtobufCppMessage
{
  CChatRoomSetUserChatGroupPreferencesRequest__ChatGroupPreferences() :
     ProtobufCppMessage(cchat_room__set_user_chat_group_preferences__request__chat_group_preferences__descriptor)
  {}

  protobuf_c_boolean has_desktop_notification_level;
  EChatRoomNotificationLevel desktop_notification_level;
  protobuf_c_boolean has_mobile_notification_level;
  EChatRoomNotificationLevel mobile_notification_level;
  protobuf_c_boolean has_unread_indicator_muted;
  protobuf_c_boolean unread_indicator_muted;
};

struct CChatRoomSetUserChatGroupPreferencesRequest__ChatRoomPreferences : public ProtobufCppMessage
{
  CChatRoomSetUserChatGroupPreferencesRequest__ChatRoomPreferences() :
     ProtobufCppMessage(cchat_room__set_user_chat_group_preferences__request__chat_room_preferences__descriptor)
  {}

  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_desktop_notification_level;
  EChatRoomNotificationLevel desktop_notification_level;
  protobuf_c_boolean has_mobile_notification_level;
  EChatRoomNotificationLevel mobile_notification_level;
  protobuf_c_boolean has_unread_indicator_muted;
  protobuf_c_boolean unread_indicator_muted;
};

struct CChatRoomSetUserChatGroupPreferencesRequest : public ProtobufCppMessage
{
  CChatRoomSetUserChatGroupPreferencesRequest() :
     ProtobufCppMessage(cchat_room__set_user_chat_group_preferences__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  CChatRoomSetUserChatGroupPreferencesRequest__ChatGroupPreferences *chat_group_preferences;
  size_t n_chat_room_preferences;
  CChatRoomSetUserChatGroupPreferencesRequest__ChatRoomPreferences **chat_room_preferences;
};

struct CChatRoomSetUserChatGroupPreferencesResponse : public ProtobufCppMessage
{
  CChatRoomSetUserChatGroupPreferencesResponse() :
     ProtobufCppMessage(cchat_room__set_user_chat_group_preferences__response__descriptor)
  {}

};

struct CChatRoomDeleteChatMessagesRequest__Message : public ProtobufCppMessage
{
  CChatRoomDeleteChatMessagesRequest__Message() :
     ProtobufCppMessage(cchat_room__delete_chat_messages__request__message__descriptor)
  {}

  protobuf_c_boolean has_server_timestamp;
  uint32_t server_timestamp;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
};

struct CChatRoomDeleteChatMessagesRequest : public ProtobufCppMessage
{
  CChatRoomDeleteChatMessagesRequest() :
     ProtobufCppMessage(cchat_room__delete_chat_messages__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  size_t n_messages;
  CChatRoomDeleteChatMessagesRequest__Message **messages;
};

struct CChatRoomDeleteChatMessagesResponse : public ProtobufCppMessage
{
  CChatRoomDeleteChatMessagesResponse() :
     ProtobufCppMessage(cchat_room__delete_chat_messages__response__descriptor)
  {}

};

struct CChatRoomUpdateMemberListViewNotification : public ProtobufCppMessage
{
  CChatRoomUpdateMemberListViewNotification() :
     ProtobufCppMessage(cchat_room__update_member_list_view__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_view_id;
  uint64_t view_id;
  protobuf_c_boolean has_start;
  int32_t start;
  protobuf_c_boolean has_end;
  int32_t end;
  protobuf_c_boolean has_client_changenumber;
  int32_t client_changenumber;
  protobuf_c_boolean has_delete_view;
  protobuf_c_boolean delete_view;
  size_t n_persona_subscribe_accountids;
  int32_t *persona_subscribe_accountids;
  size_t n_persona_unsubscribe_accountids;
  int32_t *persona_unsubscribe_accountids;
};

struct CChatRoomSearchMembersRequest : public ProtobufCppMessage
{
  CChatRoomSearchMembersRequest() :
     ProtobufCppMessage(cchat_room__search_members__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_search_id;
  uint64_t search_id;
  char *search_text;
  protobuf_c_boolean has_max_results;
  int32_t max_results;
};

struct CChatRoomSearchMembersResponse__MemberMatch : public ProtobufCppMessage
{
  CChatRoomSearchMembersResponse__MemberMatch() :
     ProtobufCppMessage(cchat_room__search_members__response__member_match__descriptor)
  {}

  protobuf_c_boolean has_accountid;
  int32_t accountid;
  CMsgClientPersonaState__Friend *persona;
};

struct CChatRoomSearchMembersResponse : public ProtobufCppMessage
{
  CChatRoomSearchMembersResponse() :
     ProtobufCppMessage(cchat_room__search_members__response__descriptor)
  {}

  size_t n_matching_members;
  CChatRoomSearchMembersResponse__MemberMatch **matching_members;
  protobuf_c_boolean has_status_flags;
  uint32_t status_flags;
};

struct CChatRoomUpdateMessageReactionRequest : public ProtobufCppMessage
{
  CChatRoomUpdateMessageReactionRequest() :
     ProtobufCppMessage(cchat_room__update_message_reaction__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_server_timestamp;
  uint32_t server_timestamp;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
  protobuf_c_boolean has_reaction_type;
  EChatRoomMessageReactionType reaction_type;
  char *reaction;
  protobuf_c_boolean has_is_add;
  protobuf_c_boolean is_add;
};

struct CChatRoomUpdateMessageReactionResponse : public ProtobufCppMessage
{
  CChatRoomUpdateMessageReactionResponse() :
     ProtobufCppMessage(cchat_room__update_message_reaction__response__descriptor)
  {}

  protobuf_c_boolean has_num_reactors;
  uint32_t num_reactors;
};

struct CChatRoomGetMessageReactionReactorsRequest : public ProtobufCppMessage
{
  CChatRoomGetMessageReactionReactorsRequest() :
     ProtobufCppMessage(cchat_room__get_message_reaction_reactors__request__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_server_timestamp;
  uint32_t server_timestamp;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
  protobuf_c_boolean has_reaction_type;
  EChatRoomMessageReactionType reaction_type;
  char *reaction;
  protobuf_c_boolean has_limit;
  uint32_t limit;
};

struct CChatRoomGetMessageReactionReactorsResponse : public ProtobufCppMessage
{
  CChatRoomGetMessageReactionReactorsResponse() :
     ProtobufCppMessage(cchat_room__get_message_reaction_reactors__response__descriptor)
  {}

  size_t n_reactors;
  uint32_t *reactors;
};

struct CClanChatRoomsGetClanChatRoomInfoRequest : public ProtobufCppMessage
{
  CClanChatRoomsGetClanChatRoomInfoRequest() :
     ProtobufCppMessage(cclan_chat_rooms__get_clan_chat_room_info__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_autocreate;
  protobuf_c_boolean autocreate;
};

struct CClanChatRoomsGetClanChatRoomInfoResponse : public ProtobufCppMessage
{
  CClanChatRoomsGetClanChatRoomInfoResponse() :
     ProtobufCppMessage(cclan_chat_rooms__get_clan_chat_room_info__response__descriptor)
  {}

  CChatRoomGetChatRoomGroupSummaryResponse *chat_group_summary;
};

struct CClanChatRoomsSetClanChatRoomPrivateRequest : public ProtobufCppMessage
{
  CClanChatRoomsSetClanChatRoomPrivateRequest() :
     ProtobufCppMessage(cclan_chat_rooms__set_clan_chat_room_private__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_chat_room_private;
  protobuf_c_boolean chat_room_private;
};

struct CClanChatRoomsSetClanChatRoomPrivateResponse : public ProtobufCppMessage
{
  CClanChatRoomsSetClanChatRoomPrivateResponse() :
     ProtobufCppMessage(cclan_chat_rooms__set_clan_chat_room_private__response__descriptor)
  {}

  protobuf_c_boolean has_chat_room_private;
  protobuf_c_boolean chat_room_private;
};

struct CChatMentions : public ProtobufCppMessage
{
  CChatMentions() :
     ProtobufCppMessage(cchat_mentions__descriptor)
  {}

  protobuf_c_boolean has_mention_all;
  protobuf_c_boolean mention_all;
  protobuf_c_boolean has_mention_here;
  protobuf_c_boolean mention_here;
  size_t n_mention_accountids;
  uint32_t *mention_accountids;
};

struct CChatRoomIncomingChatMessageNotification : public ProtobufCppMessage
{
  CChatRoomIncomingChatMessageNotification() :
     ProtobufCppMessage(cchat_room__incoming_chat_message__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_steamid_sender;
  uint64_t steamid_sender;
  char *message;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  CChatMentions *mentions;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
  ServerMessage *server_message;
  char *message_no_bbcode;
  char *chat_name;
};

struct CChatRoomChatMessageModifiedNotification__ChatMessage : public ProtobufCppMessage
{
  CChatRoomChatMessageModifiedNotification__ChatMessage() :
     ProtobufCppMessage(cchat_room__chat_message_modified__notification__chat_message__descriptor)
  {}

  protobuf_c_boolean has_server_timestamp;
  uint32_t server_timestamp;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
  protobuf_c_boolean has_deleted;
  protobuf_c_boolean deleted;
};

struct CChatRoomChatMessageModifiedNotification : public ProtobufCppMessage
{
  CChatRoomChatMessageModifiedNotification() :
     ProtobufCppMessage(cchat_room__chat_message_modified__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  size_t n_messages;
  CChatRoomChatMessageModifiedNotification__ChatMessage **messages;
};

struct CChatRoomMemberStateChangeNotification : public ProtobufCppMessage
{
  CChatRoomMemberStateChangeNotification() :
     ProtobufCppMessage(cchat_room__member_state_change__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  CChatRoomMember *member;
  protobuf_c_boolean has_change;
  EChatRoomMemberStateChange change;
};

struct CChatRoomChatRoomHeaderStateNotification : public ProtobufCppMessage
{
  CChatRoomChatRoomHeaderStateNotification() :
     ProtobufCppMessage(cchat_room__chat_room_header_state__notification__descriptor)
  {}

  CChatRoomGroupHeaderState *header_state;
};

struct CChatRoomChatRoomGroupRoomsChangeNotification : public ProtobufCppMessage
{
  CChatRoomChatRoomGroupRoomsChangeNotification() :
     ProtobufCppMessage(cchat_room__chat_room_group_rooms_change__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_default_chat_id;
  uint64_t default_chat_id;
  size_t n_chat_rooms;
  CChatRoomState **chat_rooms;
};

struct CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification : public ProtobufCppMessage
{
  CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification() :
     ProtobufCppMessage(cchat_room__notify_should_rejoin_chat_room_voice_chat__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
};

struct ChatRoomClientNotifyChatGroupUserStateChangedNotification : public ProtobufCppMessage
{
  ChatRoomClientNotifyChatGroupUserStateChangedNotification() :
     ProtobufCppMessage(chat_room_client__notify_chat_group_user_state_changed__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  CUserChatRoomGroupState *user_chat_group_state;
  CChatRoomGetChatRoomGroupSummaryResponse *group_summary;
  protobuf_c_boolean has_user_action;
  EChatRoomMemberStateChange user_action;
};

struct ChatRoomClientNotifyChatRoomDisconnectNotification : public ProtobufCppMessage
{
  ChatRoomClientNotifyChatRoomDisconnectNotification() :
     ProtobufCppMessage(chat_room_client__notify_chat_room_disconnect__notification__descriptor)
  {}

  size_t n_chat_group_ids;
  uint64_t *chat_group_ids;
};

struct CChatRoomMemberListView : public ProtobufCppMessage
{
  CChatRoomMemberListView() :
     ProtobufCppMessage(cchat_room_member_list_view__descriptor)
  {}

  protobuf_c_boolean has_start;
  int32_t start;
  protobuf_c_boolean has_end;
  int32_t end;
  protobuf_c_boolean has_total_count;
  int32_t total_count;
  protobuf_c_boolean has_client_changenumber;
  int32_t client_changenumber;
  protobuf_c_boolean has_server_changenumber;
  int32_t server_changenumber;
};

struct CChatRoomMemberSummaryCounts : public ProtobufCppMessage
{
  CChatRoomMemberSummaryCounts() :
     ProtobufCppMessage(cchat_room_member_summary_counts__descriptor)
  {}

  protobuf_c_boolean has_ingame;
  int32_t ingame;
  protobuf_c_boolean has_online;
  int32_t online;
  protobuf_c_boolean has_offline;
  int32_t offline;
};

struct CChatRoomClientMemberListViewUpdatedNotification__MemberListViewEntry : public ProtobufCppMessage
{
  CChatRoomClientMemberListViewUpdatedNotification__MemberListViewEntry() :
     ProtobufCppMessage(cchat_room_client__member_list_view_updated__notification__member_list_view_entry__descriptor)
  {}

  protobuf_c_boolean has_rank;
  int32_t rank;
  protobuf_c_boolean has_accountid;
  uint32_t accountid;
  CMsgClientPersonaState__Friend *persona;
};

struct CChatRoomClientMemberListViewUpdatedNotification : public ProtobufCppMessage
{
  CChatRoomClientMemberListViewUpdatedNotification() :
     ProtobufCppMessage(cchat_room_client__member_list_view_updated__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_view_id;
  uint64_t view_id;
  CChatRoomMemberListView *view;
  size_t n_members;
  CChatRoomClientMemberListViewUpdatedNotification__MemberListViewEntry **members;
  protobuf_c_boolean has_status_flags;
  uint32_t status_flags;
  CChatRoomMemberSummaryCounts *member_summary;
  size_t n_subscribed_personas;
  CMsgClientPersonaState__Friend **subscribed_personas;
};

struct CChatRoomMessageReactionNotification : public ProtobufCppMessage
{
  CChatRoomMessageReactionNotification() :
     ProtobufCppMessage(cchat_room__message_reaction__notification__descriptor)
  {}

  protobuf_c_boolean has_chat_group_id;
  uint64_t chat_group_id;
  protobuf_c_boolean has_chat_id;
  uint64_t chat_id;
  protobuf_c_boolean has_server_timestamp;
  uint32_t server_timestamp;
  protobuf_c_boolean has_ordinal;
  uint32_t ordinal;
  protobuf_c_boolean has_reactor;
  uint64_t reactor;
  protobuf_c_boolean has_reaction_type;
  EChatRoomMessageReactionType reaction_type;
  char *reaction;
  protobuf_c_boolean has_is_add;
  protobuf_c_boolean is_add;
};

struct CChatUsabilityClientUsabilityMetricsNotification__Settings : public ProtobufCppMessage
{
  CChatUsabilityClientUsabilityMetricsNotification__Settings() :
     ProtobufCppMessage(cchat_usability__client_usability_metrics__notification__settings__descriptor)
  {}

  protobuf_c_boolean has_notifications_show_ingame;
  protobuf_c_boolean notifications_show_ingame;
  protobuf_c_boolean has_notifications_show_online;
  protobuf_c_boolean notifications_show_online;
  protobuf_c_boolean has_notifications_show_message;
  protobuf_c_boolean notifications_show_message;
  protobuf_c_boolean has_notifications_events_and_announcements;
  protobuf_c_boolean notifications_events_and_announcements;
  protobuf_c_boolean has_sounds_play_ingame;
  protobuf_c_boolean sounds_play_ingame;
  protobuf_c_boolean has_sounds_play_online;
  protobuf_c_boolean sounds_play_online;
  protobuf_c_boolean has_sounds_play_message;
  protobuf_c_boolean sounds_play_message;
  protobuf_c_boolean has_sounds_events_and_announcements;
  protobuf_c_boolean sounds_events_and_announcements;
  protobuf_c_boolean has_always_new_chat_window;
  protobuf_c_boolean always_new_chat_window;
  protobuf_c_boolean has_force_alphabetic_friend_sorting;
  protobuf_c_boolean force_alphabetic_friend_sorting;
  protobuf_c_boolean has_chat_flash_mode;
  int32_t chat_flash_mode;
  protobuf_c_boolean has_remember_open_chats;
  protobuf_c_boolean remember_open_chats;
  protobuf_c_boolean has_compact_quick_access;
  protobuf_c_boolean compact_quick_access;
  protobuf_c_boolean has_compact_friends_list;
  protobuf_c_boolean compact_friends_list;
  protobuf_c_boolean has_notifications_show_chat_room_notification;
  protobuf_c_boolean notifications_show_chat_room_notification;
  protobuf_c_boolean has_sounds_play_chat_room_notification;
  protobuf_c_boolean sounds_play_chat_room_notification;
  protobuf_c_boolean has_hide_offline_friends_in_tag_groups;
  protobuf_c_boolean hide_offline_friends_in_tag_groups;
  protobuf_c_boolean has_hide_categorized_friends;
  protobuf_c_boolean hide_categorized_friends;
  protobuf_c_boolean has_categorize_in_game_friends_by_game;
  protobuf_c_boolean categorize_in_game_friends_by_game;
  protobuf_c_boolean has_chat_font_size;
  int32_t chat_font_size;
  protobuf_c_boolean has_use24hour_clock;
  protobuf_c_boolean use24hour_clock;
  protobuf_c_boolean has_do_not_disturb_mode;
  protobuf_c_boolean do_not_disturb_mode;
  protobuf_c_boolean has_disable_embed_inlining;
  protobuf_c_boolean disable_embed_inlining;
  protobuf_c_boolean has_sign_into_friends;
  protobuf_c_boolean sign_into_friends;
  protobuf_c_boolean has_animated_avatars;
  protobuf_c_boolean animated_avatars;
};

struct CChatUsabilityClientUsabilityMetricsNotification__VoiceSettings : public ProtobufCppMessage
{
  CChatUsabilityClientUsabilityMetricsNotification__VoiceSettings() :
     ProtobufCppMessage(cchat_usability__client_usability_metrics__notification__voice_settings__descriptor)
  {}

  protobuf_c_boolean has_voice_input_gain;
  float voice_input_gain;
  protobuf_c_boolean has_voice_output_gain;
  float voice_output_gain;
  protobuf_c_boolean has_noise_gate_level;
  int32_t noise_gate_level;
  protobuf_c_boolean has_voice_use_echo_cancellation;
  protobuf_c_boolean voice_use_echo_cancellation;
  protobuf_c_boolean has_voice_use_noise_cancellation;
  protobuf_c_boolean voice_use_noise_cancellation;
  protobuf_c_boolean has_voice_use_auto_gain_control;
  protobuf_c_boolean voice_use_auto_gain_control;
  protobuf_c_boolean has_selected_non_default_mic;
  protobuf_c_boolean selected_non_default_mic;
  protobuf_c_boolean has_selected_non_default_output;
  protobuf_c_boolean selected_non_default_output;
  protobuf_c_boolean has_push_to_talk_enabled;
  protobuf_c_boolean push_to_talk_enabled;
  protobuf_c_boolean has_push_to_mute_enabled;
  protobuf_c_boolean push_to_mute_enabled;
  protobuf_c_boolean has_play_ptt_sounds;
  protobuf_c_boolean play_ptt_sounds;
};

struct CChatUsabilityClientUsabilityMetricsNotification__UIState__CategoryCollapseState : public ProtobufCppMessage
{
  CChatUsabilityClientUsabilityMetricsNotification__UIState__CategoryCollapseState() :
     ProtobufCppMessage(cchat_usability__client_usability_metrics__notification__uistate__category_collapse_state__descriptor)
  {}

  protobuf_c_boolean has_in_game_collapsed;
  protobuf_c_boolean in_game_collapsed;
  protobuf_c_boolean has_online_collapsed;
  protobuf_c_boolean online_collapsed;
  protobuf_c_boolean has_offline_collapsed;
  protobuf_c_boolean offline_collapsed;
  protobuf_c_boolean has_game_groups_collapsed;
  int32_t game_groups_collapsed;
  protobuf_c_boolean has_categories_collapsed;
  int32_t categories_collapsed;
};

struct CChatUsabilityClientUsabilityMetricsNotification__UIState : public ProtobufCppMessage
{
  CChatUsabilityClientUsabilityMetricsNotification__UIState() :
     ProtobufCppMessage(cchat_usability__client_usability_metrics__notification__uistate__descriptor)
  {}

  protobuf_c_boolean has_friends_list_height;
  int32_t friends_list_height;
  protobuf_c_boolean has_friends_list_width;
  int32_t friends_list_width;
  protobuf_c_boolean has_friends_list_docked;
  protobuf_c_boolean friends_list_docked;
  protobuf_c_boolean has_friends_list_collapsed;
  protobuf_c_boolean friends_list_collapsed;
  protobuf_c_boolean has_friends_list_group_chats_height;
  int32_t friends_list_group_chats_height;
  protobuf_c_boolean has_friends_list_visible;
  protobuf_c_boolean friends_list_visible;
  protobuf_c_boolean has_chat_popups_opened;
  int32_t chat_popups_opened;
  protobuf_c_boolean has_group_chat_tabs_opened;
  int32_t group_chat_tabs_opened;
  protobuf_c_boolean has_friend_chat_tabs_opened;
  int32_t friend_chat_tabs_opened;
  protobuf_c_boolean has_chat_window_width;
  int32_t chat_window_width;
  protobuf_c_boolean has_chat_window_height;
  int32_t chat_window_height;
  CChatUsabilityClientUsabilityMetricsNotification__UIState__CategoryCollapseState *category_collapse;
  protobuf_c_boolean has_group_chat_left_col_collapsed;
  int32_t group_chat_left_col_collapsed;
  protobuf_c_boolean has_group_chat_right_col_collapsed;
  int32_t group_chat_right_col_collapsed;
  protobuf_c_boolean has_in_one_on_one_voice_chat;
  protobuf_c_boolean in_one_on_one_voice_chat;
  protobuf_c_boolean has_in_group_voice_chat;
  protobuf_c_boolean in_group_voice_chat;
};

struct CChatUsabilityClientUsabilityMetricsNotification__Metrics : public ProtobufCppMessage
{
  CChatUsabilityClientUsabilityMetricsNotification__Metrics() :
     ProtobufCppMessage(cchat_usability__client_usability_metrics__notification__metrics__descriptor)
  {}

  protobuf_c_boolean has_friends_count;
  int32_t friends_count;
  protobuf_c_boolean has_friends_category_count;
  int32_t friends_category_count;
  protobuf_c_boolean has_friends_categorized_count;
  int32_t friends_categorized_count;
  protobuf_c_boolean has_friends_online_count;
  int32_t friends_online_count;
  protobuf_c_boolean has_friends_in_game_count;
  int32_t friends_in_game_count;
  protobuf_c_boolean has_friends_in_game_singleton_count;
  int32_t friends_in_game_singleton_count;
  protobuf_c_boolean has_game_group_count;
  int32_t game_group_count;
  protobuf_c_boolean has_friends_favorite_count;
  int32_t friends_favorite_count;
  protobuf_c_boolean has_group_chat_count;
  int32_t group_chat_count;
  protobuf_c_boolean has_group_chat_favorite_count;
  int32_t group_chat_favorite_count;
};

struct CChatUsabilityClientUsabilityMetricsNotification : public ProtobufCppMessage
{
  CChatUsabilityClientUsabilityMetricsNotification() :
     ProtobufCppMessage(cchat_usability__client_usability_metrics__notification__descriptor)
  {}

  protobuf_c_boolean has_metrics_run_id;
  uint32_t metrics_run_id;
  protobuf_c_boolean has_client_build;
  uint32_t client_build;
  protobuf_c_boolean has_metrics_version;
  uint32_t metrics_version;
  protobuf_c_boolean has_in_web;
  protobuf_c_boolean in_web;
  CChatUsabilityClientUsabilityMetricsNotification__Settings *settings;
  CChatUsabilityClientUsabilityMetricsNotification__VoiceSettings *voice_settings;
  CChatUsabilityClientUsabilityMetricsNotification__UIState *ui_state;
  CChatUsabilityClientUsabilityMetricsNotification__Metrics *metrics;
};

struct CChatUsabilityRequestClientUsabilityMetricsNotification : public ProtobufCppMessage
{
  CChatUsabilityRequestClientUsabilityMetricsNotification() :
     ProtobufCppMessage(cchat_usability__request_client_usability_metrics__notification__descriptor)
  {}

  protobuf_c_boolean has_metrics_run_id;
  uint32_t metrics_run_id;
};

size_t cchat__request_friend_persona_states__request__get_packed_size
                     (const CChatRequestFriendPersonaStatesRequest   *message);
size_t cchat__request_friend_persona_states__request__pack
                     (const CChatRequestFriendPersonaStatesRequest   *message,
                      uint8_t             *out);
size_t cchat__request_friend_persona_states__request__pack_to_buffer
                     (const CChatRequestFriendPersonaStatesRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRequestFriendPersonaStatesRequest *
       cchat__request_friend_persona_states__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat__request_friend_persona_states__request__free_unpacked
                     (CChatRequestFriendPersonaStatesRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat__request_friend_persona_states__response__get_packed_size
                     (const CChatRequestFriendPersonaStatesResponse   *message);
size_t cchat__request_friend_persona_states__response__pack
                     (const CChatRequestFriendPersonaStatesResponse   *message,
                      uint8_t             *out);
size_t cchat__request_friend_persona_states__response__pack_to_buffer
                     (const CChatRequestFriendPersonaStatesResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRequestFriendPersonaStatesResponse *
       cchat__request_friend_persona_states__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat__request_friend_persona_states__response__free_unpacked
                     (CChatRequestFriendPersonaStatesResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_chat_room_group__request__get_packed_size
                     (const CChatRoomCreateChatRoomGroupRequest   *message);
size_t cchat_room__create_chat_room_group__request__pack
                     (const CChatRoomCreateChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__create_chat_room_group__request__pack_to_buffer
                     (const CChatRoomCreateChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateChatRoomGroupRequest *
       cchat_room__create_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_chat_room_group__request__free_unpacked
                     (CChatRoomCreateChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_role__get_packed_size
                     (const CChatRole   *message);
size_t cchat_role__pack
                     (const CChatRole   *message,
                      uint8_t             *out);
size_t cchat_role__pack_to_buffer
                     (const CChatRole   *message,
                      ProtobufCBuffer     *buffer);
CChatRole *
       cchat_role__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_role__free_unpacked
                     (CChatRole *message,
                      ProtobufCAllocator *allocator);
size_t cchat_role_actions__get_packed_size
                     (const CChatRoleActions   *message);
size_t cchat_role_actions__pack
                     (const CChatRoleActions   *message,
                      uint8_t             *out);
size_t cchat_role_actions__pack_to_buffer
                     (const CChatRoleActions   *message,
                      ProtobufCBuffer     *buffer);
CChatRoleActions *
       cchat_role_actions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_role_actions__free_unpacked
                     (CChatRoleActions *message,
                      ProtobufCAllocator *allocator);
size_t cchat_party_beacon__get_packed_size
                     (const CChatPartyBeacon   *message);
size_t cchat_party_beacon__pack
                     (const CChatPartyBeacon   *message,
                      uint8_t             *out);
size_t cchat_party_beacon__pack_to_buffer
                     (const CChatPartyBeacon   *message,
                      ProtobufCBuffer     *buffer);
CChatPartyBeacon *
       cchat_party_beacon__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_party_beacon__free_unpacked
                     (CChatPartyBeacon *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_group_header_state__get_packed_size
                     (const CChatRoomGroupHeaderState   *message);
size_t cchat_room_group_header_state__pack
                     (const CChatRoomGroupHeaderState   *message,
                      uint8_t             *out);
size_t cchat_room_group_header_state__pack_to_buffer
                     (const CChatRoomGroupHeaderState   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGroupHeaderState *
       cchat_room_group_header_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_group_header_state__free_unpacked
                     (CChatRoomGroupHeaderState *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_member__get_packed_size
                     (const CChatRoomMember   *message);
size_t cchat_room_member__pack
                     (const CChatRoomMember   *message,
                      uint8_t             *out);
size_t cchat_room_member__pack_to_buffer
                     (const CChatRoomMember   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomMember *
       cchat_room_member__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_member__free_unpacked
                     (CChatRoomMember *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_state__get_packed_size
                     (const CChatRoomState   *message);
size_t cchat_room_state__pack
                     (const CChatRoomState   *message,
                      uint8_t             *out);
size_t cchat_room_state__pack_to_buffer
                     (const CChatRoomState   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomState *
       cchat_room_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_state__free_unpacked
                     (CChatRoomState *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_group_state__get_packed_size
                     (const CChatRoomGroupState   *message);
size_t cchat_room_group_state__pack
                     (const CChatRoomGroupState   *message,
                      uint8_t             *out);
size_t cchat_room_group_state__pack_to_buffer
                     (const CChatRoomGroupState   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGroupState *
       cchat_room_group_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_group_state__free_unpacked
                     (CChatRoomGroupState *message,
                      ProtobufCAllocator *allocator);
size_t cuser_chat_room_state__get_packed_size
                     (const CUserChatRoomState   *message);
size_t cuser_chat_room_state__pack
                     (const CUserChatRoomState   *message,
                      uint8_t             *out);
size_t cuser_chat_room_state__pack_to_buffer
                     (const CUserChatRoomState   *message,
                      ProtobufCBuffer     *buffer);
CUserChatRoomState *
       cuser_chat_room_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cuser_chat_room_state__free_unpacked
                     (CUserChatRoomState *message,
                      ProtobufCAllocator *allocator);
size_t cuser_chat_room_group_state__get_packed_size
                     (const CUserChatRoomGroupState   *message);
size_t cuser_chat_room_group_state__pack
                     (const CUserChatRoomGroupState   *message,
                      uint8_t             *out);
size_t cuser_chat_room_group_state__pack_to_buffer
                     (const CUserChatRoomGroupState   *message,
                      ProtobufCBuffer     *buffer);
CUserChatRoomGroupState *
       cuser_chat_room_group_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cuser_chat_room_group_state__free_unpacked
                     (CUserChatRoomGroupState *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_chat_room_group__response__get_packed_size
                     (const CChatRoomCreateChatRoomGroupResponse   *message);
size_t cchat_room__create_chat_room_group__response__pack
                     (const CChatRoomCreateChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__create_chat_room_group__response__pack_to_buffer
                     (const CChatRoomCreateChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateChatRoomGroupResponse *
       cchat_room__create_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_chat_room_group__response__free_unpacked
                     (CChatRoomCreateChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__save_chat_room_group__request__get_packed_size
                     (const CChatRoomSaveChatRoomGroupRequest   *message);
size_t cchat_room__save_chat_room_group__request__pack
                     (const CChatRoomSaveChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__save_chat_room_group__request__pack_to_buffer
                     (const CChatRoomSaveChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSaveChatRoomGroupRequest *
       cchat_room__save_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__save_chat_room_group__request__free_unpacked
                     (CChatRoomSaveChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__save_chat_room_group__response__get_packed_size
                     (const CChatRoomSaveChatRoomGroupResponse   *message);
size_t cchat_room__save_chat_room_group__response__pack
                     (const CChatRoomSaveChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__save_chat_room_group__response__pack_to_buffer
                     (const CChatRoomSaveChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSaveChatRoomGroupResponse *
       cchat_room__save_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__save_chat_room_group__response__free_unpacked
                     (CChatRoomSaveChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__rename_chat_room_group__request__get_packed_size
                     (const CChatRoomRenameChatRoomGroupRequest   *message);
size_t cchat_room__rename_chat_room_group__request__pack
                     (const CChatRoomRenameChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__rename_chat_room_group__request__pack_to_buffer
                     (const CChatRoomRenameChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRenameChatRoomGroupRequest *
       cchat_room__rename_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__rename_chat_room_group__request__free_unpacked
                     (CChatRoomRenameChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__rename_chat_room_group__response__get_packed_size
                     (const CChatRoomRenameChatRoomGroupResponse   *message);
size_t cchat_room__rename_chat_room_group__response__pack
                     (const CChatRoomRenameChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__rename_chat_room_group__response__pack_to_buffer
                     (const CChatRoomRenameChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRenameChatRoomGroupResponse *
       cchat_room__rename_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__rename_chat_room_group__response__free_unpacked
                     (CChatRoomRenameChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_chat_room_group_tagline__request__get_packed_size
                     (const CChatRoomSetChatRoomGroupTaglineRequest   *message);
size_t cchat_room__set_chat_room_group_tagline__request__pack
                     (const CChatRoomSetChatRoomGroupTaglineRequest   *message,
                      uint8_t             *out);
size_t cchat_room__set_chat_room_group_tagline__request__pack_to_buffer
                     (const CChatRoomSetChatRoomGroupTaglineRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetChatRoomGroupTaglineRequest *
       cchat_room__set_chat_room_group_tagline__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_chat_room_group_tagline__request__free_unpacked
                     (CChatRoomSetChatRoomGroupTaglineRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_chat_room_group_tagline__response__get_packed_size
                     (const CChatRoomSetChatRoomGroupTaglineResponse   *message);
size_t cchat_room__set_chat_room_group_tagline__response__pack
                     (const CChatRoomSetChatRoomGroupTaglineResponse   *message,
                      uint8_t             *out);
size_t cchat_room__set_chat_room_group_tagline__response__pack_to_buffer
                     (const CChatRoomSetChatRoomGroupTaglineResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetChatRoomGroupTaglineResponse *
       cchat_room__set_chat_room_group_tagline__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_chat_room_group_tagline__response__free_unpacked
                     (CChatRoomSetChatRoomGroupTaglineResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_chat_room_group_avatar__request__get_packed_size
                     (const CChatRoomSetChatRoomGroupAvatarRequest   *message);
size_t cchat_room__set_chat_room_group_avatar__request__pack
                     (const CChatRoomSetChatRoomGroupAvatarRequest   *message,
                      uint8_t             *out);
size_t cchat_room__set_chat_room_group_avatar__request__pack_to_buffer
                     (const CChatRoomSetChatRoomGroupAvatarRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetChatRoomGroupAvatarRequest *
       cchat_room__set_chat_room_group_avatar__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_chat_room_group_avatar__request__free_unpacked
                     (CChatRoomSetChatRoomGroupAvatarRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_chat_room_group_avatar__response__get_packed_size
                     (const CChatRoomSetChatRoomGroupAvatarResponse   *message);
size_t cchat_room__set_chat_room_group_avatar__response__pack
                     (const CChatRoomSetChatRoomGroupAvatarResponse   *message,
                      uint8_t             *out);
size_t cchat_room__set_chat_room_group_avatar__response__pack_to_buffer
                     (const CChatRoomSetChatRoomGroupAvatarResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetChatRoomGroupAvatarResponse *
       cchat_room__set_chat_room_group_avatar__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_chat_room_group_avatar__response__free_unpacked
                     (CChatRoomSetChatRoomGroupAvatarResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_chat_room_group_watching_broadcast__request__get_packed_size
                     (const CChatRoomSetChatRoomGroupWatchingBroadcastRequest   *message);
size_t cchat_room__set_chat_room_group_watching_broadcast__request__pack
                     (const CChatRoomSetChatRoomGroupWatchingBroadcastRequest   *message,
                      uint8_t             *out);
size_t cchat_room__set_chat_room_group_watching_broadcast__request__pack_to_buffer
                     (const CChatRoomSetChatRoomGroupWatchingBroadcastRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetChatRoomGroupWatchingBroadcastRequest *
       cchat_room__set_chat_room_group_watching_broadcast__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_chat_room_group_watching_broadcast__request__free_unpacked
                     (CChatRoomSetChatRoomGroupWatchingBroadcastRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_chat_room_group_watching_broadcast__response__get_packed_size
                     (const CChatRoomSetChatRoomGroupWatchingBroadcastResponse   *message);
size_t cchat_room__set_chat_room_group_watching_broadcast__response__pack
                     (const CChatRoomSetChatRoomGroupWatchingBroadcastResponse   *message,
                      uint8_t             *out);
size_t cchat_room__set_chat_room_group_watching_broadcast__response__pack_to_buffer
                     (const CChatRoomSetChatRoomGroupWatchingBroadcastResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetChatRoomGroupWatchingBroadcastResponse *
       cchat_room__set_chat_room_group_watching_broadcast__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_chat_room_group_watching_broadcast__response__free_unpacked
                     (CChatRoomSetChatRoomGroupWatchingBroadcastResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__join_mini_game_for_chat_room_group__request__get_packed_size
                     (const CChatRoomJoinMiniGameForChatRoomGroupRequest   *message);
size_t cchat_room__join_mini_game_for_chat_room_group__request__pack
                     (const CChatRoomJoinMiniGameForChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__join_mini_game_for_chat_room_group__request__pack_to_buffer
                     (const CChatRoomJoinMiniGameForChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomJoinMiniGameForChatRoomGroupRequest *
       cchat_room__join_mini_game_for_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__join_mini_game_for_chat_room_group__request__free_unpacked
                     (CChatRoomJoinMiniGameForChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__join_mini_game_for_chat_room_group__response__get_packed_size
                     (const CChatRoomJoinMiniGameForChatRoomGroupResponse   *message);
size_t cchat_room__join_mini_game_for_chat_room_group__response__pack
                     (const CChatRoomJoinMiniGameForChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__join_mini_game_for_chat_room_group__response__pack_to_buffer
                     (const CChatRoomJoinMiniGameForChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomJoinMiniGameForChatRoomGroupResponse *
       cchat_room__join_mini_game_for_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__join_mini_game_for_chat_room_group__response__free_unpacked
                     (CChatRoomJoinMiniGameForChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__end_mini_game_for_chat_room_group__request__get_packed_size
                     (const CChatRoomEndMiniGameForChatRoomGroupRequest   *message);
size_t cchat_room__end_mini_game_for_chat_room_group__request__pack
                     (const CChatRoomEndMiniGameForChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__end_mini_game_for_chat_room_group__request__pack_to_buffer
                     (const CChatRoomEndMiniGameForChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomEndMiniGameForChatRoomGroupRequest *
       cchat_room__end_mini_game_for_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__end_mini_game_for_chat_room_group__request__free_unpacked
                     (CChatRoomEndMiniGameForChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__end_mini_game_for_chat_room_group__response__get_packed_size
                     (const CChatRoomEndMiniGameForChatRoomGroupResponse   *message);
size_t cchat_room__end_mini_game_for_chat_room_group__response__pack
                     (const CChatRoomEndMiniGameForChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__end_mini_game_for_chat_room_group__response__pack_to_buffer
                     (const CChatRoomEndMiniGameForChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomEndMiniGameForChatRoomGroupResponse *
       cchat_room__end_mini_game_for_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__end_mini_game_for_chat_room_group__response__free_unpacked
                     (CChatRoomEndMiniGameForChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__mute_user__request__get_packed_size
                     (const CChatRoomMuteUserRequest   *message);
size_t cchat_room__mute_user__request__pack
                     (const CChatRoomMuteUserRequest   *message,
                      uint8_t             *out);
size_t cchat_room__mute_user__request__pack_to_buffer
                     (const CChatRoomMuteUserRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomMuteUserRequest *
       cchat_room__mute_user__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__mute_user__request__free_unpacked
                     (CChatRoomMuteUserRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__mute_user__response__get_packed_size
                     (const CChatRoomMuteUserResponse   *message);
size_t cchat_room__mute_user__response__pack
                     (const CChatRoomMuteUserResponse   *message,
                      uint8_t             *out);
size_t cchat_room__mute_user__response__pack_to_buffer
                     (const CChatRoomMuteUserResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomMuteUserResponse *
       cchat_room__mute_user__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__mute_user__response__free_unpacked
                     (CChatRoomMuteUserResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__kick_user__request__get_packed_size
                     (const CChatRoomKickUserRequest   *message);
size_t cchat_room__kick_user__request__pack
                     (const CChatRoomKickUserRequest   *message,
                      uint8_t             *out);
size_t cchat_room__kick_user__request__pack_to_buffer
                     (const CChatRoomKickUserRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomKickUserRequest *
       cchat_room__kick_user__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__kick_user__request__free_unpacked
                     (CChatRoomKickUserRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__kick_user__response__get_packed_size
                     (const CChatRoomKickUserResponse   *message);
size_t cchat_room__kick_user__response__pack
                     (const CChatRoomKickUserResponse   *message,
                      uint8_t             *out);
size_t cchat_room__kick_user__response__pack_to_buffer
                     (const CChatRoomKickUserResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomKickUserResponse *
       cchat_room__kick_user__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__kick_user__response__free_unpacked
                     (CChatRoomKickUserResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_user_ban_state__request__get_packed_size
                     (const CChatRoomSetUserBanStateRequest   *message);
size_t cchat_room__set_user_ban_state__request__pack
                     (const CChatRoomSetUserBanStateRequest   *message,
                      uint8_t             *out);
size_t cchat_room__set_user_ban_state__request__pack_to_buffer
                     (const CChatRoomSetUserBanStateRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetUserBanStateRequest *
       cchat_room__set_user_ban_state__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_user_ban_state__request__free_unpacked
                     (CChatRoomSetUserBanStateRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_user_ban_state__response__get_packed_size
                     (const CChatRoomSetUserBanStateResponse   *message);
size_t cchat_room__set_user_ban_state__response__pack
                     (const CChatRoomSetUserBanStateResponse   *message,
                      uint8_t             *out);
size_t cchat_room__set_user_ban_state__response__pack_to_buffer
                     (const CChatRoomSetUserBanStateResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetUserBanStateResponse *
       cchat_room__set_user_ban_state__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_user_ban_state__response__free_unpacked
                     (CChatRoomSetUserBanStateResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__revoke_invite__request__get_packed_size
                     (const CChatRoomRevokeInviteRequest   *message);
size_t cchat_room__revoke_invite__request__pack
                     (const CChatRoomRevokeInviteRequest   *message,
                      uint8_t             *out);
size_t cchat_room__revoke_invite__request__pack_to_buffer
                     (const CChatRoomRevokeInviteRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRevokeInviteRequest *
       cchat_room__revoke_invite__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__revoke_invite__request__free_unpacked
                     (CChatRoomRevokeInviteRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__revoke_invite__response__get_packed_size
                     (const CChatRoomRevokeInviteResponse   *message);
size_t cchat_room__revoke_invite__response__pack
                     (const CChatRoomRevokeInviteResponse   *message,
                      uint8_t             *out);
size_t cchat_room__revoke_invite__response__pack_to_buffer
                     (const CChatRoomRevokeInviteResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRevokeInviteResponse *
       cchat_room__revoke_invite__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__revoke_invite__response__free_unpacked
                     (CChatRoomRevokeInviteResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_role__request__get_packed_size
                     (const CChatRoomCreateRoleRequest   *message);
size_t cchat_room__create_role__request__pack
                     (const CChatRoomCreateRoleRequest   *message,
                      uint8_t             *out);
size_t cchat_room__create_role__request__pack_to_buffer
                     (const CChatRoomCreateRoleRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateRoleRequest *
       cchat_room__create_role__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_role__request__free_unpacked
                     (CChatRoomCreateRoleRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_role__response__get_packed_size
                     (const CChatRoomCreateRoleResponse   *message);
size_t cchat_room__create_role__response__pack
                     (const CChatRoomCreateRoleResponse   *message,
                      uint8_t             *out);
size_t cchat_room__create_role__response__pack_to_buffer
                     (const CChatRoomCreateRoleResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateRoleResponse *
       cchat_room__create_role__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_role__response__free_unpacked
                     (CChatRoomCreateRoleResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_roles__request__get_packed_size
                     (const CChatRoomGetRolesRequest   *message);
size_t cchat_room__get_roles__request__pack
                     (const CChatRoomGetRolesRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_roles__request__pack_to_buffer
                     (const CChatRoomGetRolesRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetRolesRequest *
       cchat_room__get_roles__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_roles__request__free_unpacked
                     (CChatRoomGetRolesRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_roles__response__get_packed_size
                     (const CChatRoomGetRolesResponse   *message);
size_t cchat_room__get_roles__response__pack
                     (const CChatRoomGetRolesResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_roles__response__pack_to_buffer
                     (const CChatRoomGetRolesResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetRolesResponse *
       cchat_room__get_roles__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_roles__response__free_unpacked
                     (CChatRoomGetRolesResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__rename_role__request__get_packed_size
                     (const CChatRoomRenameRoleRequest   *message);
size_t cchat_room__rename_role__request__pack
                     (const CChatRoomRenameRoleRequest   *message,
                      uint8_t             *out);
size_t cchat_room__rename_role__request__pack_to_buffer
                     (const CChatRoomRenameRoleRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRenameRoleRequest *
       cchat_room__rename_role__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__rename_role__request__free_unpacked
                     (CChatRoomRenameRoleRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__rename_role__response__get_packed_size
                     (const CChatRoomRenameRoleResponse   *message);
size_t cchat_room__rename_role__response__pack
                     (const CChatRoomRenameRoleResponse   *message,
                      uint8_t             *out);
size_t cchat_room__rename_role__response__pack_to_buffer
                     (const CChatRoomRenameRoleResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRenameRoleResponse *
       cchat_room__rename_role__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__rename_role__response__free_unpacked
                     (CChatRoomRenameRoleResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__reorder_role__request__get_packed_size
                     (const CChatRoomReorderRoleRequest   *message);
size_t cchat_room__reorder_role__request__pack
                     (const CChatRoomReorderRoleRequest   *message,
                      uint8_t             *out);
size_t cchat_room__reorder_role__request__pack_to_buffer
                     (const CChatRoomReorderRoleRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomReorderRoleRequest *
       cchat_room__reorder_role__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__reorder_role__request__free_unpacked
                     (CChatRoomReorderRoleRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__reorder_role__response__get_packed_size
                     (const CChatRoomReorderRoleResponse   *message);
size_t cchat_room__reorder_role__response__pack
                     (const CChatRoomReorderRoleResponse   *message,
                      uint8_t             *out);
size_t cchat_room__reorder_role__response__pack_to_buffer
                     (const CChatRoomReorderRoleResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomReorderRoleResponse *
       cchat_room__reorder_role__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__reorder_role__response__free_unpacked
                     (CChatRoomReorderRoleResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_role__request__get_packed_size
                     (const CChatRoomDeleteRoleRequest   *message);
size_t cchat_room__delete_role__request__pack
                     (const CChatRoomDeleteRoleRequest   *message,
                      uint8_t             *out);
size_t cchat_room__delete_role__request__pack_to_buffer
                     (const CChatRoomDeleteRoleRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteRoleRequest *
       cchat_room__delete_role__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_role__request__free_unpacked
                     (CChatRoomDeleteRoleRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_role__response__get_packed_size
                     (const CChatRoomDeleteRoleResponse   *message);
size_t cchat_room__delete_role__response__pack
                     (const CChatRoomDeleteRoleResponse   *message,
                      uint8_t             *out);
size_t cchat_room__delete_role__response__pack_to_buffer
                     (const CChatRoomDeleteRoleResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteRoleResponse *
       cchat_room__delete_role__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_role__response__free_unpacked
                     (CChatRoomDeleteRoleResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_role_actions__request__get_packed_size
                     (const CChatRoomGetRoleActionsRequest   *message);
size_t cchat_room__get_role_actions__request__pack
                     (const CChatRoomGetRoleActionsRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_role_actions__request__pack_to_buffer
                     (const CChatRoomGetRoleActionsRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetRoleActionsRequest *
       cchat_room__get_role_actions__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_role_actions__request__free_unpacked
                     (CChatRoomGetRoleActionsRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_role_actions__response__get_packed_size
                     (const CChatRoomGetRoleActionsResponse   *message);
size_t cchat_room__get_role_actions__response__pack
                     (const CChatRoomGetRoleActionsResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_role_actions__response__pack_to_buffer
                     (const CChatRoomGetRoleActionsResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetRoleActionsResponse *
       cchat_room__get_role_actions__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_role_actions__response__free_unpacked
                     (CChatRoomGetRoleActionsResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__replace_role_actions__request__get_packed_size
                     (const CChatRoomReplaceRoleActionsRequest   *message);
size_t cchat_room__replace_role_actions__request__pack
                     (const CChatRoomReplaceRoleActionsRequest   *message,
                      uint8_t             *out);
size_t cchat_room__replace_role_actions__request__pack_to_buffer
                     (const CChatRoomReplaceRoleActionsRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomReplaceRoleActionsRequest *
       cchat_room__replace_role_actions__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__replace_role_actions__request__free_unpacked
                     (CChatRoomReplaceRoleActionsRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__replace_role_actions__response__get_packed_size
                     (const CChatRoomReplaceRoleActionsResponse   *message);
size_t cchat_room__replace_role_actions__response__pack
                     (const CChatRoomReplaceRoleActionsResponse   *message,
                      uint8_t             *out);
size_t cchat_room__replace_role_actions__response__pack_to_buffer
                     (const CChatRoomReplaceRoleActionsResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomReplaceRoleActionsResponse *
       cchat_room__replace_role_actions__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__replace_role_actions__response__free_unpacked
                     (CChatRoomReplaceRoleActionsResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__add_role_to_user__request__get_packed_size
                     (const CChatRoomAddRoleToUserRequest   *message);
size_t cchat_room__add_role_to_user__request__pack
                     (const CChatRoomAddRoleToUserRequest   *message,
                      uint8_t             *out);
size_t cchat_room__add_role_to_user__request__pack_to_buffer
                     (const CChatRoomAddRoleToUserRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomAddRoleToUserRequest *
       cchat_room__add_role_to_user__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__add_role_to_user__request__free_unpacked
                     (CChatRoomAddRoleToUserRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__add_role_to_user__response__get_packed_size
                     (const CChatRoomAddRoleToUserResponse   *message);
size_t cchat_room__add_role_to_user__response__pack
                     (const CChatRoomAddRoleToUserResponse   *message,
                      uint8_t             *out);
size_t cchat_room__add_role_to_user__response__pack_to_buffer
                     (const CChatRoomAddRoleToUserResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomAddRoleToUserResponse *
       cchat_room__add_role_to_user__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__add_role_to_user__response__free_unpacked
                     (CChatRoomAddRoleToUserResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_roles_for_user__request__get_packed_size
                     (const CChatRoomGetRolesForUserRequest   *message);
size_t cchat_room__get_roles_for_user__request__pack
                     (const CChatRoomGetRolesForUserRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_roles_for_user__request__pack_to_buffer
                     (const CChatRoomGetRolesForUserRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetRolesForUserRequest *
       cchat_room__get_roles_for_user__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_roles_for_user__request__free_unpacked
                     (CChatRoomGetRolesForUserRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_roles_for_user__response__get_packed_size
                     (const CChatRoomGetRolesForUserResponse   *message);
size_t cchat_room__get_roles_for_user__response__pack
                     (const CChatRoomGetRolesForUserResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_roles_for_user__response__pack_to_buffer
                     (const CChatRoomGetRolesForUserResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetRolesForUserResponse *
       cchat_room__get_roles_for_user__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_roles_for_user__response__free_unpacked
                     (CChatRoomGetRolesForUserResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_role_from_user__request__get_packed_size
                     (const CChatRoomDeleteRoleFromUserRequest   *message);
size_t cchat_room__delete_role_from_user__request__pack
                     (const CChatRoomDeleteRoleFromUserRequest   *message,
                      uint8_t             *out);
size_t cchat_room__delete_role_from_user__request__pack_to_buffer
                     (const CChatRoomDeleteRoleFromUserRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteRoleFromUserRequest *
       cchat_room__delete_role_from_user__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_role_from_user__request__free_unpacked
                     (CChatRoomDeleteRoleFromUserRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_role_from_user__response__get_packed_size
                     (const CChatRoomDeleteRoleFromUserResponse   *message);
size_t cchat_room__delete_role_from_user__response__pack
                     (const CChatRoomDeleteRoleFromUserResponse   *message,
                      uint8_t             *out);
size_t cchat_room__delete_role_from_user__response__pack_to_buffer
                     (const CChatRoomDeleteRoleFromUserResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteRoleFromUserResponse *
       cchat_room__delete_role_from_user__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_role_from_user__response__free_unpacked
                     (CChatRoomDeleteRoleFromUserResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__join_chat_room_group__request__get_packed_size
                     (const CChatRoomJoinChatRoomGroupRequest   *message);
size_t cchat_room__join_chat_room_group__request__pack
                     (const CChatRoomJoinChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__join_chat_room_group__request__pack_to_buffer
                     (const CChatRoomJoinChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomJoinChatRoomGroupRequest *
       cchat_room__join_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__join_chat_room_group__request__free_unpacked
                     (CChatRoomJoinChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__join_chat_room_group__response__get_packed_size
                     (const CChatRoomJoinChatRoomGroupResponse   *message);
size_t cchat_room__join_chat_room_group__response__pack
                     (const CChatRoomJoinChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__join_chat_room_group__response__pack_to_buffer
                     (const CChatRoomJoinChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomJoinChatRoomGroupResponse *
       cchat_room__join_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__join_chat_room_group__response__free_unpacked
                     (CChatRoomJoinChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__invite_friend_to_chat_room_group__request__get_packed_size
                     (const CChatRoomInviteFriendToChatRoomGroupRequest   *message);
size_t cchat_room__invite_friend_to_chat_room_group__request__pack
                     (const CChatRoomInviteFriendToChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__invite_friend_to_chat_room_group__request__pack_to_buffer
                     (const CChatRoomInviteFriendToChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomInviteFriendToChatRoomGroupRequest *
       cchat_room__invite_friend_to_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__invite_friend_to_chat_room_group__request__free_unpacked
                     (CChatRoomInviteFriendToChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__invite_friend_to_chat_room_group__response__get_packed_size
                     (const CChatRoomInviteFriendToChatRoomGroupResponse   *message);
size_t cchat_room__invite_friend_to_chat_room_group__response__pack
                     (const CChatRoomInviteFriendToChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__invite_friend_to_chat_room_group__response__pack_to_buffer
                     (const CChatRoomInviteFriendToChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomInviteFriendToChatRoomGroupResponse *
       cchat_room__invite_friend_to_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__invite_friend_to_chat_room_group__response__free_unpacked
                     (CChatRoomInviteFriendToChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__leave_chat_room_group__request__get_packed_size
                     (const CChatRoomLeaveChatRoomGroupRequest   *message);
size_t cchat_room__leave_chat_room_group__request__pack
                     (const CChatRoomLeaveChatRoomGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__leave_chat_room_group__request__pack_to_buffer
                     (const CChatRoomLeaveChatRoomGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomLeaveChatRoomGroupRequest *
       cchat_room__leave_chat_room_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__leave_chat_room_group__request__free_unpacked
                     (CChatRoomLeaveChatRoomGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__leave_chat_room_group__response__get_packed_size
                     (const CChatRoomLeaveChatRoomGroupResponse   *message);
size_t cchat_room__leave_chat_room_group__response__pack
                     (const CChatRoomLeaveChatRoomGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__leave_chat_room_group__response__pack_to_buffer
                     (const CChatRoomLeaveChatRoomGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomLeaveChatRoomGroupResponse *
       cchat_room__leave_chat_room_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__leave_chat_room_group__response__free_unpacked
                     (CChatRoomLeaveChatRoomGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_chat_room__request__get_packed_size
                     (const CChatRoomCreateChatRoomRequest   *message);
size_t cchat_room__create_chat_room__request__pack
                     (const CChatRoomCreateChatRoomRequest   *message,
                      uint8_t             *out);
size_t cchat_room__create_chat_room__request__pack_to_buffer
                     (const CChatRoomCreateChatRoomRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateChatRoomRequest *
       cchat_room__create_chat_room__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_chat_room__request__free_unpacked
                     (CChatRoomCreateChatRoomRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_chat_room__response__get_packed_size
                     (const CChatRoomCreateChatRoomResponse   *message);
size_t cchat_room__create_chat_room__response__pack
                     (const CChatRoomCreateChatRoomResponse   *message,
                      uint8_t             *out);
size_t cchat_room__create_chat_room__response__pack_to_buffer
                     (const CChatRoomCreateChatRoomResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateChatRoomResponse *
       cchat_room__create_chat_room__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_chat_room__response__free_unpacked
                     (CChatRoomCreateChatRoomResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_chat_room__request__get_packed_size
                     (const CChatRoomDeleteChatRoomRequest   *message);
size_t cchat_room__delete_chat_room__request__pack
                     (const CChatRoomDeleteChatRoomRequest   *message,
                      uint8_t             *out);
size_t cchat_room__delete_chat_room__request__pack_to_buffer
                     (const CChatRoomDeleteChatRoomRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteChatRoomRequest *
       cchat_room__delete_chat_room__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_chat_room__request__free_unpacked
                     (CChatRoomDeleteChatRoomRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_chat_room__response__get_packed_size
                     (const CChatRoomDeleteChatRoomResponse   *message);
size_t cchat_room__delete_chat_room__response__pack
                     (const CChatRoomDeleteChatRoomResponse   *message,
                      uint8_t             *out);
size_t cchat_room__delete_chat_room__response__pack_to_buffer
                     (const CChatRoomDeleteChatRoomResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteChatRoomResponse *
       cchat_room__delete_chat_room__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_chat_room__response__free_unpacked
                     (CChatRoomDeleteChatRoomResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__rename_chat_room__request__get_packed_size
                     (const CChatRoomRenameChatRoomRequest   *message);
size_t cchat_room__rename_chat_room__request__pack
                     (const CChatRoomRenameChatRoomRequest   *message,
                      uint8_t             *out);
size_t cchat_room__rename_chat_room__request__pack_to_buffer
                     (const CChatRoomRenameChatRoomRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRenameChatRoomRequest *
       cchat_room__rename_chat_room__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__rename_chat_room__request__free_unpacked
                     (CChatRoomRenameChatRoomRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__rename_chat_room__response__get_packed_size
                     (const CChatRoomRenameChatRoomResponse   *message);
size_t cchat_room__rename_chat_room__response__pack
                     (const CChatRoomRenameChatRoomResponse   *message,
                      uint8_t             *out);
size_t cchat_room__rename_chat_room__response__pack_to_buffer
                     (const CChatRoomRenameChatRoomResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomRenameChatRoomResponse *
       cchat_room__rename_chat_room__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__rename_chat_room__response__free_unpacked
                     (CChatRoomRenameChatRoomResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__reorder_chat_room__request__get_packed_size
                     (const CChatRoomReorderChatRoomRequest   *message);
size_t cchat_room__reorder_chat_room__request__pack
                     (const CChatRoomReorderChatRoomRequest   *message,
                      uint8_t             *out);
size_t cchat_room__reorder_chat_room__request__pack_to_buffer
                     (const CChatRoomReorderChatRoomRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomReorderChatRoomRequest *
       cchat_room__reorder_chat_room__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__reorder_chat_room__request__free_unpacked
                     (CChatRoomReorderChatRoomRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__reorder_chat_room__response__get_packed_size
                     (const CChatRoomReorderChatRoomResponse   *message);
size_t cchat_room__reorder_chat_room__response__pack
                     (const CChatRoomReorderChatRoomResponse   *message,
                      uint8_t             *out);
size_t cchat_room__reorder_chat_room__response__pack_to_buffer
                     (const CChatRoomReorderChatRoomResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomReorderChatRoomResponse *
       cchat_room__reorder_chat_room__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__reorder_chat_room__response__free_unpacked
                     (CChatRoomReorderChatRoomResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__send_chat_message__request__get_packed_size
                     (const CChatRoomSendChatMessageRequest   *message);
size_t cchat_room__send_chat_message__request__pack
                     (const CChatRoomSendChatMessageRequest   *message,
                      uint8_t             *out);
size_t cchat_room__send_chat_message__request__pack_to_buffer
                     (const CChatRoomSendChatMessageRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSendChatMessageRequest *
       cchat_room__send_chat_message__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__send_chat_message__request__free_unpacked
                     (CChatRoomSendChatMessageRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__send_chat_message__response__get_packed_size
                     (const CChatRoomSendChatMessageResponse   *message);
size_t cchat_room__send_chat_message__response__pack
                     (const CChatRoomSendChatMessageResponse   *message,
                      uint8_t             *out);
size_t cchat_room__send_chat_message__response__pack_to_buffer
                     (const CChatRoomSendChatMessageResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSendChatMessageResponse *
       cchat_room__send_chat_message__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__send_chat_message__response__free_unpacked
                     (CChatRoomSendChatMessageResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__join_voice_chat__request__get_packed_size
                     (const CChatRoomJoinVoiceChatRequest   *message);
size_t cchat_room__join_voice_chat__request__pack
                     (const CChatRoomJoinVoiceChatRequest   *message,
                      uint8_t             *out);
size_t cchat_room__join_voice_chat__request__pack_to_buffer
                     (const CChatRoomJoinVoiceChatRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomJoinVoiceChatRequest *
       cchat_room__join_voice_chat__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__join_voice_chat__request__free_unpacked
                     (CChatRoomJoinVoiceChatRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__join_voice_chat__response__get_packed_size
                     (const CChatRoomJoinVoiceChatResponse   *message);
size_t cchat_room__join_voice_chat__response__pack
                     (const CChatRoomJoinVoiceChatResponse   *message,
                      uint8_t             *out);
size_t cchat_room__join_voice_chat__response__pack_to_buffer
                     (const CChatRoomJoinVoiceChatResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomJoinVoiceChatResponse *
       cchat_room__join_voice_chat__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__join_voice_chat__response__free_unpacked
                     (CChatRoomJoinVoiceChatResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__leave_voice_chat__request__get_packed_size
                     (const CChatRoomLeaveVoiceChatRequest   *message);
size_t cchat_room__leave_voice_chat__request__pack
                     (const CChatRoomLeaveVoiceChatRequest   *message,
                      uint8_t             *out);
size_t cchat_room__leave_voice_chat__request__pack_to_buffer
                     (const CChatRoomLeaveVoiceChatRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomLeaveVoiceChatRequest *
       cchat_room__leave_voice_chat__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__leave_voice_chat__request__free_unpacked
                     (CChatRoomLeaveVoiceChatRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__leave_voice_chat__response__get_packed_size
                     (const CChatRoomLeaveVoiceChatResponse   *message);
size_t cchat_room__leave_voice_chat__response__pack
                     (const CChatRoomLeaveVoiceChatResponse   *message,
                      uint8_t             *out);
size_t cchat_room__leave_voice_chat__response__pack_to_buffer
                     (const CChatRoomLeaveVoiceChatResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomLeaveVoiceChatResponse *
       cchat_room__leave_voice_chat__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__leave_voice_chat__response__free_unpacked
                     (CChatRoomLeaveVoiceChatResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_message_history__request__get_packed_size
                     (const CChatRoomGetMessageHistoryRequest   *message);
size_t cchat_room__get_message_history__request__pack
                     (const CChatRoomGetMessageHistoryRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_message_history__request__pack_to_buffer
                     (const CChatRoomGetMessageHistoryRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetMessageHistoryRequest *
       cchat_room__get_message_history__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_message_history__request__free_unpacked
                     (CChatRoomGetMessageHistoryRequest *message,
                      ProtobufCAllocator *allocator);
size_t server_message__get_packed_size
                     (const ServerMessage   *message);
size_t server_message__pack
                     (const ServerMessage   *message,
                      uint8_t             *out);
size_t server_message__pack_to_buffer
                     (const ServerMessage   *message,
                      ProtobufCBuffer     *buffer);
ServerMessage *
       server_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   server_message__free_unpacked
                     (ServerMessage *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_message_history__response__get_packed_size
                     (const CChatRoomGetMessageHistoryResponse   *message);
size_t cchat_room__get_message_history__response__pack
                     (const CChatRoomGetMessageHistoryResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_message_history__response__pack_to_buffer
                     (const CChatRoomGetMessageHistoryResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetMessageHistoryResponse *
       cchat_room__get_message_history__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_message_history__response__free_unpacked
                     (CChatRoomGetMessageHistoryResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_my_chat_room_groups__request__get_packed_size
                     (const CChatRoomGetMyChatRoomGroupsRequest   *message);
size_t cchat_room__get_my_chat_room_groups__request__pack
                     (const CChatRoomGetMyChatRoomGroupsRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_my_chat_room_groups__request__pack_to_buffer
                     (const CChatRoomGetMyChatRoomGroupsRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetMyChatRoomGroupsRequest *
       cchat_room__get_my_chat_room_groups__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_my_chat_room_groups__request__free_unpacked
                     (CChatRoomGetMyChatRoomGroupsRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_chat_room_group_summary__response__get_packed_size
                     (const CChatRoomGetChatRoomGroupSummaryResponse   *message);
size_t cchat_room__get_chat_room_group_summary__response__pack
                     (const CChatRoomGetChatRoomGroupSummaryResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_chat_room_group_summary__response__pack_to_buffer
                     (const CChatRoomGetChatRoomGroupSummaryResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetChatRoomGroupSummaryResponse *
       cchat_room__get_chat_room_group_summary__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_chat_room_group_summary__response__free_unpacked
                     (CChatRoomGetChatRoomGroupSummaryResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_summary_pair__get_packed_size
                     (const CChatRoomSummaryPair   *message);
size_t cchat_room_summary_pair__pack
                     (const CChatRoomSummaryPair   *message,
                      uint8_t             *out);
size_t cchat_room_summary_pair__pack_to_buffer
                     (const CChatRoomSummaryPair   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSummaryPair *
       cchat_room_summary_pair__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_summary_pair__free_unpacked
                     (CChatRoomSummaryPair *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_my_chat_room_groups__response__get_packed_size
                     (const CChatRoomGetMyChatRoomGroupsResponse   *message);
size_t cchat_room__get_my_chat_room_groups__response__pack
                     (const CChatRoomGetMyChatRoomGroupsResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_my_chat_room_groups__response__pack_to_buffer
                     (const CChatRoomGetMyChatRoomGroupsResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetMyChatRoomGroupsResponse *
       cchat_room__get_my_chat_room_groups__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_my_chat_room_groups__response__free_unpacked
                     (CChatRoomGetMyChatRoomGroupsResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_chat_room_group_state__request__get_packed_size
                     (const CChatRoomGetChatRoomGroupStateRequest   *message);
size_t cchat_room__get_chat_room_group_state__request__pack
                     (const CChatRoomGetChatRoomGroupStateRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_chat_room_group_state__request__pack_to_buffer
                     (const CChatRoomGetChatRoomGroupStateRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetChatRoomGroupStateRequest *
       cchat_room__get_chat_room_group_state__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_chat_room_group_state__request__free_unpacked
                     (CChatRoomGetChatRoomGroupStateRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_chat_room_group_state__response__get_packed_size
                     (const CChatRoomGetChatRoomGroupStateResponse   *message);
size_t cchat_room__get_chat_room_group_state__response__pack
                     (const CChatRoomGetChatRoomGroupStateResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_chat_room_group_state__response__pack_to_buffer
                     (const CChatRoomGetChatRoomGroupStateResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetChatRoomGroupStateResponse *
       cchat_room__get_chat_room_group_state__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_chat_room_group_state__response__free_unpacked
                     (CChatRoomGetChatRoomGroupStateResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_chat_room_group_summary__request__get_packed_size
                     (const CChatRoomGetChatRoomGroupSummaryRequest   *message);
size_t cchat_room__get_chat_room_group_summary__request__pack
                     (const CChatRoomGetChatRoomGroupSummaryRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_chat_room_group_summary__request__pack_to_buffer
                     (const CChatRoomGetChatRoomGroupSummaryRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetChatRoomGroupSummaryRequest *
       cchat_room__get_chat_room_group_summary__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_chat_room_group_summary__request__free_unpacked
                     (CChatRoomGetChatRoomGroupSummaryRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_app_chat_room_group_force_active__request__get_packed_size
                     (const CChatRoomSetAppChatRoomGroupForceActiveRequest   *message);
size_t cchat_room__set_app_chat_room_group_force_active__request__pack
                     (const CChatRoomSetAppChatRoomGroupForceActiveRequest   *message,
                      uint8_t             *out);
size_t cchat_room__set_app_chat_room_group_force_active__request__pack_to_buffer
                     (const CChatRoomSetAppChatRoomGroupForceActiveRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetAppChatRoomGroupForceActiveRequest *
       cchat_room__set_app_chat_room_group_force_active__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_app_chat_room_group_force_active__request__free_unpacked
                     (CChatRoomSetAppChatRoomGroupForceActiveRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_app_chat_room_group_force_active__response__get_packed_size
                     (const CChatRoomSetAppChatRoomGroupForceActiveResponse   *message);
size_t cchat_room__set_app_chat_room_group_force_active__response__pack
                     (const CChatRoomSetAppChatRoomGroupForceActiveResponse   *message,
                      uint8_t             *out);
size_t cchat_room__set_app_chat_room_group_force_active__response__pack_to_buffer
                     (const CChatRoomSetAppChatRoomGroupForceActiveResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetAppChatRoomGroupForceActiveResponse *
       cchat_room__set_app_chat_room_group_force_active__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_app_chat_room_group_force_active__response__free_unpacked
                     (CChatRoomSetAppChatRoomGroupForceActiveResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_app_chat_room_group_stop_force_active__notification__get_packed_size
                     (const CChatRoomSetAppChatRoomGroupStopForceActiveNotification   *message);
size_t cchat_room__set_app_chat_room_group_stop_force_active__notification__pack
                     (const CChatRoomSetAppChatRoomGroupStopForceActiveNotification   *message,
                      uint8_t             *out);
size_t cchat_room__set_app_chat_room_group_stop_force_active__notification__pack_to_buffer
                     (const CChatRoomSetAppChatRoomGroupStopForceActiveNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetAppChatRoomGroupStopForceActiveNotification *
       cchat_room__set_app_chat_room_group_stop_force_active__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_app_chat_room_group_stop_force_active__notification__free_unpacked
                     (CChatRoomSetAppChatRoomGroupStopForceActiveNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__ack_chat_message__notification__get_packed_size
                     (const CChatRoomAckChatMessageNotification   *message);
size_t cchat_room__ack_chat_message__notification__pack
                     (const CChatRoomAckChatMessageNotification   *message,
                      uint8_t             *out);
size_t cchat_room__ack_chat_message__notification__pack_to_buffer
                     (const CChatRoomAckChatMessageNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomAckChatMessageNotification *
       cchat_room__ack_chat_message__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__ack_chat_message__notification__free_unpacked
                     (CChatRoomAckChatMessageNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_invite_link__request__get_packed_size
                     (const CChatRoomCreateInviteLinkRequest   *message);
size_t cchat_room__create_invite_link__request__pack
                     (const CChatRoomCreateInviteLinkRequest   *message,
                      uint8_t             *out);
size_t cchat_room__create_invite_link__request__pack_to_buffer
                     (const CChatRoomCreateInviteLinkRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateInviteLinkRequest *
       cchat_room__create_invite_link__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_invite_link__request__free_unpacked
                     (CChatRoomCreateInviteLinkRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__create_invite_link__response__get_packed_size
                     (const CChatRoomCreateInviteLinkResponse   *message);
size_t cchat_room__create_invite_link__response__pack
                     (const CChatRoomCreateInviteLinkResponse   *message,
                      uint8_t             *out);
size_t cchat_room__create_invite_link__response__pack_to_buffer
                     (const CChatRoomCreateInviteLinkResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomCreateInviteLinkResponse *
       cchat_room__create_invite_link__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__create_invite_link__response__free_unpacked
                     (CChatRoomCreateInviteLinkResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_link_info__request__get_packed_size
                     (const CChatRoomGetInviteLinkInfoRequest   *message);
size_t cchat_room__get_invite_link_info__request__pack
                     (const CChatRoomGetInviteLinkInfoRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_link_info__request__pack_to_buffer
                     (const CChatRoomGetInviteLinkInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteLinkInfoRequest *
       cchat_room__get_invite_link_info__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_link_info__request__free_unpacked
                     (CChatRoomGetInviteLinkInfoRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_link_info__response__get_packed_size
                     (const CChatRoomGetInviteLinkInfoResponse   *message);
size_t cchat_room__get_invite_link_info__response__pack
                     (const CChatRoomGetInviteLinkInfoResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_link_info__response__pack_to_buffer
                     (const CChatRoomGetInviteLinkInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteLinkInfoResponse *
       cchat_room__get_invite_link_info__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_link_info__response__free_unpacked
                     (CChatRoomGetInviteLinkInfoResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_info__request__get_packed_size
                     (const CChatRoomGetInviteInfoRequest   *message);
size_t cchat_room__get_invite_info__request__pack
                     (const CChatRoomGetInviteInfoRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_info__request__pack_to_buffer
                     (const CChatRoomGetInviteInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteInfoRequest *
       cchat_room__get_invite_info__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_info__request__free_unpacked
                     (CChatRoomGetInviteInfoRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_info__response__get_packed_size
                     (const CChatRoomGetInviteInfoResponse   *message);
size_t cchat_room__get_invite_info__response__pack
                     (const CChatRoomGetInviteInfoResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_info__response__pack_to_buffer
                     (const CChatRoomGetInviteInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteInfoResponse *
       cchat_room__get_invite_info__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_info__response__free_unpacked
                     (CChatRoomGetInviteInfoResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_links_for_group__request__get_packed_size
                     (const CChatRoomGetInviteLinksForGroupRequest   *message);
size_t cchat_room__get_invite_links_for_group__request__pack
                     (const CChatRoomGetInviteLinksForGroupRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_links_for_group__request__pack_to_buffer
                     (const CChatRoomGetInviteLinksForGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteLinksForGroupRequest *
       cchat_room__get_invite_links_for_group__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_links_for_group__request__free_unpacked
                     (CChatRoomGetInviteLinksForGroupRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_links_for_group__response__get_packed_size
                     (const CChatRoomGetInviteLinksForGroupResponse   *message);
size_t cchat_room__get_invite_links_for_group__response__pack
                     (const CChatRoomGetInviteLinksForGroupResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_links_for_group__response__pack_to_buffer
                     (const CChatRoomGetInviteLinksForGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteLinksForGroupResponse *
       cchat_room__get_invite_links_for_group__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_links_for_group__response__free_unpacked
                     (CChatRoomGetInviteLinksForGroupResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_ban_list__request__get_packed_size
                     (const CChatRoomGetBanListRequest   *message);
size_t cchat_room__get_ban_list__request__pack
                     (const CChatRoomGetBanListRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_ban_list__request__pack_to_buffer
                     (const CChatRoomGetBanListRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetBanListRequest *
       cchat_room__get_ban_list__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_ban_list__request__free_unpacked
                     (CChatRoomGetBanListRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_ban_list__response__get_packed_size
                     (const CChatRoomGetBanListResponse   *message);
size_t cchat_room__get_ban_list__response__pack
                     (const CChatRoomGetBanListResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_ban_list__response__pack_to_buffer
                     (const CChatRoomGetBanListResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetBanListResponse *
       cchat_room__get_ban_list__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_ban_list__response__free_unpacked
                     (CChatRoomGetBanListResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_list__request__get_packed_size
                     (const CChatRoomGetInviteListRequest   *message);
size_t cchat_room__get_invite_list__request__pack
                     (const CChatRoomGetInviteListRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_list__request__pack_to_buffer
                     (const CChatRoomGetInviteListRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteListRequest *
       cchat_room__get_invite_list__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_list__request__free_unpacked
                     (CChatRoomGetInviteListRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_group_invite__get_packed_size
                     (const CChatRoomGroupInvite   *message);
size_t cchat_room_group_invite__pack
                     (const CChatRoomGroupInvite   *message,
                      uint8_t             *out);
size_t cchat_room_group_invite__pack_to_buffer
                     (const CChatRoomGroupInvite   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGroupInvite *
       cchat_room_group_invite__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_group_invite__free_unpacked
                     (CChatRoomGroupInvite *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_invite_list__response__get_packed_size
                     (const CChatRoomGetInviteListResponse   *message);
size_t cchat_room__get_invite_list__response__pack
                     (const CChatRoomGetInviteListResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_invite_list__response__pack_to_buffer
                     (const CChatRoomGetInviteListResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetInviteListResponse *
       cchat_room__get_invite_list__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_invite_list__response__free_unpacked
                     (CChatRoomGetInviteListResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_invite_link__request__get_packed_size
                     (const CChatRoomDeleteInviteLinkRequest   *message);
size_t cchat_room__delete_invite_link__request__pack
                     (const CChatRoomDeleteInviteLinkRequest   *message,
                      uint8_t             *out);
size_t cchat_room__delete_invite_link__request__pack_to_buffer
                     (const CChatRoomDeleteInviteLinkRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteInviteLinkRequest *
       cchat_room__delete_invite_link__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_invite_link__request__free_unpacked
                     (CChatRoomDeleteInviteLinkRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_invite_link__response__get_packed_size
                     (const CChatRoomDeleteInviteLinkResponse   *message);
size_t cchat_room__delete_invite_link__response__pack
                     (const CChatRoomDeleteInviteLinkResponse   *message,
                      uint8_t             *out);
size_t cchat_room__delete_invite_link__response__pack_to_buffer
                     (const CChatRoomDeleteInviteLinkResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteInviteLinkResponse *
       cchat_room__delete_invite_link__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_invite_link__response__free_unpacked
                     (CChatRoomDeleteInviteLinkResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_session_active_chat_room_groups__request__get_packed_size
                     (const CChatRoomSetSessionActiveChatRoomGroupsRequest   *message);
size_t cchat_room__set_session_active_chat_room_groups__request__pack
                     (const CChatRoomSetSessionActiveChatRoomGroupsRequest   *message,
                      uint8_t             *out);
size_t cchat_room__set_session_active_chat_room_groups__request__pack_to_buffer
                     (const CChatRoomSetSessionActiveChatRoomGroupsRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetSessionActiveChatRoomGroupsRequest *
       cchat_room__set_session_active_chat_room_groups__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_session_active_chat_room_groups__request__free_unpacked
                     (CChatRoomSetSessionActiveChatRoomGroupsRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_session_active_chat_room_groups__response__get_packed_size
                     (const CChatRoomSetSessionActiveChatRoomGroupsResponse   *message);
size_t cchat_room__set_session_active_chat_room_groups__response__pack
                     (const CChatRoomSetSessionActiveChatRoomGroupsResponse   *message,
                      uint8_t             *out);
size_t cchat_room__set_session_active_chat_room_groups__response__pack_to_buffer
                     (const CChatRoomSetSessionActiveChatRoomGroupsResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetSessionActiveChatRoomGroupsResponse *
       cchat_room__set_session_active_chat_room_groups__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_session_active_chat_room_groups__response__free_unpacked
                     (CChatRoomSetSessionActiveChatRoomGroupsResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_user_chat_group_preferences__request__get_packed_size
                     (const CChatRoomSetUserChatGroupPreferencesRequest   *message);
size_t cchat_room__set_user_chat_group_preferences__request__pack
                     (const CChatRoomSetUserChatGroupPreferencesRequest   *message,
                      uint8_t             *out);
size_t cchat_room__set_user_chat_group_preferences__request__pack_to_buffer
                     (const CChatRoomSetUserChatGroupPreferencesRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetUserChatGroupPreferencesRequest *
       cchat_room__set_user_chat_group_preferences__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_user_chat_group_preferences__request__free_unpacked
                     (CChatRoomSetUserChatGroupPreferencesRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__set_user_chat_group_preferences__response__get_packed_size
                     (const CChatRoomSetUserChatGroupPreferencesResponse   *message);
size_t cchat_room__set_user_chat_group_preferences__response__pack
                     (const CChatRoomSetUserChatGroupPreferencesResponse   *message,
                      uint8_t             *out);
size_t cchat_room__set_user_chat_group_preferences__response__pack_to_buffer
                     (const CChatRoomSetUserChatGroupPreferencesResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSetUserChatGroupPreferencesResponse *
       cchat_room__set_user_chat_group_preferences__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__set_user_chat_group_preferences__response__free_unpacked
                     (CChatRoomSetUserChatGroupPreferencesResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_chat_messages__request__get_packed_size
                     (const CChatRoomDeleteChatMessagesRequest   *message);
size_t cchat_room__delete_chat_messages__request__pack
                     (const CChatRoomDeleteChatMessagesRequest   *message,
                      uint8_t             *out);
size_t cchat_room__delete_chat_messages__request__pack_to_buffer
                     (const CChatRoomDeleteChatMessagesRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteChatMessagesRequest *
       cchat_room__delete_chat_messages__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_chat_messages__request__free_unpacked
                     (CChatRoomDeleteChatMessagesRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__delete_chat_messages__response__get_packed_size
                     (const CChatRoomDeleteChatMessagesResponse   *message);
size_t cchat_room__delete_chat_messages__response__pack
                     (const CChatRoomDeleteChatMessagesResponse   *message,
                      uint8_t             *out);
size_t cchat_room__delete_chat_messages__response__pack_to_buffer
                     (const CChatRoomDeleteChatMessagesResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomDeleteChatMessagesResponse *
       cchat_room__delete_chat_messages__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__delete_chat_messages__response__free_unpacked
                     (CChatRoomDeleteChatMessagesResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__update_member_list_view__notification__get_packed_size
                     (const CChatRoomUpdateMemberListViewNotification   *message);
size_t cchat_room__update_member_list_view__notification__pack
                     (const CChatRoomUpdateMemberListViewNotification   *message,
                      uint8_t             *out);
size_t cchat_room__update_member_list_view__notification__pack_to_buffer
                     (const CChatRoomUpdateMemberListViewNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomUpdateMemberListViewNotification *
       cchat_room__update_member_list_view__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__update_member_list_view__notification__free_unpacked
                     (CChatRoomUpdateMemberListViewNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__search_members__request__get_packed_size
                     (const CChatRoomSearchMembersRequest   *message);
size_t cchat_room__search_members__request__pack
                     (const CChatRoomSearchMembersRequest   *message,
                      uint8_t             *out);
size_t cchat_room__search_members__request__pack_to_buffer
                     (const CChatRoomSearchMembersRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSearchMembersRequest *
       cchat_room__search_members__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__search_members__request__free_unpacked
                     (CChatRoomSearchMembersRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__search_members__response__get_packed_size
                     (const CChatRoomSearchMembersResponse   *message);
size_t cchat_room__search_members__response__pack
                     (const CChatRoomSearchMembersResponse   *message,
                      uint8_t             *out);
size_t cchat_room__search_members__response__pack_to_buffer
                     (const CChatRoomSearchMembersResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomSearchMembersResponse *
       cchat_room__search_members__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__search_members__response__free_unpacked
                     (CChatRoomSearchMembersResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__update_message_reaction__request__get_packed_size
                     (const CChatRoomUpdateMessageReactionRequest   *message);
size_t cchat_room__update_message_reaction__request__pack
                     (const CChatRoomUpdateMessageReactionRequest   *message,
                      uint8_t             *out);
size_t cchat_room__update_message_reaction__request__pack_to_buffer
                     (const CChatRoomUpdateMessageReactionRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomUpdateMessageReactionRequest *
       cchat_room__update_message_reaction__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__update_message_reaction__request__free_unpacked
                     (CChatRoomUpdateMessageReactionRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__update_message_reaction__response__get_packed_size
                     (const CChatRoomUpdateMessageReactionResponse   *message);
size_t cchat_room__update_message_reaction__response__pack
                     (const CChatRoomUpdateMessageReactionResponse   *message,
                      uint8_t             *out);
size_t cchat_room__update_message_reaction__response__pack_to_buffer
                     (const CChatRoomUpdateMessageReactionResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomUpdateMessageReactionResponse *
       cchat_room__update_message_reaction__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__update_message_reaction__response__free_unpacked
                     (CChatRoomUpdateMessageReactionResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_message_reaction_reactors__request__get_packed_size
                     (const CChatRoomGetMessageReactionReactorsRequest   *message);
size_t cchat_room__get_message_reaction_reactors__request__pack
                     (const CChatRoomGetMessageReactionReactorsRequest   *message,
                      uint8_t             *out);
size_t cchat_room__get_message_reaction_reactors__request__pack_to_buffer
                     (const CChatRoomGetMessageReactionReactorsRequest   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetMessageReactionReactorsRequest *
       cchat_room__get_message_reaction_reactors__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_message_reaction_reactors__request__free_unpacked
                     (CChatRoomGetMessageReactionReactorsRequest *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__get_message_reaction_reactors__response__get_packed_size
                     (const CChatRoomGetMessageReactionReactorsResponse   *message);
size_t cchat_room__get_message_reaction_reactors__response__pack
                     (const CChatRoomGetMessageReactionReactorsResponse   *message,
                      uint8_t             *out);
size_t cchat_room__get_message_reaction_reactors__response__pack_to_buffer
                     (const CChatRoomGetMessageReactionReactorsResponse   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomGetMessageReactionReactorsResponse *
       cchat_room__get_message_reaction_reactors__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__get_message_reaction_reactors__response__free_unpacked
                     (CChatRoomGetMessageReactionReactorsResponse *message,
                      ProtobufCAllocator *allocator);
size_t cclan_chat_rooms__get_clan_chat_room_info__request__get_packed_size
                     (const CClanChatRoomsGetClanChatRoomInfoRequest   *message);
size_t cclan_chat_rooms__get_clan_chat_room_info__request__pack
                     (const CClanChatRoomsGetClanChatRoomInfoRequest   *message,
                      uint8_t             *out);
size_t cclan_chat_rooms__get_clan_chat_room_info__request__pack_to_buffer
                     (const CClanChatRoomsGetClanChatRoomInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CClanChatRoomsGetClanChatRoomInfoRequest *
       cclan_chat_rooms__get_clan_chat_room_info__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cclan_chat_rooms__get_clan_chat_room_info__request__free_unpacked
                     (CClanChatRoomsGetClanChatRoomInfoRequest *message,
                      ProtobufCAllocator *allocator);
size_t cclan_chat_rooms__get_clan_chat_room_info__response__get_packed_size
                     (const CClanChatRoomsGetClanChatRoomInfoResponse   *message);
size_t cclan_chat_rooms__get_clan_chat_room_info__response__pack
                     (const CClanChatRoomsGetClanChatRoomInfoResponse   *message,
                      uint8_t             *out);
size_t cclan_chat_rooms__get_clan_chat_room_info__response__pack_to_buffer
                     (const CClanChatRoomsGetClanChatRoomInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CClanChatRoomsGetClanChatRoomInfoResponse *
       cclan_chat_rooms__get_clan_chat_room_info__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cclan_chat_rooms__get_clan_chat_room_info__response__free_unpacked
                     (CClanChatRoomsGetClanChatRoomInfoResponse *message,
                      ProtobufCAllocator *allocator);
size_t cclan_chat_rooms__set_clan_chat_room_private__request__get_packed_size
                     (const CClanChatRoomsSetClanChatRoomPrivateRequest   *message);
size_t cclan_chat_rooms__set_clan_chat_room_private__request__pack
                     (const CClanChatRoomsSetClanChatRoomPrivateRequest   *message,
                      uint8_t             *out);
size_t cclan_chat_rooms__set_clan_chat_room_private__request__pack_to_buffer
                     (const CClanChatRoomsSetClanChatRoomPrivateRequest   *message,
                      ProtobufCBuffer     *buffer);
CClanChatRoomsSetClanChatRoomPrivateRequest *
       cclan_chat_rooms__set_clan_chat_room_private__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cclan_chat_rooms__set_clan_chat_room_private__request__free_unpacked
                     (CClanChatRoomsSetClanChatRoomPrivateRequest *message,
                      ProtobufCAllocator *allocator);
size_t cclan_chat_rooms__set_clan_chat_room_private__response__get_packed_size
                     (const CClanChatRoomsSetClanChatRoomPrivateResponse   *message);
size_t cclan_chat_rooms__set_clan_chat_room_private__response__pack
                     (const CClanChatRoomsSetClanChatRoomPrivateResponse   *message,
                      uint8_t             *out);
size_t cclan_chat_rooms__set_clan_chat_room_private__response__pack_to_buffer
                     (const CClanChatRoomsSetClanChatRoomPrivateResponse   *message,
                      ProtobufCBuffer     *buffer);
CClanChatRoomsSetClanChatRoomPrivateResponse *
       cclan_chat_rooms__set_clan_chat_room_private__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cclan_chat_rooms__set_clan_chat_room_private__response__free_unpacked
                     (CClanChatRoomsSetClanChatRoomPrivateResponse *message,
                      ProtobufCAllocator *allocator);
size_t cchat_mentions__get_packed_size
                     (const CChatMentions   *message);
size_t cchat_mentions__pack
                     (const CChatMentions   *message,
                      uint8_t             *out);
size_t cchat_mentions__pack_to_buffer
                     (const CChatMentions   *message,
                      ProtobufCBuffer     *buffer);
CChatMentions *
       cchat_mentions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_mentions__free_unpacked
                     (CChatMentions *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__incoming_chat_message__notification__get_packed_size
                     (const CChatRoomIncomingChatMessageNotification   *message);
size_t cchat_room__incoming_chat_message__notification__pack
                     (const CChatRoomIncomingChatMessageNotification   *message,
                      uint8_t             *out);
size_t cchat_room__incoming_chat_message__notification__pack_to_buffer
                     (const CChatRoomIncomingChatMessageNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomIncomingChatMessageNotification *
       cchat_room__incoming_chat_message__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__incoming_chat_message__notification__free_unpacked
                     (CChatRoomIncomingChatMessageNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__chat_message_modified__notification__get_packed_size
                     (const CChatRoomChatMessageModifiedNotification   *message);
size_t cchat_room__chat_message_modified__notification__pack
                     (const CChatRoomChatMessageModifiedNotification   *message,
                      uint8_t             *out);
size_t cchat_room__chat_message_modified__notification__pack_to_buffer
                     (const CChatRoomChatMessageModifiedNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomChatMessageModifiedNotification *
       cchat_room__chat_message_modified__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__chat_message_modified__notification__free_unpacked
                     (CChatRoomChatMessageModifiedNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__member_state_change__notification__get_packed_size
                     (const CChatRoomMemberStateChangeNotification   *message);
size_t cchat_room__member_state_change__notification__pack
                     (const CChatRoomMemberStateChangeNotification   *message,
                      uint8_t             *out);
size_t cchat_room__member_state_change__notification__pack_to_buffer
                     (const CChatRoomMemberStateChangeNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomMemberStateChangeNotification *
       cchat_room__member_state_change__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__member_state_change__notification__free_unpacked
                     (CChatRoomMemberStateChangeNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__chat_room_header_state__notification__get_packed_size
                     (const CChatRoomChatRoomHeaderStateNotification   *message);
size_t cchat_room__chat_room_header_state__notification__pack
                     (const CChatRoomChatRoomHeaderStateNotification   *message,
                      uint8_t             *out);
size_t cchat_room__chat_room_header_state__notification__pack_to_buffer
                     (const CChatRoomChatRoomHeaderStateNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomChatRoomHeaderStateNotification *
       cchat_room__chat_room_header_state__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__chat_room_header_state__notification__free_unpacked
                     (CChatRoomChatRoomHeaderStateNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__chat_room_group_rooms_change__notification__get_packed_size
                     (const CChatRoomChatRoomGroupRoomsChangeNotification   *message);
size_t cchat_room__chat_room_group_rooms_change__notification__pack
                     (const CChatRoomChatRoomGroupRoomsChangeNotification   *message,
                      uint8_t             *out);
size_t cchat_room__chat_room_group_rooms_change__notification__pack_to_buffer
                     (const CChatRoomChatRoomGroupRoomsChangeNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomChatRoomGroupRoomsChangeNotification *
       cchat_room__chat_room_group_rooms_change__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__chat_room_group_rooms_change__notification__free_unpacked
                     (CChatRoomChatRoomGroupRoomsChangeNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__notify_should_rejoin_chat_room_voice_chat__notification__get_packed_size
                     (const CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification   *message);
size_t cchat_room__notify_should_rejoin_chat_room_voice_chat__notification__pack
                     (const CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification   *message,
                      uint8_t             *out);
size_t cchat_room__notify_should_rejoin_chat_room_voice_chat__notification__pack_to_buffer
                     (const CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification *
       cchat_room__notify_should_rejoin_chat_room_voice_chat__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__notify_should_rejoin_chat_room_voice_chat__notification__free_unpacked
                     (CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification *message,
                      ProtobufCAllocator *allocator);
size_t chat_room_client__notify_chat_group_user_state_changed__notification__get_packed_size
                     (const ChatRoomClientNotifyChatGroupUserStateChangedNotification   *message);
size_t chat_room_client__notify_chat_group_user_state_changed__notification__pack
                     (const ChatRoomClientNotifyChatGroupUserStateChangedNotification   *message,
                      uint8_t             *out);
size_t chat_room_client__notify_chat_group_user_state_changed__notification__pack_to_buffer
                     (const ChatRoomClientNotifyChatGroupUserStateChangedNotification   *message,
                      ProtobufCBuffer     *buffer);
ChatRoomClientNotifyChatGroupUserStateChangedNotification *
       chat_room_client__notify_chat_group_user_state_changed__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat_room_client__notify_chat_group_user_state_changed__notification__free_unpacked
                     (ChatRoomClientNotifyChatGroupUserStateChangedNotification *message,
                      ProtobufCAllocator *allocator);
size_t chat_room_client__notify_chat_room_disconnect__notification__get_packed_size
                     (const ChatRoomClientNotifyChatRoomDisconnectNotification   *message);
size_t chat_room_client__notify_chat_room_disconnect__notification__pack
                     (const ChatRoomClientNotifyChatRoomDisconnectNotification   *message,
                      uint8_t             *out);
size_t chat_room_client__notify_chat_room_disconnect__notification__pack_to_buffer
                     (const ChatRoomClientNotifyChatRoomDisconnectNotification   *message,
                      ProtobufCBuffer     *buffer);
ChatRoomClientNotifyChatRoomDisconnectNotification *
       chat_room_client__notify_chat_room_disconnect__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat_room_client__notify_chat_room_disconnect__notification__free_unpacked
                     (ChatRoomClientNotifyChatRoomDisconnectNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_member_list_view__get_packed_size
                     (const CChatRoomMemberListView   *message);
size_t cchat_room_member_list_view__pack
                     (const CChatRoomMemberListView   *message,
                      uint8_t             *out);
size_t cchat_room_member_list_view__pack_to_buffer
                     (const CChatRoomMemberListView   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomMemberListView *
       cchat_room_member_list_view__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_member_list_view__free_unpacked
                     (CChatRoomMemberListView *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_member_summary_counts__get_packed_size
                     (const CChatRoomMemberSummaryCounts   *message);
size_t cchat_room_member_summary_counts__pack
                     (const CChatRoomMemberSummaryCounts   *message,
                      uint8_t             *out);
size_t cchat_room_member_summary_counts__pack_to_buffer
                     (const CChatRoomMemberSummaryCounts   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomMemberSummaryCounts *
       cchat_room_member_summary_counts__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_member_summary_counts__free_unpacked
                     (CChatRoomMemberSummaryCounts *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room_client__member_list_view_updated__notification__get_packed_size
                     (const CChatRoomClientMemberListViewUpdatedNotification   *message);
size_t cchat_room_client__member_list_view_updated__notification__pack
                     (const CChatRoomClientMemberListViewUpdatedNotification   *message,
                      uint8_t             *out);
size_t cchat_room_client__member_list_view_updated__notification__pack_to_buffer
                     (const CChatRoomClientMemberListViewUpdatedNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomClientMemberListViewUpdatedNotification *
       cchat_room_client__member_list_view_updated__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room_client__member_list_view_updated__notification__free_unpacked
                     (CChatRoomClientMemberListViewUpdatedNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_room__message_reaction__notification__get_packed_size
                     (const CChatRoomMessageReactionNotification   *message);
size_t cchat_room__message_reaction__notification__pack
                     (const CChatRoomMessageReactionNotification   *message,
                      uint8_t             *out);
size_t cchat_room__message_reaction__notification__pack_to_buffer
                     (const CChatRoomMessageReactionNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatRoomMessageReactionNotification *
       cchat_room__message_reaction__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_room__message_reaction__notification__free_unpacked
                     (CChatRoomMessageReactionNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_usability__client_usability_metrics__notification__get_packed_size
                     (const CChatUsabilityClientUsabilityMetricsNotification   *message);
size_t cchat_usability__client_usability_metrics__notification__pack
                     (const CChatUsabilityClientUsabilityMetricsNotification   *message,
                      uint8_t             *out);
size_t cchat_usability__client_usability_metrics__notification__pack_to_buffer
                     (const CChatUsabilityClientUsabilityMetricsNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatUsabilityClientUsabilityMetricsNotification *
       cchat_usability__client_usability_metrics__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_usability__client_usability_metrics__notification__free_unpacked
                     (CChatUsabilityClientUsabilityMetricsNotification *message,
                      ProtobufCAllocator *allocator);
size_t cchat_usability__request_client_usability_metrics__notification__get_packed_size
                     (const CChatUsabilityRequestClientUsabilityMetricsNotification   *message);
size_t cchat_usability__request_client_usability_metrics__notification__pack
                     (const CChatUsabilityRequestClientUsabilityMetricsNotification   *message,
                      uint8_t             *out);
size_t cchat_usability__request_client_usability_metrics__notification__pack_to_buffer
                     (const CChatUsabilityRequestClientUsabilityMetricsNotification   *message,
                      ProtobufCBuffer     *buffer);
CChatUsabilityRequestClientUsabilityMetricsNotification *
       cchat_usability__request_client_usability_metrics__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cchat_usability__request_client_usability_metrics__notification__free_unpacked
                     (CChatUsabilityRequestClientUsabilityMetricsNotification *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CChatRequestFriendPersonaStatesRequest_Closure)
                 (const CChatRequestFriendPersonaStatesRequest *message,
                  void *closure_data);
typedef void (*CChatRequestFriendPersonaStatesResponse_Closure)
                 (const CChatRequestFriendPersonaStatesResponse *message,
                  void *closure_data);
typedef void (*CChatRoomCreateChatRoomGroupRequest_Closure)
                 (const CChatRoomCreateChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRole_Closure)
                 (const CChatRole *message,
                  void *closure_data);
typedef void (*CChatRoleActions_Closure)
                 (const CChatRoleActions *message,
                  void *closure_data);
typedef void (*CChatPartyBeacon_Closure)
                 (const CChatPartyBeacon *message,
                  void *closure_data);
typedef void (*CChatRoomGroupHeaderState_Closure)
                 (const CChatRoomGroupHeaderState *message,
                  void *closure_data);
typedef void (*CChatRoomMember_Closure)
                 (const CChatRoomMember *message,
                  void *closure_data);
typedef void (*CChatRoomState_Closure)
                 (const CChatRoomState *message,
                  void *closure_data);
typedef void (*CChatRoomGroupState_Closure)
                 (const CChatRoomGroupState *message,
                  void *closure_data);
typedef void (*CUserChatRoomState_Closure)
                 (const CUserChatRoomState *message,
                  void *closure_data);
typedef void (*CUserChatRoomGroupState_Closure)
                 (const CUserChatRoomGroupState *message,
                  void *closure_data);
typedef void (*CChatRoomCreateChatRoomGroupResponse_Closure)
                 (const CChatRoomCreateChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSaveChatRoomGroupRequest_Closure)
                 (const CChatRoomSaveChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSaveChatRoomGroupResponse_Closure)
                 (const CChatRoomSaveChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomRenameChatRoomGroupRequest_Closure)
                 (const CChatRoomRenameChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomRenameChatRoomGroupResponse_Closure)
                 (const CChatRoomRenameChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSetChatRoomGroupTaglineRequest_Closure)
                 (const CChatRoomSetChatRoomGroupTaglineRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetChatRoomGroupTaglineResponse_Closure)
                 (const CChatRoomSetChatRoomGroupTaglineResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSetChatRoomGroupAvatarRequest_Closure)
                 (const CChatRoomSetChatRoomGroupAvatarRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetChatRoomGroupAvatarResponse_Closure)
                 (const CChatRoomSetChatRoomGroupAvatarResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSetChatRoomGroupWatchingBroadcastRequest_Closure)
                 (const CChatRoomSetChatRoomGroupWatchingBroadcastRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetChatRoomGroupWatchingBroadcastResponse_Closure)
                 (const CChatRoomSetChatRoomGroupWatchingBroadcastResponse *message,
                  void *closure_data);
typedef void (*CChatRoomJoinMiniGameForChatRoomGroupRequest_Closure)
                 (const CChatRoomJoinMiniGameForChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomJoinMiniGameForChatRoomGroupResponse_Closure)
                 (const CChatRoomJoinMiniGameForChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomEndMiniGameForChatRoomGroupRequest_Closure)
                 (const CChatRoomEndMiniGameForChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomEndMiniGameForChatRoomGroupResponse_Closure)
                 (const CChatRoomEndMiniGameForChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomMuteUserRequest_Closure)
                 (const CChatRoomMuteUserRequest *message,
                  void *closure_data);
typedef void (*CChatRoomMuteUserResponse_Closure)
                 (const CChatRoomMuteUserResponse *message,
                  void *closure_data);
typedef void (*CChatRoomKickUserRequest_Closure)
                 (const CChatRoomKickUserRequest *message,
                  void *closure_data);
typedef void (*CChatRoomKickUserResponse_Closure)
                 (const CChatRoomKickUserResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSetUserBanStateRequest_Closure)
                 (const CChatRoomSetUserBanStateRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetUserBanStateResponse_Closure)
                 (const CChatRoomSetUserBanStateResponse *message,
                  void *closure_data);
typedef void (*CChatRoomRevokeInviteRequest_Closure)
                 (const CChatRoomRevokeInviteRequest *message,
                  void *closure_data);
typedef void (*CChatRoomRevokeInviteResponse_Closure)
                 (const CChatRoomRevokeInviteResponse *message,
                  void *closure_data);
typedef void (*CChatRoomCreateRoleRequest_Closure)
                 (const CChatRoomCreateRoleRequest *message,
                  void *closure_data);
typedef void (*CChatRoomCreateRoleResponse_Closure)
                 (const CChatRoomCreateRoleResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetRolesRequest_Closure)
                 (const CChatRoomGetRolesRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetRolesResponse_Closure)
                 (const CChatRoomGetRolesResponse *message,
                  void *closure_data);
typedef void (*CChatRoomRenameRoleRequest_Closure)
                 (const CChatRoomRenameRoleRequest *message,
                  void *closure_data);
typedef void (*CChatRoomRenameRoleResponse_Closure)
                 (const CChatRoomRenameRoleResponse *message,
                  void *closure_data);
typedef void (*CChatRoomReorderRoleRequest_Closure)
                 (const CChatRoomReorderRoleRequest *message,
                  void *closure_data);
typedef void (*CChatRoomReorderRoleResponse_Closure)
                 (const CChatRoomReorderRoleResponse *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteRoleRequest_Closure)
                 (const CChatRoomDeleteRoleRequest *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteRoleResponse_Closure)
                 (const CChatRoomDeleteRoleResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetRoleActionsRequest_Closure)
                 (const CChatRoomGetRoleActionsRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetRoleActionsResponse_Closure)
                 (const CChatRoomGetRoleActionsResponse *message,
                  void *closure_data);
typedef void (*CChatRoomReplaceRoleActionsRequest_Closure)
                 (const CChatRoomReplaceRoleActionsRequest *message,
                  void *closure_data);
typedef void (*CChatRoomReplaceRoleActionsResponse_Closure)
                 (const CChatRoomReplaceRoleActionsResponse *message,
                  void *closure_data);
typedef void (*CChatRoomAddRoleToUserRequest_Closure)
                 (const CChatRoomAddRoleToUserRequest *message,
                  void *closure_data);
typedef void (*CChatRoomAddRoleToUserResponse_Closure)
                 (const CChatRoomAddRoleToUserResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetRolesForUserRequest_Closure)
                 (const CChatRoomGetRolesForUserRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetRolesForUserResponse_Closure)
                 (const CChatRoomGetRolesForUserResponse *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteRoleFromUserRequest_Closure)
                 (const CChatRoomDeleteRoleFromUserRequest *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteRoleFromUserResponse_Closure)
                 (const CChatRoomDeleteRoleFromUserResponse *message,
                  void *closure_data);
typedef void (*CChatRoomJoinChatRoomGroupRequest_Closure)
                 (const CChatRoomJoinChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomJoinChatRoomGroupResponse_Closure)
                 (const CChatRoomJoinChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomInviteFriendToChatRoomGroupRequest_Closure)
                 (const CChatRoomInviteFriendToChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomInviteFriendToChatRoomGroupResponse_Closure)
                 (const CChatRoomInviteFriendToChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomLeaveChatRoomGroupRequest_Closure)
                 (const CChatRoomLeaveChatRoomGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomLeaveChatRoomGroupResponse_Closure)
                 (const CChatRoomLeaveChatRoomGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomCreateChatRoomRequest_Closure)
                 (const CChatRoomCreateChatRoomRequest *message,
                  void *closure_data);
typedef void (*CChatRoomCreateChatRoomResponse_Closure)
                 (const CChatRoomCreateChatRoomResponse *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteChatRoomRequest_Closure)
                 (const CChatRoomDeleteChatRoomRequest *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteChatRoomResponse_Closure)
                 (const CChatRoomDeleteChatRoomResponse *message,
                  void *closure_data);
typedef void (*CChatRoomRenameChatRoomRequest_Closure)
                 (const CChatRoomRenameChatRoomRequest *message,
                  void *closure_data);
typedef void (*CChatRoomRenameChatRoomResponse_Closure)
                 (const CChatRoomRenameChatRoomResponse *message,
                  void *closure_data);
typedef void (*CChatRoomReorderChatRoomRequest_Closure)
                 (const CChatRoomReorderChatRoomRequest *message,
                  void *closure_data);
typedef void (*CChatRoomReorderChatRoomResponse_Closure)
                 (const CChatRoomReorderChatRoomResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSendChatMessageRequest_Closure)
                 (const CChatRoomSendChatMessageRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSendChatMessageResponse_Closure)
                 (const CChatRoomSendChatMessageResponse *message,
                  void *closure_data);
typedef void (*CChatRoomJoinVoiceChatRequest_Closure)
                 (const CChatRoomJoinVoiceChatRequest *message,
                  void *closure_data);
typedef void (*CChatRoomJoinVoiceChatResponse_Closure)
                 (const CChatRoomJoinVoiceChatResponse *message,
                  void *closure_data);
typedef void (*CChatRoomLeaveVoiceChatRequest_Closure)
                 (const CChatRoomLeaveVoiceChatRequest *message,
                  void *closure_data);
typedef void (*CChatRoomLeaveVoiceChatResponse_Closure)
                 (const CChatRoomLeaveVoiceChatResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetMessageHistoryRequest_Closure)
                 (const CChatRoomGetMessageHistoryRequest *message,
                  void *closure_data);
typedef void (*ServerMessage_Closure)
                 (const ServerMessage *message,
                  void *closure_data);
typedef void (*CChatRoomGetMessageHistoryResponse__ChatMessage__MessageReaction_Closure)
                 (const CChatRoomGetMessageHistoryResponse__ChatMessage__MessageReaction *message,
                  void *closure_data);
typedef void (*CChatRoomGetMessageHistoryResponse__ChatMessage_Closure)
                 (const CChatRoomGetMessageHistoryResponse__ChatMessage *message,
                  void *closure_data);
typedef void (*CChatRoomGetMessageHistoryResponse_Closure)
                 (const CChatRoomGetMessageHistoryResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetMyChatRoomGroupsRequest_Closure)
                 (const CChatRoomGetMyChatRoomGroupsRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetChatRoomGroupSummaryResponse_Closure)
                 (const CChatRoomGetChatRoomGroupSummaryResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSummaryPair_Closure)
                 (const CChatRoomSummaryPair *message,
                  void *closure_data);
typedef void (*CChatRoomGetMyChatRoomGroupsResponse_Closure)
                 (const CChatRoomGetMyChatRoomGroupsResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetChatRoomGroupStateRequest_Closure)
                 (const CChatRoomGetChatRoomGroupStateRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetChatRoomGroupStateResponse_Closure)
                 (const CChatRoomGetChatRoomGroupStateResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetChatRoomGroupSummaryRequest_Closure)
                 (const CChatRoomGetChatRoomGroupSummaryRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetAppChatRoomGroupForceActiveRequest_Closure)
                 (const CChatRoomSetAppChatRoomGroupForceActiveRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetAppChatRoomGroupForceActiveResponse_Closure)
                 (const CChatRoomSetAppChatRoomGroupForceActiveResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSetAppChatRoomGroupStopForceActiveNotification_Closure)
                 (const CChatRoomSetAppChatRoomGroupStopForceActiveNotification *message,
                  void *closure_data);
typedef void (*CChatRoomAckChatMessageNotification_Closure)
                 (const CChatRoomAckChatMessageNotification *message,
                  void *closure_data);
typedef void (*CChatRoomCreateInviteLinkRequest_Closure)
                 (const CChatRoomCreateInviteLinkRequest *message,
                  void *closure_data);
typedef void (*CChatRoomCreateInviteLinkResponse_Closure)
                 (const CChatRoomCreateInviteLinkResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteLinkInfoRequest_Closure)
                 (const CChatRoomGetInviteLinkInfoRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteLinkInfoResponse_Closure)
                 (const CChatRoomGetInviteLinkInfoResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteInfoRequest_Closure)
                 (const CChatRoomGetInviteInfoRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteInfoResponse_Closure)
                 (const CChatRoomGetInviteInfoResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteLinksForGroupRequest_Closure)
                 (const CChatRoomGetInviteLinksForGroupRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteLinksForGroupResponse__LinkInfo_Closure)
                 (const CChatRoomGetInviteLinksForGroupResponse__LinkInfo *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteLinksForGroupResponse_Closure)
                 (const CChatRoomGetInviteLinksForGroupResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetBanListRequest_Closure)
                 (const CChatRoomGetBanListRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetBanListResponse__BanInfo_Closure)
                 (const CChatRoomGetBanListResponse__BanInfo *message,
                  void *closure_data);
typedef void (*CChatRoomGetBanListResponse_Closure)
                 (const CChatRoomGetBanListResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteListRequest_Closure)
                 (const CChatRoomGetInviteListRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGroupInvite_Closure)
                 (const CChatRoomGroupInvite *message,
                  void *closure_data);
typedef void (*CChatRoomGetInviteListResponse_Closure)
                 (const CChatRoomGetInviteListResponse *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteInviteLinkRequest_Closure)
                 (const CChatRoomDeleteInviteLinkRequest *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteInviteLinkResponse_Closure)
                 (const CChatRoomDeleteInviteLinkResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSetSessionActiveChatRoomGroupsRequest_Closure)
                 (const CChatRoomSetSessionActiveChatRoomGroupsRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetSessionActiveChatRoomGroupsResponse_Closure)
                 (const CChatRoomSetSessionActiveChatRoomGroupsResponse *message,
                  void *closure_data);
typedef void (*CChatRoomSetUserChatGroupPreferencesRequest__ChatGroupPreferences_Closure)
                 (const CChatRoomSetUserChatGroupPreferencesRequest__ChatGroupPreferences *message,
                  void *closure_data);
typedef void (*CChatRoomSetUserChatGroupPreferencesRequest__ChatRoomPreferences_Closure)
                 (const CChatRoomSetUserChatGroupPreferencesRequest__ChatRoomPreferences *message,
                  void *closure_data);
typedef void (*CChatRoomSetUserChatGroupPreferencesRequest_Closure)
                 (const CChatRoomSetUserChatGroupPreferencesRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSetUserChatGroupPreferencesResponse_Closure)
                 (const CChatRoomSetUserChatGroupPreferencesResponse *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteChatMessagesRequest__Message_Closure)
                 (const CChatRoomDeleteChatMessagesRequest__Message *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteChatMessagesRequest_Closure)
                 (const CChatRoomDeleteChatMessagesRequest *message,
                  void *closure_data);
typedef void (*CChatRoomDeleteChatMessagesResponse_Closure)
                 (const CChatRoomDeleteChatMessagesResponse *message,
                  void *closure_data);
typedef void (*CChatRoomUpdateMemberListViewNotification_Closure)
                 (const CChatRoomUpdateMemberListViewNotification *message,
                  void *closure_data);
typedef void (*CChatRoomSearchMembersRequest_Closure)
                 (const CChatRoomSearchMembersRequest *message,
                  void *closure_data);
typedef void (*CChatRoomSearchMembersResponse__MemberMatch_Closure)
                 (const CChatRoomSearchMembersResponse__MemberMatch *message,
                  void *closure_data);
typedef void (*CChatRoomSearchMembersResponse_Closure)
                 (const CChatRoomSearchMembersResponse *message,
                  void *closure_data);
typedef void (*CChatRoomUpdateMessageReactionRequest_Closure)
                 (const CChatRoomUpdateMessageReactionRequest *message,
                  void *closure_data);
typedef void (*CChatRoomUpdateMessageReactionResponse_Closure)
                 (const CChatRoomUpdateMessageReactionResponse *message,
                  void *closure_data);
typedef void (*CChatRoomGetMessageReactionReactorsRequest_Closure)
                 (const CChatRoomGetMessageReactionReactorsRequest *message,
                  void *closure_data);
typedef void (*CChatRoomGetMessageReactionReactorsResponse_Closure)
                 (const CChatRoomGetMessageReactionReactorsResponse *message,
                  void *closure_data);
typedef void (*CClanChatRoomsGetClanChatRoomInfoRequest_Closure)
                 (const CClanChatRoomsGetClanChatRoomInfoRequest *message,
                  void *closure_data);
typedef void (*CClanChatRoomsGetClanChatRoomInfoResponse_Closure)
                 (const CClanChatRoomsGetClanChatRoomInfoResponse *message,
                  void *closure_data);
typedef void (*CClanChatRoomsSetClanChatRoomPrivateRequest_Closure)
                 (const CClanChatRoomsSetClanChatRoomPrivateRequest *message,
                  void *closure_data);
typedef void (*CClanChatRoomsSetClanChatRoomPrivateResponse_Closure)
                 (const CClanChatRoomsSetClanChatRoomPrivateResponse *message,
                  void *closure_data);
typedef void (*CChatMentions_Closure)
                 (const CChatMentions *message,
                  void *closure_data);
typedef void (*CChatRoomIncomingChatMessageNotification_Closure)
                 (const CChatRoomIncomingChatMessageNotification *message,
                  void *closure_data);
typedef void (*CChatRoomChatMessageModifiedNotification__ChatMessage_Closure)
                 (const CChatRoomChatMessageModifiedNotification__ChatMessage *message,
                  void *closure_data);
typedef void (*CChatRoomChatMessageModifiedNotification_Closure)
                 (const CChatRoomChatMessageModifiedNotification *message,
                  void *closure_data);
typedef void (*CChatRoomMemberStateChangeNotification_Closure)
                 (const CChatRoomMemberStateChangeNotification *message,
                  void *closure_data);
typedef void (*CChatRoomChatRoomHeaderStateNotification_Closure)
                 (const CChatRoomChatRoomHeaderStateNotification *message,
                  void *closure_data);
typedef void (*CChatRoomChatRoomGroupRoomsChangeNotification_Closure)
                 (const CChatRoomChatRoomGroupRoomsChangeNotification *message,
                  void *closure_data);
typedef void (*CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification_Closure)
                 (const CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification *message,
                  void *closure_data);
typedef void (*ChatRoomClientNotifyChatGroupUserStateChangedNotification_Closure)
                 (const ChatRoomClientNotifyChatGroupUserStateChangedNotification *message,
                  void *closure_data);
typedef void (*ChatRoomClientNotifyChatRoomDisconnectNotification_Closure)
                 (const ChatRoomClientNotifyChatRoomDisconnectNotification *message,
                  void *closure_data);
typedef void (*CChatRoomMemberListView_Closure)
                 (const CChatRoomMemberListView *message,
                  void *closure_data);
typedef void (*CChatRoomMemberSummaryCounts_Closure)
                 (const CChatRoomMemberSummaryCounts *message,
                  void *closure_data);
typedef void (*CChatRoomClientMemberListViewUpdatedNotification__MemberListViewEntry_Closure)
                 (const CChatRoomClientMemberListViewUpdatedNotification__MemberListViewEntry *message,
                  void *closure_data);
typedef void (*CChatRoomClientMemberListViewUpdatedNotification_Closure)
                 (const CChatRoomClientMemberListViewUpdatedNotification *message,
                  void *closure_data);
typedef void (*CChatRoomMessageReactionNotification_Closure)
                 (const CChatRoomMessageReactionNotification *message,
                  void *closure_data);
typedef void (*CChatUsabilityClientUsabilityMetricsNotification__Settings_Closure)
                 (const CChatUsabilityClientUsabilityMetricsNotification__Settings *message,
                  void *closure_data);
typedef void (*CChatUsabilityClientUsabilityMetricsNotification__VoiceSettings_Closure)
                 (const CChatUsabilityClientUsabilityMetricsNotification__VoiceSettings *message,
                  void *closure_data);
typedef void (*CChatUsabilityClientUsabilityMetricsNotification__UIState__CategoryCollapseState_Closure)
                 (const CChatUsabilityClientUsabilityMetricsNotification__UIState__CategoryCollapseState *message,
                  void *closure_data);
typedef void (*CChatUsabilityClientUsabilityMetricsNotification__UIState_Closure)
                 (const CChatUsabilityClientUsabilityMetricsNotification__UIState *message,
                  void *closure_data);
typedef void (*CChatUsabilityClientUsabilityMetricsNotification__Metrics_Closure)
                 (const CChatUsabilityClientUsabilityMetricsNotification__Metrics *message,
                  void *closure_data);
typedef void (*CChatUsabilityClientUsabilityMetricsNotification_Closure)
                 (const CChatUsabilityClientUsabilityMetricsNotification *message,
                  void *closure_data);
typedef void (*CChatUsabilityRequestClientUsabilityMetricsNotification_Closure)
                 (const CChatUsabilityRequestClientUsabilityMetricsNotification *message,
                  void *closure_data);

/* --- services --- */

typedef struct Chat_Service Chat_Service;
struct Chat_Service
{
  ProtobufCService base;
  void (*request_friend_persona_states)(Chat_Service *service,
                                        const CChatRequestFriendPersonaStatesRequest *input,
                                        CChatRequestFriendPersonaStatesResponse_Closure closure,
                                        void *closure_data);
};
typedef void (*Chat_ServiceDestroy)(Chat_Service *);
void chat__init (Chat_Service *service,
                 Chat_ServiceDestroy destroy);
#define CHAT__BASE_INIT \
    { &chat__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CHAT__INIT(function_prefix__) \
    { CHAT__BASE_INIT,\
      function_prefix__ ## request_friend_persona_states  }
void chat__request_friend_persona_states(ProtobufCService *service,
                                         const CChatRequestFriendPersonaStatesRequest *input,
                                         CChatRequestFriendPersonaStatesResponse_Closure closure,
                                         void *closure_data);
typedef struct ChatRoom_Service ChatRoom_Service;
struct ChatRoom_Service
{
  ProtobufCService base;
  void (*create_chat_room_group)(ChatRoom_Service *service,
                                 const CChatRoomCreateChatRoomGroupRequest *input,
                                 CChatRoomCreateChatRoomGroupResponse_Closure closure,
                                 void *closure_data);
  void (*save_chat_room_group)(ChatRoom_Service *service,
                               const CChatRoomSaveChatRoomGroupRequest *input,
                               CChatRoomSaveChatRoomGroupResponse_Closure closure,
                               void *closure_data);
  void (*rename_chat_room_group)(ChatRoom_Service *service,
                                 const CChatRoomRenameChatRoomGroupRequest *input,
                                 CChatRoomRenameChatRoomGroupResponse_Closure closure,
                                 void *closure_data);
  void (*set_chat_room_group_tagline)(ChatRoom_Service *service,
                                      const CChatRoomSetChatRoomGroupTaglineRequest *input,
                                      CChatRoomSetChatRoomGroupTaglineResponse_Closure closure,
                                      void *closure_data);
  void (*set_chat_room_group_avatar)(ChatRoom_Service *service,
                                     const CChatRoomSetChatRoomGroupAvatarRequest *input,
                                     CChatRoomSetChatRoomGroupAvatarResponse_Closure closure,
                                     void *closure_data);
  void (*set_chat_room_group_watching_broadcast)(ChatRoom_Service *service,
                                                 const CChatRoomSetChatRoomGroupWatchingBroadcastRequest *input,
                                                 CChatRoomSetChatRoomGroupWatchingBroadcastResponse_Closure closure,
                                                 void *closure_data);
  void (*join_mini_game_for_chat_room_group)(ChatRoom_Service *service,
                                             const CChatRoomJoinMiniGameForChatRoomGroupRequest *input,
                                             CChatRoomJoinMiniGameForChatRoomGroupResponse_Closure closure,
                                             void *closure_data);
  void (*end_mini_game_for_chat_room_group)(ChatRoom_Service *service,
                                            const CChatRoomEndMiniGameForChatRoomGroupRequest *input,
                                            CChatRoomEndMiniGameForChatRoomGroupResponse_Closure closure,
                                            void *closure_data);
  void (*mute_user_in_group)(ChatRoom_Service *service,
                             const CChatRoomMuteUserRequest *input,
                             CChatRoomMuteUserResponse_Closure closure,
                             void *closure_data);
  void (*kick_user_from_group)(ChatRoom_Service *service,
                               const CChatRoomKickUserRequest *input,
                               CChatRoomKickUserResponse_Closure closure,
                               void *closure_data);
  void (*set_user_ban_state)(ChatRoom_Service *service,
                             const CChatRoomSetUserBanStateRequest *input,
                             CChatRoomSetUserBanStateResponse_Closure closure,
                             void *closure_data);
  void (*revoke_invite_to_group)(ChatRoom_Service *service,
                                 const CChatRoomRevokeInviteRequest *input,
                                 CChatRoomRevokeInviteResponse_Closure closure,
                                 void *closure_data);
  void (*create_role)(ChatRoom_Service *service,
                      const CChatRoomCreateRoleRequest *input,
                      CChatRoomCreateRoleResponse_Closure closure,
                      void *closure_data);
  void (*get_roles)(ChatRoom_Service *service,
                    const CChatRoomGetRolesRequest *input,
                    CChatRoomGetRolesResponse_Closure closure,
                    void *closure_data);
  void (*rename_role)(ChatRoom_Service *service,
                      const CChatRoomRenameRoleRequest *input,
                      CChatRoomRenameRoleResponse_Closure closure,
                      void *closure_data);
  void (*reorder_role)(ChatRoom_Service *service,
                       const CChatRoomReorderRoleRequest *input,
                       CChatRoomReorderRoleResponse_Closure closure,
                       void *closure_data);
  void (*delete_role)(ChatRoom_Service *service,
                      const CChatRoomDeleteRoleRequest *input,
                      CChatRoomDeleteRoleResponse_Closure closure,
                      void *closure_data);
  void (*get_role_actions)(ChatRoom_Service *service,
                           const CChatRoomGetRoleActionsRequest *input,
                           CChatRoomGetRoleActionsResponse_Closure closure,
                           void *closure_data);
  void (*replace_role_actions)(ChatRoom_Service *service,
                               const CChatRoomReplaceRoleActionsRequest *input,
                               CChatRoomReplaceRoleActionsResponse_Closure closure,
                               void *closure_data);
  void (*add_role_to_user)(ChatRoom_Service *service,
                           const CChatRoomAddRoleToUserRequest *input,
                           CChatRoomAddRoleToUserResponse_Closure closure,
                           void *closure_data);
  void (*get_roles_for_user)(ChatRoom_Service *service,
                             const CChatRoomGetRolesForUserRequest *input,
                             CChatRoomGetRolesForUserResponse_Closure closure,
                             void *closure_data);
  void (*delete_role_from_user)(ChatRoom_Service *service,
                                const CChatRoomDeleteRoleFromUserRequest *input,
                                CChatRoomDeleteRoleFromUserResponse_Closure closure,
                                void *closure_data);
  void (*join_chat_room_group)(ChatRoom_Service *service,
                               const CChatRoomJoinChatRoomGroupRequest *input,
                               CChatRoomJoinChatRoomGroupResponse_Closure closure,
                               void *closure_data);
  void (*invite_friend_to_chat_room_group)(ChatRoom_Service *service,
                                           const CChatRoomInviteFriendToChatRoomGroupRequest *input,
                                           CChatRoomInviteFriendToChatRoomGroupResponse_Closure closure,
                                           void *closure_data);
  void (*leave_chat_room_group)(ChatRoom_Service *service,
                                const CChatRoomLeaveChatRoomGroupRequest *input,
                                CChatRoomLeaveChatRoomGroupResponse_Closure closure,
                                void *closure_data);
  void (*create_chat_room)(ChatRoom_Service *service,
                           const CChatRoomCreateChatRoomRequest *input,
                           CChatRoomCreateChatRoomResponse_Closure closure,
                           void *closure_data);
  void (*delete_chat_room)(ChatRoom_Service *service,
                           const CChatRoomDeleteChatRoomRequest *input,
                           CChatRoomDeleteChatRoomResponse_Closure closure,
                           void *closure_data);
  void (*rename_chat_room)(ChatRoom_Service *service,
                           const CChatRoomRenameChatRoomRequest *input,
                           CChatRoomRenameChatRoomResponse_Closure closure,
                           void *closure_data);
  void (*reorder_chat_room)(ChatRoom_Service *service,
                            const CChatRoomReorderChatRoomRequest *input,
                            CChatRoomReorderChatRoomResponse_Closure closure,
                            void *closure_data);
  void (*send_chat_message)(ChatRoom_Service *service,
                            const CChatRoomSendChatMessageRequest *input,
                            CChatRoomSendChatMessageResponse_Closure closure,
                            void *closure_data);
  void (*join_voice_chat)(ChatRoom_Service *service,
                          const CChatRoomJoinVoiceChatRequest *input,
                          CChatRoomJoinVoiceChatResponse_Closure closure,
                          void *closure_data);
  void (*leave_voice_chat)(ChatRoom_Service *service,
                           const CChatRoomLeaveVoiceChatRequest *input,
                           CChatRoomLeaveVoiceChatResponse_Closure closure,
                           void *closure_data);
  void (*get_message_history)(ChatRoom_Service *service,
                              const CChatRoomGetMessageHistoryRequest *input,
                              CChatRoomGetMessageHistoryResponse_Closure closure,
                              void *closure_data);
  void (*get_my_chat_room_groups)(ChatRoom_Service *service,
                                  const CChatRoomGetMyChatRoomGroupsRequest *input,
                                  CChatRoomGetMyChatRoomGroupsResponse_Closure closure,
                                  void *closure_data);
  void (*get_chat_room_group_state)(ChatRoom_Service *service,
                                    const CChatRoomGetChatRoomGroupStateRequest *input,
                                    CChatRoomGetChatRoomGroupStateResponse_Closure closure,
                                    void *closure_data);
  void (*get_chat_room_group_summary)(ChatRoom_Service *service,
                                      const CChatRoomGetChatRoomGroupSummaryRequest *input,
                                      CChatRoomGetChatRoomGroupSummaryResponse_Closure closure,
                                      void *closure_data);
  void (*set_app_chat_room_group_force_active)(ChatRoom_Service *service,
                                               const CChatRoomSetAppChatRoomGroupForceActiveRequest *input,
                                               CChatRoomSetAppChatRoomGroupForceActiveResponse_Closure closure,
                                               void *closure_data);
  void (*set_app_chat_room_group_stop_force_active)(ChatRoom_Service *service,
                                                    const CChatRoomSetAppChatRoomGroupStopForceActiveNotification *input,
                                                    NoResponse_Closure closure,
                                                    void *closure_data);
  void (*ack_chat_message)(ChatRoom_Service *service,
                           const CChatRoomAckChatMessageNotification *input,
                           NoResponse_Closure closure,
                           void *closure_data);
  void (*create_invite_link)(ChatRoom_Service *service,
                             const CChatRoomCreateInviteLinkRequest *input,
                             CChatRoomCreateInviteLinkResponse_Closure closure,
                             void *closure_data);
  void (*get_invite_link_info)(ChatRoom_Service *service,
                               const CChatRoomGetInviteLinkInfoRequest *input,
                               CChatRoomGetInviteLinkInfoResponse_Closure closure,
                               void *closure_data);
  void (*get_invite_info)(ChatRoom_Service *service,
                          const CChatRoomGetInviteInfoRequest *input,
                          CChatRoomGetInviteInfoResponse_Closure closure,
                          void *closure_data);
  void (*get_invite_links_for_group)(ChatRoom_Service *service,
                                     const CChatRoomGetInviteLinksForGroupRequest *input,
                                     CChatRoomGetInviteLinksForGroupResponse_Closure closure,
                                     void *closure_data);
  void (*get_ban_list)(ChatRoom_Service *service,
                       const CChatRoomGetBanListRequest *input,
                       CChatRoomGetBanListResponse_Closure closure,
                       void *closure_data);
  void (*get_invite_list)(ChatRoom_Service *service,
                          const CChatRoomGetInviteListRequest *input,
                          CChatRoomGetInviteListResponse_Closure closure,
                          void *closure_data);
  void (*delete_invite_link)(ChatRoom_Service *service,
                             const CChatRoomDeleteInviteLinkRequest *input,
                             CChatRoomDeleteInviteLinkResponse_Closure closure,
                             void *closure_data);
  void (*set_session_active_chat_room_groups)(ChatRoom_Service *service,
                                              const CChatRoomSetSessionActiveChatRoomGroupsRequest *input,
                                              CChatRoomSetSessionActiveChatRoomGroupsResponse_Closure closure,
                                              void *closure_data);
  void (*set_user_chat_group_preferences)(ChatRoom_Service *service,
                                          const CChatRoomSetUserChatGroupPreferencesRequest *input,
                                          CChatRoomSetUserChatGroupPreferencesResponse_Closure closure,
                                          void *closure_data);
  void (*delete_chat_messages)(ChatRoom_Service *service,
                               const CChatRoomDeleteChatMessagesRequest *input,
                               CChatRoomDeleteChatMessagesResponse_Closure closure,
                               void *closure_data);
  void (*update_member_list_view)(ChatRoom_Service *service,
                                  const CChatRoomUpdateMemberListViewNotification *input,
                                  NoResponse_Closure closure,
                                  void *closure_data);
  void (*search_members)(ChatRoom_Service *service,
                         const CChatRoomSearchMembersRequest *input,
                         CChatRoomSearchMembersResponse_Closure closure,
                         void *closure_data);
  void (*update_message_reaction)(ChatRoom_Service *service,
                                  const CChatRoomUpdateMessageReactionRequest *input,
                                  CChatRoomUpdateMessageReactionResponse_Closure closure,
                                  void *closure_data);
  void (*get_message_reaction_reactors)(ChatRoom_Service *service,
                                        const CChatRoomGetMessageReactionReactorsRequest *input,
                                        CChatRoomGetMessageReactionReactorsResponse_Closure closure,
                                        void *closure_data);
};
typedef void (*ChatRoom_ServiceDestroy)(ChatRoom_Service *);
void chat_room__init (ChatRoom_Service *service,
                      ChatRoom_ServiceDestroy destroy);
#define CHAT_ROOM__BASE_INIT \
    { &chat_room__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CHAT_ROOM__INIT(function_prefix__) \
    { CHAT_ROOM__BASE_INIT,\
      function_prefix__ ## create_chat_room_group,\
      function_prefix__ ## save_chat_room_group,\
      function_prefix__ ## rename_chat_room_group,\
      function_prefix__ ## set_chat_room_group_tagline,\
      function_prefix__ ## set_chat_room_group_avatar,\
      function_prefix__ ## set_chat_room_group_watching_broadcast,\
      function_prefix__ ## join_mini_game_for_chat_room_group,\
      function_prefix__ ## end_mini_game_for_chat_room_group,\
      function_prefix__ ## mute_user_in_group,\
      function_prefix__ ## kick_user_from_group,\
      function_prefix__ ## set_user_ban_state,\
      function_prefix__ ## revoke_invite_to_group,\
      function_prefix__ ## create_role,\
      function_prefix__ ## get_roles,\
      function_prefix__ ## rename_role,\
      function_prefix__ ## reorder_role,\
      function_prefix__ ## delete_role,\
      function_prefix__ ## get_role_actions,\
      function_prefix__ ## replace_role_actions,\
      function_prefix__ ## add_role_to_user,\
      function_prefix__ ## get_roles_for_user,\
      function_prefix__ ## delete_role_from_user,\
      function_prefix__ ## join_chat_room_group,\
      function_prefix__ ## invite_friend_to_chat_room_group,\
      function_prefix__ ## leave_chat_room_group,\
      function_prefix__ ## create_chat_room,\
      function_prefix__ ## delete_chat_room,\
      function_prefix__ ## rename_chat_room,\
      function_prefix__ ## reorder_chat_room,\
      function_prefix__ ## send_chat_message,\
      function_prefix__ ## join_voice_chat,\
      function_prefix__ ## leave_voice_chat,\
      function_prefix__ ## get_message_history,\
      function_prefix__ ## get_my_chat_room_groups,\
      function_prefix__ ## get_chat_room_group_state,\
      function_prefix__ ## get_chat_room_group_summary,\
      function_prefix__ ## set_app_chat_room_group_force_active,\
      function_prefix__ ## set_app_chat_room_group_stop_force_active,\
      function_prefix__ ## ack_chat_message,\
      function_prefix__ ## create_invite_link,\
      function_prefix__ ## get_invite_link_info,\
      function_prefix__ ## get_invite_info,\
      function_prefix__ ## get_invite_links_for_group,\
      function_prefix__ ## get_ban_list,\
      function_prefix__ ## get_invite_list,\
      function_prefix__ ## delete_invite_link,\
      function_prefix__ ## set_session_active_chat_room_groups,\
      function_prefix__ ## set_user_chat_group_preferences,\
      function_prefix__ ## delete_chat_messages,\
      function_prefix__ ## update_member_list_view,\
      function_prefix__ ## search_members,\
      function_prefix__ ## update_message_reaction,\
      function_prefix__ ## get_message_reaction_reactors  }
void chat_room__create_chat_room_group(ProtobufCService *service,
                                       const CChatRoomCreateChatRoomGroupRequest *input,
                                       CChatRoomCreateChatRoomGroupResponse_Closure closure,
                                       void *closure_data);
void chat_room__save_chat_room_group(ProtobufCService *service,
                                     const CChatRoomSaveChatRoomGroupRequest *input,
                                     CChatRoomSaveChatRoomGroupResponse_Closure closure,
                                     void *closure_data);
void chat_room__rename_chat_room_group(ProtobufCService *service,
                                       const CChatRoomRenameChatRoomGroupRequest *input,
                                       CChatRoomRenameChatRoomGroupResponse_Closure closure,
                                       void *closure_data);
void chat_room__set_chat_room_group_tagline(ProtobufCService *service,
                                            const CChatRoomSetChatRoomGroupTaglineRequest *input,
                                            CChatRoomSetChatRoomGroupTaglineResponse_Closure closure,
                                            void *closure_data);
void chat_room__set_chat_room_group_avatar(ProtobufCService *service,
                                           const CChatRoomSetChatRoomGroupAvatarRequest *input,
                                           CChatRoomSetChatRoomGroupAvatarResponse_Closure closure,
                                           void *closure_data);
void chat_room__set_chat_room_group_watching_broadcast(ProtobufCService *service,
                                                       const CChatRoomSetChatRoomGroupWatchingBroadcastRequest *input,
                                                       CChatRoomSetChatRoomGroupWatchingBroadcastResponse_Closure closure,
                                                       void *closure_data);
void chat_room__join_mini_game_for_chat_room_group(ProtobufCService *service,
                                                   const CChatRoomJoinMiniGameForChatRoomGroupRequest *input,
                                                   CChatRoomJoinMiniGameForChatRoomGroupResponse_Closure closure,
                                                   void *closure_data);
void chat_room__end_mini_game_for_chat_room_group(ProtobufCService *service,
                                                  const CChatRoomEndMiniGameForChatRoomGroupRequest *input,
                                                  CChatRoomEndMiniGameForChatRoomGroupResponse_Closure closure,
                                                  void *closure_data);
void chat_room__mute_user_in_group(ProtobufCService *service,
                                   const CChatRoomMuteUserRequest *input,
                                   CChatRoomMuteUserResponse_Closure closure,
                                   void *closure_data);
void chat_room__kick_user_from_group(ProtobufCService *service,
                                     const CChatRoomKickUserRequest *input,
                                     CChatRoomKickUserResponse_Closure closure,
                                     void *closure_data);
void chat_room__set_user_ban_state(ProtobufCService *service,
                                   const CChatRoomSetUserBanStateRequest *input,
                                   CChatRoomSetUserBanStateResponse_Closure closure,
                                   void *closure_data);
void chat_room__revoke_invite_to_group(ProtobufCService *service,
                                       const CChatRoomRevokeInviteRequest *input,
                                       CChatRoomRevokeInviteResponse_Closure closure,
                                       void *closure_data);
void chat_room__create_role(ProtobufCService *service,
                            const CChatRoomCreateRoleRequest *input,
                            CChatRoomCreateRoleResponse_Closure closure,
                            void *closure_data);
void chat_room__get_roles(ProtobufCService *service,
                          const CChatRoomGetRolesRequest *input,
                          CChatRoomGetRolesResponse_Closure closure,
                          void *closure_data);
void chat_room__rename_role(ProtobufCService *service,
                            const CChatRoomRenameRoleRequest *input,
                            CChatRoomRenameRoleResponse_Closure closure,
                            void *closure_data);
void chat_room__reorder_role(ProtobufCService *service,
                             const CChatRoomReorderRoleRequest *input,
                             CChatRoomReorderRoleResponse_Closure closure,
                             void *closure_data);
void chat_room__delete_role(ProtobufCService *service,
                            const CChatRoomDeleteRoleRequest *input,
                            CChatRoomDeleteRoleResponse_Closure closure,
                            void *closure_data);
void chat_room__get_role_actions(ProtobufCService *service,
                                 const CChatRoomGetRoleActionsRequest *input,
                                 CChatRoomGetRoleActionsResponse_Closure closure,
                                 void *closure_data);
void chat_room__replace_role_actions(ProtobufCService *service,
                                     const CChatRoomReplaceRoleActionsRequest *input,
                                     CChatRoomReplaceRoleActionsResponse_Closure closure,
                                     void *closure_data);
void chat_room__add_role_to_user(ProtobufCService *service,
                                 const CChatRoomAddRoleToUserRequest *input,
                                 CChatRoomAddRoleToUserResponse_Closure closure,
                                 void *closure_data);
void chat_room__get_roles_for_user(ProtobufCService *service,
                                   const CChatRoomGetRolesForUserRequest *input,
                                   CChatRoomGetRolesForUserResponse_Closure closure,
                                   void *closure_data);
void chat_room__delete_role_from_user(ProtobufCService *service,
                                      const CChatRoomDeleteRoleFromUserRequest *input,
                                      CChatRoomDeleteRoleFromUserResponse_Closure closure,
                                      void *closure_data);
void chat_room__join_chat_room_group(ProtobufCService *service,
                                     const CChatRoomJoinChatRoomGroupRequest *input,
                                     CChatRoomJoinChatRoomGroupResponse_Closure closure,
                                     void *closure_data);
void chat_room__invite_friend_to_chat_room_group(ProtobufCService *service,
                                                 const CChatRoomInviteFriendToChatRoomGroupRequest *input,
                                                 CChatRoomInviteFriendToChatRoomGroupResponse_Closure closure,
                                                 void *closure_data);
void chat_room__leave_chat_room_group(ProtobufCService *service,
                                      const CChatRoomLeaveChatRoomGroupRequest *input,
                                      CChatRoomLeaveChatRoomGroupResponse_Closure closure,
                                      void *closure_data);
void chat_room__create_chat_room(ProtobufCService *service,
                                 const CChatRoomCreateChatRoomRequest *input,
                                 CChatRoomCreateChatRoomResponse_Closure closure,
                                 void *closure_data);
void chat_room__delete_chat_room(ProtobufCService *service,
                                 const CChatRoomDeleteChatRoomRequest *input,
                                 CChatRoomDeleteChatRoomResponse_Closure closure,
                                 void *closure_data);
void chat_room__rename_chat_room(ProtobufCService *service,
                                 const CChatRoomRenameChatRoomRequest *input,
                                 CChatRoomRenameChatRoomResponse_Closure closure,
                                 void *closure_data);
void chat_room__reorder_chat_room(ProtobufCService *service,
                                  const CChatRoomReorderChatRoomRequest *input,
                                  CChatRoomReorderChatRoomResponse_Closure closure,
                                  void *closure_data);
void chat_room__send_chat_message(ProtobufCService *service,
                                  const CChatRoomSendChatMessageRequest *input,
                                  CChatRoomSendChatMessageResponse_Closure closure,
                                  void *closure_data);
void chat_room__join_voice_chat(ProtobufCService *service,
                                const CChatRoomJoinVoiceChatRequest *input,
                                CChatRoomJoinVoiceChatResponse_Closure closure,
                                void *closure_data);
void chat_room__leave_voice_chat(ProtobufCService *service,
                                 const CChatRoomLeaveVoiceChatRequest *input,
                                 CChatRoomLeaveVoiceChatResponse_Closure closure,
                                 void *closure_data);
void chat_room__get_message_history(ProtobufCService *service,
                                    const CChatRoomGetMessageHistoryRequest *input,
                                    CChatRoomGetMessageHistoryResponse_Closure closure,
                                    void *closure_data);
void chat_room__get_my_chat_room_groups(ProtobufCService *service,
                                        const CChatRoomGetMyChatRoomGroupsRequest *input,
                                        CChatRoomGetMyChatRoomGroupsResponse_Closure closure,
                                        void *closure_data);
void chat_room__get_chat_room_group_state(ProtobufCService *service,
                                          const CChatRoomGetChatRoomGroupStateRequest *input,
                                          CChatRoomGetChatRoomGroupStateResponse_Closure closure,
                                          void *closure_data);
void chat_room__get_chat_room_group_summary(ProtobufCService *service,
                                            const CChatRoomGetChatRoomGroupSummaryRequest *input,
                                            CChatRoomGetChatRoomGroupSummaryResponse_Closure closure,
                                            void *closure_data);
void chat_room__set_app_chat_room_group_force_active(ProtobufCService *service,
                                                     const CChatRoomSetAppChatRoomGroupForceActiveRequest *input,
                                                     CChatRoomSetAppChatRoomGroupForceActiveResponse_Closure closure,
                                                     void *closure_data);
void chat_room__set_app_chat_room_group_stop_force_active(ProtobufCService *service,
                                                          const CChatRoomSetAppChatRoomGroupStopForceActiveNotification *input,
                                                          NoResponse_Closure closure,
                                                          void *closure_data);
void chat_room__ack_chat_message(ProtobufCService *service,
                                 const CChatRoomAckChatMessageNotification *input,
                                 NoResponse_Closure closure,
                                 void *closure_data);
void chat_room__create_invite_link(ProtobufCService *service,
                                   const CChatRoomCreateInviteLinkRequest *input,
                                   CChatRoomCreateInviteLinkResponse_Closure closure,
                                   void *closure_data);
void chat_room__get_invite_link_info(ProtobufCService *service,
                                     const CChatRoomGetInviteLinkInfoRequest *input,
                                     CChatRoomGetInviteLinkInfoResponse_Closure closure,
                                     void *closure_data);
void chat_room__get_invite_info(ProtobufCService *service,
                                const CChatRoomGetInviteInfoRequest *input,
                                CChatRoomGetInviteInfoResponse_Closure closure,
                                void *closure_data);
void chat_room__get_invite_links_for_group(ProtobufCService *service,
                                           const CChatRoomGetInviteLinksForGroupRequest *input,
                                           CChatRoomGetInviteLinksForGroupResponse_Closure closure,
                                           void *closure_data);
void chat_room__get_ban_list(ProtobufCService *service,
                             const CChatRoomGetBanListRequest *input,
                             CChatRoomGetBanListResponse_Closure closure,
                             void *closure_data);
void chat_room__get_invite_list(ProtobufCService *service,
                                const CChatRoomGetInviteListRequest *input,
                                CChatRoomGetInviteListResponse_Closure closure,
                                void *closure_data);
void chat_room__delete_invite_link(ProtobufCService *service,
                                   const CChatRoomDeleteInviteLinkRequest *input,
                                   CChatRoomDeleteInviteLinkResponse_Closure closure,
                                   void *closure_data);
void chat_room__set_session_active_chat_room_groups(ProtobufCService *service,
                                                    const CChatRoomSetSessionActiveChatRoomGroupsRequest *input,
                                                    CChatRoomSetSessionActiveChatRoomGroupsResponse_Closure closure,
                                                    void *closure_data);
void chat_room__set_user_chat_group_preferences(ProtobufCService *service,
                                                const CChatRoomSetUserChatGroupPreferencesRequest *input,
                                                CChatRoomSetUserChatGroupPreferencesResponse_Closure closure,
                                                void *closure_data);
void chat_room__delete_chat_messages(ProtobufCService *service,
                                     const CChatRoomDeleteChatMessagesRequest *input,
                                     CChatRoomDeleteChatMessagesResponse_Closure closure,
                                     void *closure_data);
void chat_room__update_member_list_view(ProtobufCService *service,
                                        const CChatRoomUpdateMemberListViewNotification *input,
                                        NoResponse_Closure closure,
                                        void *closure_data);
void chat_room__search_members(ProtobufCService *service,
                               const CChatRoomSearchMembersRequest *input,
                               CChatRoomSearchMembersResponse_Closure closure,
                               void *closure_data);
void chat_room__update_message_reaction(ProtobufCService *service,
                                        const CChatRoomUpdateMessageReactionRequest *input,
                                        CChatRoomUpdateMessageReactionResponse_Closure closure,
                                        void *closure_data);
void chat_room__get_message_reaction_reactors(ProtobufCService *service,
                                              const CChatRoomGetMessageReactionReactorsRequest *input,
                                              CChatRoomGetMessageReactionReactorsResponse_Closure closure,
                                              void *closure_data);
typedef struct ClanChatRooms_Service ClanChatRooms_Service;
struct ClanChatRooms_Service
{
  ProtobufCService base;
  void (*get_clan_chat_room_info)(ClanChatRooms_Service *service,
                                  const CClanChatRoomsGetClanChatRoomInfoRequest *input,
                                  CClanChatRoomsGetClanChatRoomInfoResponse_Closure closure,
                                  void *closure_data);
  void (*set_clan_chat_room_private)(ClanChatRooms_Service *service,
                                     const CClanChatRoomsSetClanChatRoomPrivateRequest *input,
                                     CClanChatRoomsSetClanChatRoomPrivateResponse_Closure closure,
                                     void *closure_data);
};
typedef void (*ClanChatRooms_ServiceDestroy)(ClanChatRooms_Service *);
void clan_chat_rooms__init (ClanChatRooms_Service *service,
                            ClanChatRooms_ServiceDestroy destroy);
#define CLAN_CHAT_ROOMS__BASE_INIT \
    { &clan_chat_rooms__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CLAN_CHAT_ROOMS__INIT(function_prefix__) \
    { CLAN_CHAT_ROOMS__BASE_INIT,\
      function_prefix__ ## get_clan_chat_room_info,\
      function_prefix__ ## set_clan_chat_room_private  }
void clan_chat_rooms__get_clan_chat_room_info(ProtobufCService *service,
                                              const CClanChatRoomsGetClanChatRoomInfoRequest *input,
                                              CClanChatRoomsGetClanChatRoomInfoResponse_Closure closure,
                                              void *closure_data);
void clan_chat_rooms__set_clan_chat_room_private(ProtobufCService *service,
                                                 const CClanChatRoomsSetClanChatRoomPrivateRequest *input,
                                                 CClanChatRoomsSetClanChatRoomPrivateResponse_Closure closure,
                                                 void *closure_data);
typedef struct ChatRoomClient_Service ChatRoomClient_Service;
struct ChatRoomClient_Service
{
  ProtobufCService base;
  void (*notify_incoming_chat_message)(ChatRoomClient_Service *service,
                                       const CChatRoomIncomingChatMessageNotification *input,
                                       NoResponse_Closure closure,
                                       void *closure_data);
  void (*notify_chat_message_modified)(ChatRoomClient_Service *service,
                                       const CChatRoomChatMessageModifiedNotification *input,
                                       NoResponse_Closure closure,
                                       void *closure_data);
  void (*notify_member_state_change)(ChatRoomClient_Service *service,
                                     const CChatRoomMemberStateChangeNotification *input,
                                     NoResponse_Closure closure,
                                     void *closure_data);
  void (*notify_chat_room_header_state_change)(ChatRoomClient_Service *service,
                                               const CChatRoomChatRoomHeaderStateNotification *input,
                                               NoResponse_Closure closure,
                                               void *closure_data);
  void (*notify_chat_room_group_rooms_change)(ChatRoomClient_Service *service,
                                              const CChatRoomChatRoomGroupRoomsChangeNotification *input,
                                              NoResponse_Closure closure,
                                              void *closure_data);
  void (*notify_should_rejoin_chat_room_voice_chat)(ChatRoomClient_Service *service,
                                                    const CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification *input,
                                                    NoResponse_Closure closure,
                                                    void *closure_data);
  void (*notify_chat_group_user_state_changed)(ChatRoomClient_Service *service,
                                               const ChatRoomClientNotifyChatGroupUserStateChangedNotification *input,
                                               NoResponse_Closure closure,
                                               void *closure_data);
  void (*notify_ack_chat_message_echo)(ChatRoomClient_Service *service,
                                       const CChatRoomAckChatMessageNotification *input,
                                       NoResponse_Closure closure,
                                       void *closure_data);
  void (*notify_chat_room_disconnect)(ChatRoomClient_Service *service,
                                      const ChatRoomClientNotifyChatRoomDisconnectNotification *input,
                                      NoResponse_Closure closure,
                                      void *closure_data);
  void (*notify_member_list_view_updated)(ChatRoomClient_Service *service,
                                          const CChatRoomClientMemberListViewUpdatedNotification *input,
                                          NoResponse_Closure closure,
                                          void *closure_data);
  void (*notify_message_reaction)(ChatRoomClient_Service *service,
                                  const CChatRoomMessageReactionNotification *input,
                                  NoResponse_Closure closure,
                                  void *closure_data);
};
typedef void (*ChatRoomClient_ServiceDestroy)(ChatRoomClient_Service *);
void chat_room_client__init (ChatRoomClient_Service *service,
                             ChatRoomClient_ServiceDestroy destroy);
#define CHAT_ROOM_CLIENT__BASE_INIT \
    { &chat_room_client__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CHAT_ROOM_CLIENT__INIT(function_prefix__) \
    { CHAT_ROOM_CLIENT__BASE_INIT,\
      function_prefix__ ## notify_incoming_chat_message,\
      function_prefix__ ## notify_chat_message_modified,\
      function_prefix__ ## notify_member_state_change,\
      function_prefix__ ## notify_chat_room_header_state_change,\
      function_prefix__ ## notify_chat_room_group_rooms_change,\
      function_prefix__ ## notify_should_rejoin_chat_room_voice_chat,\
      function_prefix__ ## notify_chat_group_user_state_changed,\
      function_prefix__ ## notify_ack_chat_message_echo,\
      function_prefix__ ## notify_chat_room_disconnect,\
      function_prefix__ ## notify_member_list_view_updated,\
      function_prefix__ ## notify_message_reaction  }
void chat_room_client__notify_incoming_chat_message(ProtobufCService *service,
                                                    const CChatRoomIncomingChatMessageNotification *input,
                                                    NoResponse_Closure closure,
                                                    void *closure_data);
void chat_room_client__notify_chat_message_modified(ProtobufCService *service,
                                                    const CChatRoomChatMessageModifiedNotification *input,
                                                    NoResponse_Closure closure,
                                                    void *closure_data);
void chat_room_client__notify_member_state_change(ProtobufCService *service,
                                                  const CChatRoomMemberStateChangeNotification *input,
                                                  NoResponse_Closure closure,
                                                  void *closure_data);
void chat_room_client__notify_chat_room_header_state_change(ProtobufCService *service,
                                                            const CChatRoomChatRoomHeaderStateNotification *input,
                                                            NoResponse_Closure closure,
                                                            void *closure_data);
void chat_room_client__notify_chat_room_group_rooms_change(ProtobufCService *service,
                                                           const CChatRoomChatRoomGroupRoomsChangeNotification *input,
                                                           NoResponse_Closure closure,
                                                           void *closure_data);
void chat_room_client__notify_should_rejoin_chat_room_voice_chat(ProtobufCService *service,
                                                                 const CChatRoomNotifyShouldRejoinChatRoomVoiceChatNotification *input,
                                                                 NoResponse_Closure closure,
                                                                 void *closure_data);
void chat_room_client__notify_chat_group_user_state_changed(ProtobufCService *service,
                                                            const ChatRoomClientNotifyChatGroupUserStateChangedNotification *input,
                                                            NoResponse_Closure closure,
                                                            void *closure_data);
void chat_room_client__notify_ack_chat_message_echo(ProtobufCService *service,
                                                    const CChatRoomAckChatMessageNotification *input,
                                                    NoResponse_Closure closure,
                                                    void *closure_data);
void chat_room_client__notify_chat_room_disconnect(ProtobufCService *service,
                                                   const ChatRoomClientNotifyChatRoomDisconnectNotification *input,
                                                   NoResponse_Closure closure,
                                                   void *closure_data);
void chat_room_client__notify_member_list_view_updated(ProtobufCService *service,
                                                       const CChatRoomClientMemberListViewUpdatedNotification *input,
                                                       NoResponse_Closure closure,
                                                       void *closure_data);
void chat_room_client__notify_message_reaction(ProtobufCService *service,
                                               const CChatRoomMessageReactionNotification *input,
                                               NoResponse_Closure closure,
                                               void *closure_data);
typedef struct ChatUsability_Service ChatUsability_Service;
struct ChatUsability_Service
{
  ProtobufCService base;
  void (*notify_client_usability_metrics)(ChatUsability_Service *service,
                                          const CChatUsabilityClientUsabilityMetricsNotification *input,
                                          NoResponse_Closure closure,
                                          void *closure_data);
};
typedef void (*ChatUsability_ServiceDestroy)(ChatUsability_Service *);
void chat_usability__init (ChatUsability_Service *service,
                           ChatUsability_ServiceDestroy destroy);
#define CHAT_USABILITY__BASE_INIT \
    { &chat_usability__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CHAT_USABILITY__INIT(function_prefix__) \
    { CHAT_USABILITY__BASE_INIT,\
      function_prefix__ ## notify_client_usability_metrics  }
void chat_usability__notify_client_usability_metrics(ProtobufCService *service,
                                                     const CChatUsabilityClientUsabilityMetricsNotification *input,
                                                     NoResponse_Closure closure,
                                                     void *closure_data);
typedef struct ChatUsabilityClient_Service ChatUsabilityClient_Service;
struct ChatUsabilityClient_Service
{
  ProtobufCService base;
  void (*notify_request_client_usability_metrics)(ChatUsabilityClient_Service *service,
                                                  const CChatUsabilityRequestClientUsabilityMetricsNotification *input,
                                                  NoResponse_Closure closure,
                                                  void *closure_data);
};
typedef void (*ChatUsabilityClient_ServiceDestroy)(ChatUsabilityClient_Service *);
void chat_usability_client__init (ChatUsabilityClient_Service *service,
                                  ChatUsabilityClient_ServiceDestroy destroy);
#define CHAT_USABILITY_CLIENT__BASE_INIT \
    { &chat_usability_client__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CHAT_USABILITY_CLIENT__INIT(function_prefix__) \
    { CHAT_USABILITY_CLIENT__BASE_INIT,\
      function_prefix__ ## notify_request_client_usability_metrics  }
void chat_usability_client__notify_request_client_usability_metrics(ProtobufCService *service,
                                                                    const CChatUsabilityRequestClientUsabilityMetricsNotification *input,
                                                                    NoResponse_Closure closure,
                                                                    void *closure_data);

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_steammessages_5fchat_2esteamclient_2eproto__INCLUDED */
