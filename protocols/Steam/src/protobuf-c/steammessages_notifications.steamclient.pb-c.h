/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steammessages_notifications.steamclient.proto */

#ifndef PROTOBUF_C_steammessages_5fnotifications_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_C_steammessages_5fnotifications_2esteamclient_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages_base.pb-c.h"
#include "steammessages_unified_base.steamclient.pb-c.h"

struct SteamNotificationData;
struct CSteamNotificationNotificationsReceivedNotification;
struct SteamNotificationPreference;
struct CSteamNotificationPreferencesUpdatedNotification;


/* --- enums --- */

typedef enum _ESteamNotificationType {
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_Invalid = 0,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_Test = 1,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_Gift = 2,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_Comment = 3,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_Item = 4,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_FriendInvite = 5,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_MajorSale = 6,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_PreloadAvailable = 7,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_Wishlist = 8,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_TradeOffer = 9,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_General = 10,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_HelpRequest = 11,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_AsyncGame = 12,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_ChatMsg = 13,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_ModeratorMsg = 14,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_ParentalFeatureAccessRequest = 15,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_FamilyInvite = 16,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_FamilyPurchaseRequest = 17,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_ParentalPlaytimeRequest = 18,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_FamilyPurchaseRequestResponse = 19,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_ParentalFeatureAccessResponse = 20,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_ParentalPlaytimeResponse = 21,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_RequestedGameAdded = 22,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_SendToPhone = 23,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_ClipDownloaded = 24,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_2FAPrompt = 25,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_MobileConfirmation = 26,
  ESTEAM_NOTIFICATION_TYPE__k_ESteamNotificationType_PartnerEvent = 27
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTEAM_NOTIFICATION_TYPE)
} ESteamNotificationType;

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    esteam_notification_type__descriptor;
extern const ProtobufCMessageDescriptor steam_notification_data__descriptor;
extern const ProtobufCMessageDescriptor csteam_notification__notifications_received__notification__descriptor;
extern const ProtobufCMessageDescriptor steam_notification_preference__descriptor;
extern const ProtobufCMessageDescriptor csteam_notification__preferences_updated__notification__descriptor;
extern const ProtobufCServiceDescriptor steam_notification_client__descriptor;

/* --- messages --- */

extern "C" void message_init_generic(const ProtobufCMessageDescriptor * desc, ProtobufCMessage * message);

struct SteamNotificationData : public ProtobufCppMessage
{
  SteamNotificationData() :
     ProtobufCppMessage(steam_notification_data__descriptor)
  {}

  protobuf_c_boolean has_notification_id;
  uint64_t notification_id;
  protobuf_c_boolean has_notification_targets;
  uint32_t notification_targets;
  protobuf_c_boolean has_notification_type;
  ESteamNotificationType notification_type;
  char *body_data;
  protobuf_c_boolean has_read;
  protobuf_c_boolean read;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_hidden;
  protobuf_c_boolean hidden;
  protobuf_c_boolean has_expiry;
  uint32_t expiry;
  protobuf_c_boolean has_viewed;
  uint32_t viewed;
};

struct CSteamNotificationNotificationsReceivedNotification : public ProtobufCppMessage
{
  CSteamNotificationNotificationsReceivedNotification() :
     ProtobufCppMessage(csteam_notification__notifications_received__notification__descriptor)
  {}

  size_t n_notifications;
  SteamNotificationData **notifications;
  protobuf_c_boolean has_pending_gift_count;
  uint32_t pending_gift_count;
  protobuf_c_boolean has_pending_friend_count;
  uint32_t pending_friend_count;
  protobuf_c_boolean has_pending_family_invite_count;
  uint32_t pending_family_invite_count;
};

struct SteamNotificationPreference : public ProtobufCppMessage
{
  SteamNotificationPreference() :
     ProtobufCppMessage(steam_notification_preference__descriptor)
  {}

  protobuf_c_boolean has_notification_type;
  ESteamNotificationType notification_type;
  protobuf_c_boolean has_notification_targets;
  uint32_t notification_targets;
};

struct CSteamNotificationPreferencesUpdatedNotification : public ProtobufCppMessage
{
  CSteamNotificationPreferencesUpdatedNotification() :
     ProtobufCppMessage(csteam_notification__preferences_updated__notification__descriptor)
  {}

  size_t n_preferences;
  SteamNotificationPreference **preferences;
};

size_t steam_notification_data__get_packed_size
                     (const SteamNotificationData   *message);
size_t steam_notification_data__pack
                     (const SteamNotificationData   *message,
                      uint8_t             *out);
size_t steam_notification_data__pack_to_buffer
                     (const SteamNotificationData   *message,
                      ProtobufCBuffer     *buffer);
SteamNotificationData *
       steam_notification_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   steam_notification_data__free_unpacked
                     (SteamNotificationData *message,
                      ProtobufCAllocator *allocator);
size_t csteam_notification__notifications_received__notification__get_packed_size
                     (const CSteamNotificationNotificationsReceivedNotification   *message);
size_t csteam_notification__notifications_received__notification__pack
                     (const CSteamNotificationNotificationsReceivedNotification   *message,
                      uint8_t             *out);
size_t csteam_notification__notifications_received__notification__pack_to_buffer
                     (const CSteamNotificationNotificationsReceivedNotification   *message,
                      ProtobufCBuffer     *buffer);
CSteamNotificationNotificationsReceivedNotification *
       csteam_notification__notifications_received__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csteam_notification__notifications_received__notification__free_unpacked
                     (CSteamNotificationNotificationsReceivedNotification *message,
                      ProtobufCAllocator *allocator);
size_t steam_notification_preference__get_packed_size
                     (const SteamNotificationPreference   *message);
size_t steam_notification_preference__pack
                     (const SteamNotificationPreference   *message,
                      uint8_t             *out);
size_t steam_notification_preference__pack_to_buffer
                     (const SteamNotificationPreference   *message,
                      ProtobufCBuffer     *buffer);
SteamNotificationPreference *
       steam_notification_preference__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   steam_notification_preference__free_unpacked
                     (SteamNotificationPreference *message,
                      ProtobufCAllocator *allocator);
size_t csteam_notification__preferences_updated__notification__get_packed_size
                     (const CSteamNotificationPreferencesUpdatedNotification   *message);
size_t csteam_notification__preferences_updated__notification__pack
                     (const CSteamNotificationPreferencesUpdatedNotification   *message,
                      uint8_t             *out);
size_t csteam_notification__preferences_updated__notification__pack_to_buffer
                     (const CSteamNotificationPreferencesUpdatedNotification   *message,
                      ProtobufCBuffer     *buffer);
CSteamNotificationPreferencesUpdatedNotification *
       csteam_notification__preferences_updated__notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csteam_notification__preferences_updated__notification__free_unpacked
                     (CSteamNotificationPreferencesUpdatedNotification *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SteamNotificationData_Closure)
                 (const SteamNotificationData *message,
                  void *closure_data);
typedef void (*CSteamNotificationNotificationsReceivedNotification_Closure)
                 (const CSteamNotificationNotificationsReceivedNotification *message,
                  void *closure_data);
typedef void (*SteamNotificationPreference_Closure)
                 (const SteamNotificationPreference *message,
                  void *closure_data);
typedef void (*CSteamNotificationPreferencesUpdatedNotification_Closure)
                 (const CSteamNotificationPreferencesUpdatedNotification *message,
                  void *closure_data);

/* --- services --- */

typedef struct SteamNotificationClient_Service SteamNotificationClient_Service;
struct SteamNotificationClient_Service
{
  ProtobufCService base;
  void (*notifications_received)(SteamNotificationClient_Service *service,
                                 const CSteamNotificationNotificationsReceivedNotification *input,
                                 NoResponse_Closure closure,
                                 void *closure_data);
  void (*preferences_updated)(SteamNotificationClient_Service *service,
                              const CSteamNotificationPreferencesUpdatedNotification *input,
                              NoResponse_Closure closure,
                              void *closure_data);
};
typedef void (*SteamNotificationClient_ServiceDestroy)(SteamNotificationClient_Service *);
void steam_notification_client__init (SteamNotificationClient_Service *service,
                                      SteamNotificationClient_ServiceDestroy destroy);
#define STEAM_NOTIFICATION_CLIENT__BASE_INIT \
    { &steam_notification_client__descriptor, protobuf_c_service_invoke_internal, NULL }
#define STEAM_NOTIFICATION_CLIENT__INIT(function_prefix__) \
    { STEAM_NOTIFICATION_CLIENT__BASE_INIT,\
      function_prefix__ ## notifications_received,\
      function_prefix__ ## preferences_updated  }
void steam_notification_client__notifications_received(ProtobufCService *service,
                                                       const CSteamNotificationNotificationsReceivedNotification *input,
                                                       NoResponse_Closure closure,
                                                       void *closure_data);
void steam_notification_client__preferences_updated(ProtobufCService *service,
                                                    const CSteamNotificationPreferencesUpdatedNotification *input,
                                                    NoResponse_Closure closure,
                                                    void *closure_data);

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_steammessages_5fnotifications_2esteamclient_2eproto__INCLUDED */
